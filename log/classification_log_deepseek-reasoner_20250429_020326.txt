Label: ASP, Predicted: FJSSP, Index: 63
Description: A biotech facility orchestrates <num_jobs> sterile operations across <num_machines> isolator units to produce mRNA vaccines. Tasks like lipid nanoparticle synthesis, vial filling, and cryogenic storage are interdependent (e.g., filling requires completed synthesis). <precedence_relations> captures FDA-mandated workflows, and <processing_times> include contamination checks. The goal is to minimize production time during pandemic-scale demand.
Reason: The problem involves interdependent tasks with FDA-mandated precedence constraints (predefined operation order) and requires scheduling across multiple isolator units (machines). The isolator units likely allow flexibility in machine assignment for operations (e.g., lipid synthesis, vial filling) rather than fixed machine assignments, as the focus is on pandemic-scale demand and contamination checks, which suggest dynamic resource allocation. This matches FJSSP, which permits flexible machine choice per operation while adhering to predefined operation sequences.
--------------------------------------------------------------------------------
Label: JSSP, Predicted: FSSP, Index: 4
Description: A PCB factory assembles <num_jobs> circuit board orders through sequential stages (e.g., solder paste application, component placement, reflow soldering, testing) on <num_machines> dedicated machines. Each stage is permanently assigned to a machine with fixed durations in <processing_times>. Machines process one stage at a time, and orders must follow their assembly sequence strictly. The objective is to minimize total production time by optimizing the schedule while adhering to precision manufacturing tolerances.
Reason: The problem describes a scenario where all jobs (orders) follow the same sequential stages (e.g., solder paste, component placement, etc.) on dedicated machines. Each stage is permanently assigned to a single machine, and jobs must strictly adhere to the assembly sequence. This aligns with the Flow-Shop Scheduling Problem (FSSP), where all jobs share the same machine sequence and flow through stages in a fixed order. The absence of parallel machines per stage (as in HFSSP) or flexible machine assignments (as in FJSSP) further confirms FSSP as the correct variant.
--------------------------------------------------------------------------------
Label: JSSP, Predicted: FSSP, Index: 31
Description: A pharmaceutical plant handles <num_jobs> vaccine batches through sterile sequential stages (e.g., vial filling, lyophilization, capping, labeling) on <num_machines> isolator-protected machines. Each stage is irrevocably tied to a contamination-controlled machine with fixed timings in <processing_times>. Machines process one batch at a time, and batches must follow regulatory-approved sequences without overlap. The objective is to minimize total production time while adhering to Good Manufacturing Practice (GMP) constraints.
Reason: The problem describes a scenario where all batches must follow the same sequential stages (e.g., vial filling → lyophilization → capping → labeling), with each stage tied to a specific machine. This matches the Flow-Shop Scheduling Problem (FSSP), where all jobs (batches) follow the same machine sequence. There is no mention of parallel machines per stage (ruling out HFSSP) or flexibility in machine assignment (ruling out FJSSP). The predefined, identical sequence for all batches aligns with FSSP.
--------------------------------------------------------------------------------
Label: FJSSP, Predicted: HFSSP, Index: 28
Description: An automotive plant assembles <num_jobs> hybrid gearboxes, with operations such as gear cutting, heat treatment, assembly, and dynamometer testing. Each operation may be performed by one of <num_machines> machines, with varying speeds (<processing_times>). The operation sequence is fixed, and tasks cannot overlap on the same machine. The scheduling aims to minimize the total production time while maintaining precision for hybrid drivetrain compatibility.
Reason: The problem describes a fixed operation sequence for all jobs (gear cutting, heat treatment, assembly, testing), which aligns with a flow-shop structure. Each operation can be processed by one of multiple machines with varying speeds, indicating parallel machines at each stage. This matches the definition of the Hybrid Flow-shop Scheduling Problem (HFSSP), where multiple stages have parallel machines.
--------------------------------------------------------------------------------
Label: FJSSP, Predicted: HFSSP, Index: 30
Description: A craft brewery schedules <num_jobs> batches of specialty beers, each requiring mashing, boiling, fermenting, and bottling in strict sequence. Each stage can be processed by one of <num_machines> tanks or machines with varying capacities and efficiency levels. Processing times differ based on equipment (e.g., fermentation vats vs. rapid-cooling systems), as detailed in <processing_times>. Non-preemptive operations must avoid overlaps on shared equipment. The goal is to minimize the makespan while accommodating seasonal demand spikes.
Reason: The problem describes a scheduling scenario where each job (beer batch) must follow a strict sequence of stages (mashing, boiling, fermenting, bottling), and each stage has multiple parallel machines/tanks with varying capacities and efficiency. This matches the Hybrid Flow-shop Scheduling Problem (HFSSP), which involves multiple stages with parallel machines in at least one stage, and all jobs follow the same predefined order through the stages. The strict sequence and parallel machines at each stage align with HFSSP, while flexibility in machine choice per stage (due to varying capacities/efficiency) distinguishes it from basic FSSP.
--------------------------------------------------------------------------------
Label: FJSSP, Predicted: HFSSP, Index: 47
Description: A space tech company assembles <num_jobs> modular satellite components (e.g., thruster modules, antenna arrays) through ordered operations: precision welding, thermal coating, and functional testing. Each operation can use <num_machines> interchangeable robotic cells or manual stations, with durations logged in <processing_times>. No task splitting is allowed. The objective is to minimize makespan to meet tight launch windows.
Reason: The problem involves ordered operations (welding, coating, testing) that all jobs must follow sequentially, indicating a flow-shop structure. Additionally, each operation can use multiple interchangeable machines (parallel robotic cells or stations), which aligns with the Hybrid Flow-shop (HFSSP) definition of having multiple stages with parallel machines in at least one stage. This differs from FJSSP, where operation sequences might vary per job, and FSSP, which assumes a single machine per stage. The fixed operation sequence and parallel machines per stage make HFSSP the best fit.
--------------------------------------------------------------------------------
Label: FJSSP, Predicted: HFSSP, Index: 55
Description: A tech service center processes <num_jobs> smartphone screen repairs, each requiring a sequence of operations: screen removal, adhesive cleaning, new screen installation, and quality testing. Each operation can be performed by one of <num_machines> specialized workstations, with varying efficiency levels. The processing times for each machine are detailed in <processing_times>, and operations cannot be interrupted once started. The goal is to minimize the makespan—the total time to complete all repairs—while ensuring high-quality outcomes.
Reason: The problem describes a sequence of operations (screen removal, adhesive cleaning, etc.) that all jobs must follow in the same order, which aligns with the flow-shop structure. Each operation (stage) can be processed by one of multiple specialized workstations (parallel machines), making it a Hybrid Flow-shop Scheduling Problem (HFSSP). This differs from FJSSP, where operations might have flexible machine assignments but not necessarily follow the same sequence for all jobs.
--------------------------------------------------------------------------------
Label: JSSP, Predicted: FSSP, Index: 15
Description: A ceramic manufacturing plant processes <num_jobs> tile batches through a strict sequence of glazing stages (e.g., base coating, pattern printing, kiln firing, quality inspection), each permanently assigned to one of <num_machines> specialized machines. Processing durations are fixed per <processing_times>, and machines enforce single-operation exclusivity. Batches must follow their predefined glazing sequence without deviation, as parallel processing would compromise product integrity. The scheduling challenge is to minimize makespan by optimizing the workflow across all machines while adhering to ceramic industry curing and drying constraints.
Reason: The problem describes batches following a strict sequence of glazing stages (e.g., base coating, pattern printing, kiln firing) with each stage permanently assigned to a dedicated machine. This implies all jobs follow the same machine sequence, which aligns with the Flow-Shop Scheduling Problem (FSSP) definition. The absence of parallel machines per stage or flexible machine assignments excludes other variants like HFSSP or FJSSP. The predefined, identical processing order for all jobs matches FSSP characteristics.
--------------------------------------------------------------------------------
Label: FJSSP, Predicted: HFSSP, Index: 41
Description: A sportswear facility produces <num_jobs> personalized sneaker orders, each involving design printing, midsole molding, stitching, and quality checks in strict sequence. Operations are assigned to <num_machines> hybrid machines (e.g., 3D printers, laser cutters), with task durations dependent on machine capabilities (<processing_times>). The schedule must minimize production time while accommodating last-minute design changes from customers.
Reason: The problem involves a strict sequence of operations (design, midsole, stitching, QC) for all jobs, indicating a flow-shop structure. The presence of multiple hybrid machines (e.g., 3D printers, laser cutters) with varying capabilities for tasks suggests parallel machines at each stage (e.g., design printing on multiple 3D printers), aligning with the Hybrid Flow-shop Scheduling Problem (HFSSP), which combines flow-shop sequencing with parallel machines in at least one stage.
--------------------------------------------------------------------------------
Label: JSSP, Predicted: HFSSP, Index: 43
Description: An aerospace research center schedules <num_jobs> experimental vehicle tests through sequential preparation stages (e.g., model mounting, sensor calibration, shockwave imaging) in <num_machines> specialized test cells. Each stage is bound to specific infrastructure (e.g., optical diagnostics rigs) with durations from <processing_times>. Cells operate exclusively due to extreme conditions (Mach 7+), and tests require strict procedural sequences. The goal is to minimize total testing timeline while synchronizing high-speed data acquisition systems across all experiments.
Reason: The problem involves multiple sequential stages (flow-shop structure) with specialized infrastructure (test cells) for each stage. Since the problem mentions <num_machines> test cells, this implies parallel machines at one or more stages (e.g., multiple optical diagnostics rigs for a single stage), which aligns with the Hybrid Flow-shop Scheduling Problem (HFSSP). The strict procedural sequences enforce a fixed flow order across stages, and synchronization requirements further support the need for parallel machine coordination at specific stages.
--------------------------------------------------------------------------------
Label: FJSSP, Predicted: HFSSP, Index: 78
Description: A spacecraft manufacturer assembles <num_jobs> modular habitat units for orbital stations, with operations like structural welding, life-support system integration, radiation shielding, and leak testing. Each operation must follow a strict sequence but can be assigned to any compatible robotic arm or workstation from <num_machines>. Processing times vary by machine (<processing_times>), and tasks are atomic. The goal is to minimize the total construction time to meet tight launch windows.
Reason: The problem involves a strict sequence of operations (like a flow shop) for all jobs, with each operation (stage) capable of being processed on any compatible machine (parallel machines per stage). This aligns with the Hybrid Flow-shop Scheduling Problem (HFSSP), which features multiple stages with parallel machines in at least one stage. The strict operation sequence across all jobs and flexible machine assignment per operation fit HFSSP better than FJSSP, which assumes variable operation sequences per job.
--------------------------------------------------------------------------------
Label: FJSSP, Predicted: HFSSP, Index: 23
Description: A digital print shop handles <num_jobs> book orders, each processed through file prep, printing, binding, and trimming. Each step can use <num_machines> machines (e.g., laser printers, glue binders), with durations in <processing_times>. Jobs follow a fixed order, and machine assignments affect throughput. The goal is to minimize the makespan while prioritizing express orders.
Reason: The problem involves a fixed sequence of stages (file prep, printing, binding, trimming) for all jobs, with multiple parallel machines available at each stage (e.g., laser printers for printing, glue binders for binding). This matches the Hybrid Flow-shop Scheduling Problem (HFSSP), which is characterized by multiple stages where at least one stage has parallel machines. The fixed processing order for all jobs aligns with flow-shop requirements, and the presence of parallel machines at stages makes it hybrid.
--------------------------------------------------------------------------------
Label: JSSP, Predicted: FSSP, Index: 24
Description: A cosmetics plant processes <num_jobs> skincare product batches through ordered phases (mixing, emulsifying, filling, labeling) on <num_machines> hygienic machines. Each phase is assigned to a dedicated machine with fixed durations in <processing_times>. Machines are sterilized between batches and enforce single-operation processing. Batches must follow regulatory-compliant sequences. The goal is to minimize makespan while ensuring adherence to FDA-grade hygiene and batch traceability rules.
Reason: The problem describes all batches following the same ordered sequence of phases (mixing, emulsifying, filling, labeling) with each phase assigned to a dedicated machine. This matches the Flow-Shop Scheduling Problem (FSSP), where all jobs follow the same machine sequence. There is no indication of parallel machines per stage (HFSSP) or flexibility in machine assignments (FJSSP), and the predefined order rules out OSSP and JSSP.
--------------------------------------------------------------------------------
Label: FJSSP, Predicted: HFSSP, Index: 48
Description: A boutique coffee roaster processes <num_jobs> custom coffee batches, each requiring sequential steps: green bean sorting, roasting, grinding, and nitrogen-flush packaging. Roasting/grinding can be done on any of <num_machines> machines with varying capacities (see <processing_times>). Operations are sequential but machine-flexible. The goal is to minimize total completion time while preserving flavor profiles.
Reason: The problem involves sequential steps (sorting, roasting, grinding, packaging) that all jobs follow, aligning with a flow-shop structure. However, roasting and grinding stages allow processing on any of multiple machines with varying capacities, indicating parallel machines at those stages. This matches the Hybrid Flow-Shop Scheduling Problem (HFSSP), which features multiple stages with parallel machines in at least one stage, while preserving a fixed operation sequence across all jobs.
--------------------------------------------------------------------------------
Label: FJSSP, Predicted: HFSSP, Index: 61
Description: An automated vertical farm schedules <num_jobs> crop harvests, each involving sequential steps: plant scanning, robotic picking, washing, and packaging. Each step can be executed by specialized agrobots or conveyor systems selected from <num_machines>, with processing times documented in <processing_times>. Operations are non-preemptive and order-sensitive. The system aims to minimize the total harvesting time to maximize daily yield while adapting to crop growth variability.
Reason: The problem involves sequential steps (order-sensitive) with each step executed by specialized machines. This resembles a flow-shop setup where all jobs follow the same machine sequence (plant scanning → robotic picking → washing → packaging). However, the mention of selecting machines from <num_machines> implies parallel machines at one or more stages (e.g., multiple robotic pickers or washers), which aligns with the Hybrid Flow-Shop Scheduling Problem (HFSSP). HFSSP specifically addresses multi-stage systems with parallel machines in at least one stage, fitting the described scenario of specialized agrobots/conveyors per step.
--------------------------------------------------------------------------------
Label: JSSP, Predicted: FSSP, Index: 14
Description: A gourmet chocolate factory crafts <num_jobs> specialty batches through sequential steps (tempering, molding, decorating, packaging) on <num_machines> dedicated machines. Each step is permanently assigned to a machine with fixed times in <processing_times>. Machines process one operation exclusively, and batches must follow precise recipes in order. The scheduling objective is to minimize makespan while ensuring freshness and meeting seasonal demand peaks.
Reason: The problem describes a scenario where all batches follow the same fixed sequence of operations (tempering → molding → decorating → packaging), each assigned to dedicated machines. This aligns with the Flow-Shop Scheduling Problem (FSSP), which requires all jobs to follow the same machine order. The fixed machine assignments and strict sequential processing rules exclude flexible (FJSSP), job-shop (JSSP), or hybrid (HFSSP) variants.
--------------------------------------------------------------------------------
Label: FJSSP, Predicted: HFSSP, Index: 13
Description: A large-scale bakery processes <num_jobs> batches of artisanal bread, each following steps like dough mixing, proofing, baking, and packaging. Each step can be performed by one of several automated machines or manual stations from <num_machines>, with processing times depending on equipment speed (<processing_times>). Operations must adhere to a fixed order, and no task can be interrupted. The objective is to minimize the total production time while maintaining freshness and consistency.
Reason: The problem describes a fixed order of operations (dough mixing, proofing, baking, packaging) for all jobs, which aligns with the flow-shop structure. However, each step can be performed by one of several machines or manual stations, indicating parallel machines at each stage. This matches the Hybrid Flow-shop Scheduling Problem (HFSSP), where multiple stages exist and at least one stage has parallel machines. The flexibility in machine choice per operation within a fixed sequence distinguishes it from FJSSP, which allows flexible machine assignments but does not inherently require a uniform flow-shop sequence for all jobs.
--------------------------------------------------------------------------------
Label: JSSP, Predicted: FSSP, Index: 73
Description: A motorsport factory constructs <num_jobs> ultra-lightweight chassis units via a rigid sequence of composite layup stages (e.g., mold prep, fiber placement, autoclave curing, CNC trimming) on <num_machines> dedicated machines. Each stage is locked to a specific machine with fixed times from <processing_times>. Machines are mutually exclusive, and chassis must follow their engineering sequence without alteration. The scheduling challenge is to minimize makespan by aligning all workflows to meet tight racing season deadlines while respecting material curing dependencies and machine availability.
Reason: The problem describes a scenario where all chassis units follow the same rigid sequence of stages (e.g., mold prep, fiber placement), each assigned to a dedicated machine. This aligns with the Flow-Shop Scheduling Problem (FSSP), where all jobs follow the same machine order. The fixed processing times, dedicated machines per stage, and strict adherence to the engineering sequence further confirm this variant, as FSSP assumes identical machine sequences for all jobs.
--------------------------------------------------------------------------------
Label: ASP, Predicted: FSSP, Index: 94
Description: A robotic pizzeria executes <num_jobs> tasks across <num_machines> automated stations (dough prep, topping placement, baking, boxing). Precedence constraints in <precedence_relations> require dough proofing before saucing, and baking before boxing. Task durations in <processing_times> (e.g., 3 minutes per bake) are optimized to minimize customer wait times while ensuring food safety standards.
Reason: The problem describes a fixed sequence of operations (dough prep, topping, baking, boxing) that all jobs (pizzas) must follow, with precedence constraints enforcing a strict order (e.g., baking before boxing). This aligns with the Flow-Shop Scheduling Problem (FSSP), where all jobs follow the same machine sequence. While precedence constraints are mentioned, they are inherent to the flow-shop structure here, as all jobs share the same processing order. There is no indication of parallel machines at stages (HFSSP) or flexible machine assignments (FJSSP).
--------------------------------------------------------------------------------
Label: ASP, Predicted: HFSSP, Index: 89
Description: A museum lab reconstructs <num_jobs> ancient artifacts across <num_machines> conservation stations. Steps include 3D fragment scanning, AI-assisted matching, adhesive bonding, and surface finishing. Dependencies (e.g., scanning precedes matching) are in <precedence_relations>, with <processing_times> for each delicate operation. The schedule minimizes handling time to preserve fragile materials.
Reason: The problem involves multiple stages (scanning, matching, bonding, finishing) with dependencies requiring a fixed order (precedence_relations). The presence of <num_machines> conservation stations suggests parallel machines at one or more stages (e.g., multiple stations for bonding or finishing), aligning with the Hybrid Flow-shop (HFSSP) definition of multi-stage processing with parallel machines in at least one stage. All jobs follow the same sequence of operations (flow-shop structure), but parallel machines allow flexibility in scheduling to minimize handling time.
--------------------------------------------------------------------------------
Label: JSSP, Predicted: FSSP, Index: 97
Description: A controlled nuclear facility assembles <num_jobs> fuel rods via strictly ordered steps (e.g., pellet stacking, cladding, welding, radiation testing) using <num_machines> shielded machines. Each step is assigned to a specific machine with immutable durations from <processing_times>. Machines operate exclusively, and rods must progress sequentially to meet safety protocols. The objective is to minimize makespan while adhering to stringent regulatory pauses between hazardous operations.
Reason: The problem describes a scenario where all fuel rods follow the same strictly ordered sequence of steps (e.g., pellet stacking, cladding, welding, radiation testing), each assigned to a specific machine with fixed processing times. This matches the Flow-Shop Scheduling Problem (FSSP), where all jobs follow the same machine sequence. The absence of flexibility in machine choice or parallel machines at stages excludes FJSSP or HFSSP, and the predefined strict order rules out JSSP (which allows job-specific sequences) and OSSP/ASP.
--------------------------------------------------------------------------------
Label: JSSP, Predicted: HFSSP, Index: 68
Description: A polar logistics center assembles <num_jobs> modular survival kits for remote bases through sequential packing stages (e.g., cryogenic food sealing, medical supply sterilization, fuel canister pressure testing) using <num_machines> climate-controlled processing stations. Each station is permanently assigned to one packing phase with fixed durations from <processing_times>, and kits must follow strict assembly sequences to meet aviation weight distribution requirements. The challenge is to minimize total completion time while accommodating unpredictable station outages caused by -60°C equipment failures.
Reason: The problem describes a flow-shop environment where all jobs follow strict assembly sequences (sequential packing stages) and each station is assigned to a specific phase. Since the number of machines (num_machines) could exceed the number of phases, allowing parallel machines in at least one stage (as stations are assigned per phase), the structure aligns with the Hybrid Flow-shop Scheduling Problem (HFSSP). This variant accounts for multiple stages with potential parallel machines, fixed processing times per phase, and a strict job sequence—all critical aspects of the described scenario.
--------------------------------------------------------------------------------
Label: JSSP, Predicted: FSSP, Index: 8
Description: A green energy plant assembles <num_jobs> wind turbine parts through sequential processes (e.g., blade molding, gearbox assembly, electrical testing) on <num_machines> dedicated workstations. Each process is assigned to a unique machine with fixed times from <processing_times>. Workstations process one operation at a time, and jobs cannot deviate from their technical order. The challenge is to schedule operations to minimize total completion time while maintaining precision and machine availability.
Reason: The problem describes jobs following a fixed sequence of processes (e.g., blade molding, gearbox assembly, electrical testing), each assigned to a unique machine. This matches the Flow-Shop Scheduling Problem (FSSP), where all jobs follow the same machine order. The fixed technical sequence, dedicated machines per process, and goal to minimize completion time align with FSSP characteristics, as opposed to variants like JSSP (variable job sequences) or ASP (assembly with precedence DAGs).
--------------------------------------------------------------------------------
Label: FJSSP, Predicted: HFSSP, Index: 86
Description: A rapid-response factory assembles <num_jobs> disaster-relief drones, each built via ordered steps: frame welding, sensor integration, battery mounting, and flight testing. Due to supply chain volatility, each operation can be completed by any compatible machine from a pool of <num_machines>, with machine-dependent durations in <processing_times>. Non-preemptive scheduling is critical to meet emergency deployment deadlines while balancing resource constraints.
Reason: The problem involves ordered steps (fixed operation sequence) for all jobs, which aligns with Flow Shop. However, each operation can be processed by any compatible machine from a pool, indicating parallel machines at each stage. This matches the Hybrid Flow-shop Scheduling Problem (HFSSP), where multiple stages (operations) have parallel machines available. The predefined operation order and machine flexibility per operation are key characteristics of HFSSP rather than FJSSP, as FJSSP typically allows varying operation sequences per job, which is not the case here.
--------------------------------------------------------------------------------
Label: JSSP, Predicted: FSSP, Index: 80
Description: A high-tech facility calibrates <num_jobs> autonomous vehicle sensor suites through a strict sequence of alignment, signal testing, and environmental simulation stages across <num_machines> isolated test chambers. Each calibration phase is permanently assigned to a specific chamber with non-overlapping time requirements from <processing_times>. Chambers enforce atomic operation execution (e.g., LiDAR tuning cannot parallelize with radar diagnostics), while sensor suites must complete validation in their predefined order. The scheduling challenge is to minimize makespan by coordinating all calibration sequences without violating electromagnetic interference constraints or chamber availability.
Reason: The problem requires each job (sensor suite) to follow a predefined sequence of phases (alignment, signal testing, environmental simulation), each permanently assigned to a specific chamber (machine). All jobs follow the same machine sequence for their operations, as the calibration phases are fixed to chambers, aligning with the Flow-Shop Scheduling Problem (FSSP) definition where all jobs follow the same machine order.
--------------------------------------------------------------------------------
Label: FJSSP, Predicted: HFSSP, Index: 52
Description: A boutique ceramic studio produces <num_jobs> custom-designed pieces, each requiring sequential steps: slurry preparation, 3D printing, drying, and kiln firing. Each step can use one of <num_machines> alternative machines (e.g., different printers or kilns), with time variations per <processing_times>. Jobs are artisanal and cannot overlap on shared resources. The studio seeks to minimize total completion time while accommodating last-minute client requests.
Reason: The problem involves sequential steps (slurry, printing, drying, firing) that all jobs follow in the same order, characteristic of a flow-shop. However, each step allows using one of multiple alternative machines (parallel machines per stage), which aligns with the Hybrid Flow-Shop Scheduling Problem (HFSSP). This variant captures the flow-shop structure with flexibility in machine selection at each stage, unlike FJSSP, which assumes job-specific operation sequences.
--------------------------------------------------------------------------------
Label: ASP, Predicted: FSSP, Index: 52
Description: An urban farm builds <num_jobs> modular grow units across <num_machines> stations, including frame welding, LED panel wiring, and nutrient system installation. Tasks follow <precedence_relations> (e.g., wiring requires completed frames), with durations in <processing_times>. Minimizing makespan ensures rapid deployment for vertical farms.
Reason: The problem involves tasks with precedence constraints that enforce a specific processing order (e.g., frame welding before LED wiring), and all jobs (grow units) follow the same sequence of stations (frame → wiring → nutrient). This aligns with the Flow-Shop Scheduling Problem (FSSP), where all jobs follow the same machine sequence. The stations represent stages in a fixed order, and there is no mention of parallel machines or flexible machine assignments, making FSSP the most specific variant.
--------------------------------------------------------------------------------
Label: JSSP, Predicted: HFSSP, Index: 63
Description: A high-pressure lab grows <num_jobs> synthetic diamond crystals through sequential phases (carbon deposition, compression, annealing) in <num_machines> specialized reactors. Each phase is locked to a reactor type with durations from <processing_times>. Reactors run one phase at a time, and crystals must progress through stages without interruption. The goal is to schedule all growth processes to minimize total completion time, given extreme energy constraints and reactor maintenance windows.
Reason: The problem involves sequential phases (carbon deposition, compression, annealing) where each phase is locked to a reactor type, and reactors are specialized. This aligns with a multi-stage flow-shop structure. Since there are <num_machines> reactors (potentially multiple reactors per phase/stage), it matches the Hybrid Flow-shop Scheduling Problem (HFSSP), which allows parallel machines in at least one stage. All jobs follow the same sequence of stages, and the reactor specialization per phase implies fixed stage sequences, making HFSSP the most specific variant.
--------------------------------------------------------------------------------
Label: FJSSP, Predicted: HFSSP, Index: 3
Description: A pharmaceutical facility manufactures <num_jobs> tablet batches, each following operations like granulation, compression, coating, and packaging. Each step can be processed by one of <num_machines> machines (e.g., different coaters or presses), with processing times documented in <processing_times>. Operations are sequential and non-interruptible to comply with regulatory requirements. The schedule aims to minimize the makespan while ensuring batch traceability and quality control.
Reason: The problem involves sequential operations (granulation, compression, coating, packaging) that all batches must follow in the same order, characteristic of a flow shop. Each operation (stage) can be processed by one of multiple parallel machines (e.g., different coaters or presses), aligning with the Hybrid Flow-shop Scheduling Problem (HFSSP), where multiple stages have parallel machines. This differs from FJSSP, which allows arbitrary operation sequences per job, and from FSSP, which lacks parallel machines per stage.
--------------------------------------------------------------------------------
Label: FJSSP, Predicted: HFSSP, Index: 63
Description: A space-tech workshop assembles <num_jobs> satellite antennas through ordered operations: reflector shaping, signal amplifier installation, weatherproof coating, and testing. Each operation may use any compatible machine from <num_machines>, such as CNC routers or vacuum chambers, with processing times in <processing_times>. Tasks are sequential and non-interruptible. The schedule must minimize makespan to align with strict satellite launch timelines.
Reason: The problem describes a scenario where all jobs (satellite antennas) follow the same fixed sequence of operations (reflector shaping, amplifier installation, etc.), and each operation can be processed on any compatible machine from a set of parallel machines. This matches the Hybrid Flow-Shop Scheduling Problem (HFSSP), which involves multiple stages (here, operations) with parallel machines at each stage and enforces the same processing sequence for all jobs.
--------------------------------------------------------------------------------
Label: JSSP, Predicted: FSSP, Index: 55
Description: A specialty dairy processes <num_jobs> cheese batches through sequential maturation stages (e.g., brining, mold inoculation, aging, waxing) across <num_machines> climate-controlled chambers. Each stage is permanently assigned to a specific chamber with fixed durations from <processing_times>. Chambers enforce batch exclusivity during processing, while cheeses must follow strict biochemical sequencing to develop proper flavor profiles. The scheduling challenge is to minimize makespan by coordinating all batches through the facility while respecting microbial growth timelines and chamber capacity constraints.
Reason: The problem describes sequential maturation stages where each stage is assigned to a specific chamber (machine) and all cheese batches must follow the same strict biochemical sequence (i.e., the same machine order). This matches the Flow-Shop Scheduling Problem (FSSP), where all jobs follow the same machine sequence. The fixed assignment of stages to chambers and the requirement for sequential processing align precisely with FSSP's definition.
--------------------------------------------------------------------------------
Label: JSSP, Predicted: FSSP, Index: 57
Description: A luthier workshop handcrafts <num_jobs> violins through ordered artisan stages (e.g., wood carving, varnishing, soundpost fitting, tuning) using <num_machines> specialized tools. Each stage requires exclusive access to tools like bending irons or drying racks for fixed durations (<processing_times>). Instruments must progress through centuries-old sequences without parallel work to preserve acoustic quality. The goal is to minimize workshop completion time while honoring traditional craftsmanship constraints.
Reason: The problem describes a scenario where all instruments (jobs) must follow the same predefined sequence of artisan stages (e.g., wood carving → varnishing → soundpost fitting → tuning). Each stage requires a specific specialized tool (machine) with fixed processing times, and there is no mention of flexibility in machine choice or parallel machines within a stage. This aligns with the Flow-Shop Scheduling Problem (FSSP), where all jobs follow the same machine order, and each stage is processed on a dedicated machine.
--------------------------------------------------------------------------------
Label: FJSSP, Predicted: HFSSP, Index: 17
Description: A medical workshop produces <num_jobs> custom prosthetic limbs, each requiring sequential operations such as 3D scanning, material shaping, joint assembly, and surface finishing. Each operation can be assigned to a subset of <num_machines> (e.g., CNC routers, 3D printers, or manual workbenches), with machine-dependent processing times specified in <processing_times>. Jobs are non-preemptive, and the objective is to minimize the makespan—ensuring timely delivery of prosthetics to patients.
Reason: The problem involves sequential operations (fixed order) with each operation assignable to a subset of machines (parallel machines per stage), aligning with the Hybrid Flow-shop Scheduling Problem (HFSSP) where multiple stages have parallel machines. All jobs follow the same sequence of operations, and machine flexibility exists within stages.
--------------------------------------------------------------------------------
Label: FJSSP, Predicted: HFSSP, Index: 22
Description: A toy plant produces <num_jobs> themed playsets, each requiring molding, painting, assembly, and packaging in sequence. Each operation is compatible with <num_machines> machines (e.g., injection molders, robotic painters), with processing times documented in <processing_times>. Resources are shared, and operations cannot overlap on the same machine. The schedule must minimize the makespan to meet seasonal demand spikes.
Reason: The problem involves a flow-shop structure where all jobs follow the same sequence of operations (molding, painting, assembly, packaging), and each operation (stage) has multiple parallel machines available. This matches the definition of HFSSP, which is characterized by multiple stages with parallel machines in at least one stage. The presence of shared resources (machines) for each operation and the requirement to minimize makespan align with the Hybrid Flow-Shop Scheduling Problem.
--------------------------------------------------------------------------------
Label: JSSP, Predicted: FSSP, Index: 33
Description: A crime lab processes <num_jobs> evidence samples through rigid forensic workflows (e.g., extraction, amplification, electrophoresis, interpretation) on <num_machines> calibrated instruments. Each workflow step is permanently assigned to a machine with fixed durations in <processing_times>. Instruments are mutually exclusive, and samples must follow chain-of-custody sequences. The goal is to minimize total analysis time while avoiding cross-contamination and maintaining legal admissibility.
Reason: The problem describes rigid workflows where each step is permanently assigned to a specific machine, and samples must follow a predefined sequence (chain-of-custody). All jobs (samples) follow the same fixed order of operations (e.g., extraction → amplification → electrophoresis → interpretation), each mapped to a dedicated machine. This matches the Flow-Shop Scheduling Problem (FSSP), where all jobs follow the same machine sequence with fixed processing times.
--------------------------------------------------------------------------------
Label: JSSP, Predicted: FSSP, Index: 34
Description: An automated urban farm manages <num_jobs> crop batches through growth stages (e.g., seeding, LED exposure, nutrient dosing, robotic harvesting) in <num_machines> climate-controlled chambers. Each stage is bound to a dedicated chamber with fixed durations from <processing_times>. Chambers handle one batch at a time, and crops must follow unalterable growth sequences. The objective is to minimize total harvest time while optimizing LED energy use and shelf-life constraints.
Reason: The problem describes crops following a fixed sequence of growth stages (e.g., seeding → LED → nutrient → harvesting), each assigned to a dedicated chamber (machine). All jobs (crop batches) must follow this unalterable order through the stages, and each stage has exactly one machine. This matches the Flow-Shop Scheduling Problem (FSSP), where all jobs follow the same machine sequence and each stage has a single machine.
--------------------------------------------------------------------------------
Label: ASP, Predicted: FSSP, Index: 87
Description: A precision engineering workshop produces <num_jobs> bespoke bobsleds across <num_machines> stations, including carbon-fiber molding, aerodynamics tuning, and impact testing. Precedence rules (e.g., molding must cure before tuning) are in <precedence_relations>, with <processing_times> for each step. The schedule must minimize lead time for pre-Games delivery.
Reason: The problem describes a scenario where all jobs (bobsleds) follow the same sequence of stations (carbon-fiber molding → aerodynamics tuning → impact testing), as indicated by the precedence rules. This aligns with the Flow-Shop Scheduling Problem (FSSP), where all jobs follow the same machine order. The example precedence rule applies uniformly to all jobs, and there is no mention of flexibility in machine choice or job-specific operation sequences, ruling out JSSP/FJSSP. Additionally, the absence of explicit parallel machines at stages or assembly-like dependencies excludes HFSSP and ASP.
--------------------------------------------------------------------------------
Label: JSSP, Predicted: FSSP, Index: 66
Description: An ancient DNA laboratory processes <num_jobs> fossil specimens through contamination-critical workflow stages (e.g., CT scanning, sterile drilling, chemical demineralization, DNA extraction) using <num_machines> isolated cleanroom workstations. Each workstation is dedicated to a single process step with fixed durations from <processing_times>, and specimens must follow irreversible preparation sequences to prevent cross-contamination. The objective is to minimize total completion time while enforcing biocontainment protocols that prohibit parallel processing of specimens from different geological eras in shared airlock spaces.
Reason: The problem describes a scenario where all specimens must follow the same irreversible sequence of process steps (contamination-critical workflow stages), each performed on dedicated workstations. This matches the Flow-Shop Scheduling Problem (FSSP), where all jobs follow the same machine sequence. The fixed workstation assignments per step and predefined processing order align with FSSP, while biocontainment constraints are additional problem-specific rules but do not alter the core scheduling variant.
--------------------------------------------------------------------------------
Label: FJSSP, Predicted: HFSSP, Index: 0
Description: A factory produces <num_jobs> custom battery packs for electric vehicles, each requiring sequential operations like cell sorting, welding, module assembly, and final testing. Each operation can be performed by one of several specialized machines from a pool of <num_machines>, with processing times varying by machine (see <processing_times>). Operations must follow a strict order, and no task can be interrupted once started. The goal is to minimize the makespan—the total time to complete all battery packs while ensuring safety and efficiency.
Reason: The problem describes sequential operations (like stages) with each operation having multiple specialized machines available. This matches the Hybrid Flow-shop Scheduling Problem (HFSSP), which involves multiple stages with parallel machines in at least one stage, requiring jobs to follow the same operation order but allowing flexibility in machine assignment per stage.
--------------------------------------------------------------------------------
Label: JSSP, Predicted: HFSSP, Index: 18
Description: A craft brewery manages <num_jobs> fermentation batches through sequential stages (e.g., mashing, boiling, fermenting, carbonating) using <num_machines> dedicated tanks and equipment. Each stage is tied to a specific vessel with fixed durations from <processing_times>, and vessels can only handle one batch at a time. Batches must follow exact brewing sequences to maintain flavor profiles. The scheduling challenge is to minimize the total production timeline while avoiding equipment conflicts and adhering to biochemical fermentation constraints.
Reason: The problem involves sequential stages with dedicated vessels (machines) for each stage. Each batch must follow the exact brewing sequence (fixed order), and vessels are dedicated to specific stages, implying a flow-shop structure. The use of <num_machines> suggests potential parallel machines in at least one stage (e.g., multiple fermenting tanks), which aligns with the Hybrid Flow-shop (HFSSP) definition. All jobs follow the same stage sequence, and parallel machines at stages make it hybrid. This distinguishes it from FSSP (single machine per stage) and FJSSP (flexible machine assignment per operation).
--------------------------------------------------------------------------------
Label: FJSSP, Predicted: HFSSP, Index: 1
Description: A semiconductor plant processes <num_jobs> wafer batches, each undergoing photolithography, etching, doping, and inspection in a fixed sequence. Each operation can be executed by a subset of <num_machines> machines (e.g., different etchers or scanners), with machine-dependent processing times specified in <processing_times>. Operations are non-preemptive and must adhere to strict cleanliness protocols. The scheduling objective is to minimize the makespan while maximizing equipment utilization.
Reason: The problem describes a fixed sequence of operations (photolithography, etching, doping, inspection) common to all jobs, which aligns with flow-shop characteristics. However, each operation can be processed by a subset of machines (parallel machines at each stage), making it a Hybrid Flow-Shop Scheduling Problem (HFSSP). This variant captures both the shared operation sequence and the flexibility in machine assignment per stage, distinguishing it from FJSSP (which typically involves job-specific operation sequences) and FSSP (single machine per stage).
--------------------------------------------------------------------------------
Label: FJSSP, Predicted: HFSSP, Index: 27
Description: A medical workshop produces <num_jobs> patient-specific orthopedic implants, each requiring precise operations like 3D printing, polishing, sterilization, and quality inspection. Each operation has a predefined order and can be executed by a subset of <num_machines> machines, with processing times documented in <processing_times>. Non-preemptive scheduling ensures no interruptions. The goal is to minimize the makespan to accelerate patient treatment timelines.
Reason: The problem involves jobs with predefined operation sequences (e.g., 3D printing, polishing, etc.), which aligns with a flow-oriented structure. Each operation can be processed by a subset of machines, indicating parallel machines at each stage. This matches the Hybrid Flow-shop Scheduling Problem (HFSSP), where jobs follow the same sequence of stages, and at least one stage has multiple machines.
--------------------------------------------------------------------------------
Label: JSSP, Predicted: FSSP, Index: 53
Description: An unmanned aerial vehicle (UAV) factory assembles <num_jobs> firefighting drones through fixed sequences (e.g., carbon-fiber frame assembly, thermal sensor integration, propulsion testing) across <num_machines> workstations. Each operation is bound to a designated workstation with fixed times from <processing_times>. Workstations process one operation at a time, and drones must follow strict assembly protocols without step reordering. The challenge is to minimize makespan to meet emergency deployment deadlines while adhering to aviation safety standards and resource constraints.
Reason: The problem describes fixed sequences of operations for each drone, each operation bound to a designated workstation (machine) with no flexibility in machine choice. All jobs (drones) follow the same strict assembly protocol (e.g., carbon-fiber frame assembly → thermal sensor integration → propulsion testing), implying identical machine sequences across jobs. This aligns with the Flow-Shop Scheduling Problem (FSSP), where all jobs follow the same machine order.
--------------------------------------------------------------------------------
Label: FJSSP, Predicted: HFSSP, Index: 29
Description: A smart textile factory processes <num_jobs> fabric orders through sequential stages: pre-treatment, dyeing, drying, and quality control. Each stage can be handled by any compatible machine from <num_machines>, with machine-dependent processing times (<processing_times>). Jobs follow a strict order, and machines are reserved until tasks finish. The objective is to minimize the makespan while reducing water/energy waste in dyeing processes.
Reason: The problem describes a scenario where jobs follow a strict sequential order through multiple stages (pre-treatment, dyeing, drying, quality control), and each stage has multiple compatible machines. This aligns with the Hybrid Flow-Shop Scheduling Problem (HFSSP), which involves multiple stages with parallel machines in at least one stage. While the machine choice is flexible per stage (similar to FJSSP), the key distinction is that all jobs follow the same fixed stage sequence (flow-shop structure), and parallel machines exist at each stage, making HFSSP the most specific variant.
--------------------------------------------------------------------------------
Label: JSSP, Predicted: FSSP, Index: 87
Description: A biofoundry processes <num_jobs> synthetic DNA constructs through a rigid workflow (e.g., gene synthesis, PCR amplification, gel electrophoresis) using <num_machines> lab instruments. Each step is bound to a specific instrument with fixed processing times from <processing_times>. Instruments handle one operation at a time, and DNA assemblies must follow strict molecular biology protocols without deviation. The scheduling objective is to minimize makespan by synchronizing lab workflows to accelerate genetic engineering projects while respecting equipment bottlenecks.
Reason: The problem describes a rigid workflow with fixed processing times for each step on specific instruments, where all DNA constructs must follow strict protocols without deviation. This implies that all jobs (DNA constructs) follow the same predefined sequence of machines (e.g., gene synthesis → PCR → gel electrophoresis), aligning with the Flow-Shop Scheduling Problem (FSSP) definition. There is no flexibility in machine choice or job-specific operation orders, ruling out JSSP/FJSSP, and the workflow is strictly sequential, not requiring assembly-like precedence (ASP) or open-order operations (OSSP).
--------------------------------------------------------------------------------
Label: ASP, Predicted: FJSSP, Index: 88
Description: A civil engineering firm prefabricates <num_jobs> bridge segments across <num_machines> fabrication bays. Tasks include rebar weaving, concrete pouring, curing, and load testing. The DAG in <precedence_relations> enforces constraints (e.g., curing before testing), with times in <processing_times>. The objective is rapid assembly for post-disaster deployment.
Reason: The problem involves multiple fabrication bays (machines) and jobs (bridge segments) with precedence constraints (DAG), requiring operations to follow specific orders (e.g., curing before testing). While the DAG enforces operation sequences, the fabrication bays likely allow flexible machine assignments for each operation (e.g., any bay can handle rebar weaving, pouring, etc.), aligning with FJSSP's "flexible machine choice per operation" and predefined order due to the DAG. This distinguishes it from HFSSP (fixed stages) or ASP (assembly-specific precedences).
--------------------------------------------------------------------------------
Label: FJSSP, Predicted: HFSSP, Index: 89
Description: A space tech workshop produces <num_jobs> rocket engine components through ordered processes: composite layup, cryogenic hardening, precision machining, and pressure testing. Each operation can use <num_machines> specialized machines (e.g., autoclaves, CNC mills), with durations in <processing_times>. Non-preemptive scheduling ensures safety compliance while reducing lead time for mission-critical parts.
Reason: The problem involves ordered processes (composite layup, cryogenic hardening, etc.) that all jobs must follow sequentially, indicating a flow-shop structure. Additionally, each operation (stage) can use multiple specialized machines (e.g., autoclaves, CNC mills), which aligns with the Hybrid Flow-Shop Scheduling Problem (HFSSP) definition of parallel machines in at least one stage. The predefined operation order and non-preemptive scheduling further support HFSSP over variants like FJSSP or FSSP, as HFSSP explicitly handles multi-stage flow with parallel machines.
--------------------------------------------------------------------------------
Label: JSSP, Predicted: FSSP, Index: 64
Description: A sports equipment manufacturer builds <num_jobs> competition bobsleds via rigid stages (carbon-fiber molding, aerodynamic tuning, impact testing) across <num_machines> dedicated stations. Each stage is machine-specific with fixed times in <processing_times>. Stations process one operation at a time, and sleds must follow exact engineering sequences. The challenge is to minimize total production time while adhering to Olympic regulatory inspections and material curing deadlines.
Reason: The problem describes a scenario where all bobsleds (jobs) must follow the exact same sequence of stages (carbon-fiber molding → aerodynamic tuning → impact testing), each assigned to a dedicated machine. This aligns with the Flow-Shop Scheduling Problem (FSSP), where all jobs follow the same machine order. The mention of "rigid stages" and "exact engineering sequences" confirms a fixed, identical processing order for all jobs, which is characteristic of FSSP. There is no indication of parallel machines at any stage (which would suggest HFSSP) or flexibility in machine assignments (which would suggest FJSSP).
--------------------------------------------------------------------------------
Label: FJSSP, Predicted: HFSSP, Index: 51
Description: An industrial repair hub services <num_jobs> failed electric motors, each needing disassembly, coil rewinding, insulation testing, and reassembly in sequence. The workshop has <num_machines> workstations (e.g., automated winders, manual benches) with varying speeds, as noted in <processing_times>. Operations are non-preemptive, and machine compatibility depends on motor size. Scheduling aims to minimize downtime for clients by optimizing the makespan.
Reason: The problem involves a fixed sequence of operations (disassembly, coil rewinding, insulation testing, reassembly) for all jobs, which aligns with a flow-shop structure. However, the workshop has multiple workstations (parallel machines) with varying speeds and machine compatibility constraints based on motor size, indicating parallel machines at stages. This matches the Hybrid Flow-Shop Scheduling Problem (HFSSP), where jobs follow the same sequence of stages, and at least one stage has parallel machines. The compatibility constraint further reinforces the need for selecting suitable machines within stages.
--------------------------------------------------------------------------------
Label: OSSP, Predicted: <Error> at level 0, Index: 14
Description: A clinical trial center schedules <num_jobs> participants through <num_machines> assessments (e.g., blood tests, cognitive exams, imaging). The assessment order is flexible to accommodate patient preferences and machine availability. Each test’s duration is in <processing_times>, and no overlapping bookings are allowed per machine. The scheduler optimizes assignments to minimize the total trial duration (makespan).
Reason: <Error> at parse json 
 {
    'reason': 'The problem involves scheduling a set of jobs (participants' assessments) on multiple machines (assessment stations) with flexible order and non-overlapping constraints, aiming to minimize the total makespan. This aligns with the Scheduling Problem (SP) definition, which focuses on assigning jobs to machines to optimize time-related objectives like total duration.',
    'result': 'SP'
} 

--------------------------------------------------------------------------------
Label: ASP, Predicted: HFSSP, Index: 96
Description: A sustainable agriculture firm constructs <num_jobs> hydroponic farm pods across <num_machines> assembly bays. Tasks include frame welding, irrigation system installation, and LED panel mounting, where electrical work cannot begin until structural integrity is verified (<precedence_relations>). Each task’s duration (<processing_times>) varies based on pod customization. The schedule optimizes deployment speed for urban food deserts.
Reason: The problem involves constructing hydroponic pods with tasks that follow a specific precedence order (structural work before electrical), and the presence of multiple assembly bays (machines) suggests stages with parallel processing capabilities. Each job (pod) must flow through stages (welding → irrigation → LED) in sequence, aligning with the Hybrid Flow-Shop Scheduling Problem (HFSSP), which handles multiple stages with parallel machines in at least one stage.
--------------------------------------------------------------------------------
Label: JSSP, Predicted: HFSSP, Index: 92
Description: A naval engineering facility constructs <num_jobs> titanium pressure hulls for crewed submersibles using <num_machines> hydroforming and robotic welding cells. Each hull undergoes 15+ non-parallelizable stages (spherical segment annealing, penetrator sealing, acoustic window bonding) with <processing_times> dictated by metallurgical requirements. Critical path operations like hyperbaric testing occupy dedicated chambers for 72+ continuous hours. Scheduling must minimize makespan while synchronizing with limited availability of 6,000-atmosphere test facilities.
Reason: The problem involves multiple stages (15+ non-parallelizable steps) with critical path operations requiring dedicated chambers, which act as parallel machines for specific stages. The limited availability of 6,000-atmosphere test facilities suggests parallel machines at certain stages (e.g., hyperbaric testing). All jobs follow the same sequence of stages (annealing, sealing, bonding, etc.), but some stages have parallel resources. This matches the Hybrid Flow-Shop Scheduling Problem (HFSSP), which involves sequential stages with parallel machines in at least one stage.
--------------------------------------------------------------------------------
Label: FJSSP, Predicted: HFSSP, Index: 50
Description: A semiconductor lab processes <num_jobs> microchip batches, each requiring sequential operations: wafer probing, thermal cycling, electrical testing, and laser trimming. Each operation can be performed by one of <num_machines> specialized testers or handlers, with machine-dependent durations specified in <processing_times>. Jobs must follow strict precedence constraints, and machines cannot be shared mid-operation. The goal is to minimize the makespan while ensuring zero-defect tolerance for high-performance chips.
Reason: The problem involves all jobs following the same sequence of operations (wafer probing, thermal cycling, etc.), which aligns with a flow-shop structure. Each operation (stage) can be processed by one of multiple specialized machines, indicating parallel machines at each stage. This matches the Hybrid Flow-Shop Scheduling Problem (HFSSP), defined as multiple stages with parallel machines in at least one stage.
--------------------------------------------------------------------------------
Label: ASP, Predicted: FJSSP, Index: 79
Description: A biotech facility executes <num_jobs> sterile processes across <num_machines> isolators to manufacture patient-specific gene therapies. Tasks include viral vector synthesis, CRISPR editing, and vial labeling—where quality control halts further steps if contaminants are detected. The workflow is in <precedence_relations>, with <processing_times> for each batch. The aim is to minimize makespan for critical-care deliveries.
Reason: The problem involves scheduling jobs with predefined precedence relations (order of operations) and multiple isolators (machines). While the workflow has fixed operation sequences (ruling out OSSP/ASP), the presence of multiple machines suggests potential flexibility in assigning operations to machines, which aligns with FJSSP. Unlike JSSP, where each operation is fixed to a specific machine, FJSSP allows machine choice per operation, better matching the scenario where isolators are likely interchangeable resources for sterile processes. FSSP/HFSSP are less suitable as jobs may not follow identical machine sequences.
--------------------------------------------------------------------------------
Label: FJSSP, Predicted: HFSSP, Index: 14
Description: A military maintenance depot services <num_jobs> defense equipment units, each requiring diagnostic checks, part replacements, calibration, and final testing in sequence. Each operation can be performed by one of <num_machines> specialized repair bays or technicians, with processing times varying by resource expertise (<processing_times>). Tasks are non-preemptive and must follow a strict workflow. The scheduling goal is to minimize the total repair time while ensuring mission-critical readiness.
Reason: The problem describes a scenario where each job (defense equipment unit) must follow a strict sequence of operations (diagnostic, replacement, calibration, testing), which aligns with a flow-shop structure. However, each operation can be performed by one of multiple specialized repair bays/technicians (parallel machines at each stage), and processing times vary by resource expertise. This matches the Hybrid Flow-Shop Scheduling Problem (HFSSP), defined as multiple stages with parallel machines in at least one stage. The strict workflow and parallel resources per operation (stage) differentiate it from FJSSP, where machines are flexible across operations rather than grouped by stages.
--------------------------------------------------------------------------------
Label: ASP, Predicted: JSSP, Index: 15
Description: A semiconductor foundry processes <num_jobs> operations across <num_machines> specialized machines to produce integrated circuits. Tasks include photolithography, etching, doping, and final testing, with strict dependencies — e.g., etching cannot begin until photoresist patterning is complete. These precedence rules are encoded in <precedence_relations>, and each step’s duration is specified in <processing_times>. The goal is to minimize the makespan of wafer production.
Reason: The problem involves strict precedence constraints and specialized machines, indicating each operation is assigned to a fixed machine with a predefined order (e.g., etching after photolithography). This aligns with JSSP, where jobs follow specific machine sequences without flexibility in machine selection or order.
--------------------------------------------------------------------------------
Label: JSSP, Predicted: FSSP, Index: 6
Description: A high-speed packaging facility processes <num_jobs> product batches through sequential stages (e.g., filling, sealing, labeling, boxing) on <num_machines> dedicated machines. Each stage is locked to a specific machine with deterministic processing times from <processing_times>. Machines operate one task at a time, and batches must follow strict hygiene-compliant sequences. The goal is to schedule all batches to minimize total production time while avoiding cross-contamination and adhering to machine constraints.
Reason: The problem describes a scenario where all product batches must follow the same sequential stages (filling, sealing, labeling, boxing) on dedicated machines. Each stage is locked to a specific machine, and batches adhere to a strict, predefined order. This matches the definition of the Flow-Shop Scheduling Problem (FSSP), where all jobs follow the same machine sequence and stages are fixed. The absence of parallel machines, flexible machine assignments, or variable operation orders rules out other variants like HFSSP, FJSSP, or JSSP.
--------------------------------------------------------------------------------
Label: OSSP, Predicted: ASP, Index: 51
Description: A Swiss watchmaker crafts <num_jobs> bespoke timepieces using <num_machines> workstations for movement assembly, casing, dial finishing, and quality control. Artisans can reorder non-critical steps (e.g., polishing before engraving) to optimize workflow. Each operation’s duration is listed in <processing_times>. The workshop aims to minimize total production time while adhering to one-job-per-machine constraints.
Reason: The problem allows reordering of non-critical steps (implying some operations have no precedence constraints) while others may have fixed sequences (critical steps), forming a Directed Acyclic Graph (DAG) of precedence constraints. This aligns with the Assembly Scheduling Problem (ASP), which handles operations with precedence constraints structured as a DAG, even if not strictly an assembly line.
--------------------------------------------------------------------------------
Label: FJSSP, Predicted: HFSSP, Index: 62
Description: A sportswear facility processes <num_jobs> custom sneaker orders, each requiring dyeing, 3D-printing of soles, embroidery, and quality checks in sequence. Each operation can be assigned to a subset of <num_machines> (e.g., laser cutters or automated sewing stations), with machine-dependent durations in <processing_times>. No two operations can overlap on the same machine. The objective is to minimize the makespan to meet tight delivery windows for personalized products.
Reason: The problem involves a fixed sequence of operations (dyeing, 3D-printing, embroidery, quality checks) for all jobs, which aligns with Flow-shop characteristics. However, each operation (stage) can be assigned to a subset of machines, indicating parallel machines at each stage. This matches the definition of HFSSP (Hybrid Flow-shop Scheduling Problem), where multiple stages have parallel machines.
--------------------------------------------------------------------------------
Label: JSSP, Predicted: HFSSP, Index: 83
Description: A logistics hub services <num_jobs> autonomous robot fleets through sequential maintenance stages (battery swap, diagnostics, software updates) at <num_machines> docking bays. Each stage is hardwired to specific bay types with fixed service times in <processing_times>. Bays enforce singular robot processing due to physical space constraints, while fleets require ordered servicing to meet deployment windows. The scheduling challenge is to minimize total downtime across all fleets while preventing charging bottlenecks and synchronization failures.
Reason: The problem describes multiple sequential maintenance stages (battery swap, diagnostics, software updates) with each stage assigned to specific bay types (parallel machines at each stage). Fleets must follow a fixed order of stages, and stages have parallel docking bays (machines) to process robots, aligning with the Hybrid Flow-shop Scheduling Problem (HFSSP) definition. This variant explicitly handles multi-stage systems with parallel machines in at least one stage, fitting the physical constraints and sequential requirements described.
--------------------------------------------------------------------------------
Label: FJSSP, Predicted: HFSSP, Index: 90
Description: A vertical farming facility manages <num_jobs> crop batches, each requiring sequenced operations like seeding, nutrient dosing, LED light cycling, and robotic harvesting. Each operation can be processed by one of <num_machines> specialized automation systems (e.g., hydroponic arms, drones, or conveyor belts), with machine-dependent durations specified in <processing_times>. Operations must follow strict biological growth stages, and resource allocation must minimize makespan to ensure peak freshness at harvest.
Reason: The problem involves sequenced operations (strict biological stages) that must be processed in a fixed order, similar to a flow shop. However, each operation can be handled by one of multiple specialized machines (e.g., hydroponic arms, drones), indicating parallel machines at each stage. This aligns with the Hybrid Flow-Shop Scheduling Problem (HFSSP), where multiple stages have parallel machines.
--------------------------------------------------------------------------------
Label: FJSSP, Predicted: HFSSP, Index: 4
Description: A wind turbine plant produces <num_jobs> composite blades, each requiring layup, curing, trimming, and quality checks in a strict order. Each operation can be performed by a subset of <num_machines> machines (e.g., autoclaves or CNC trimmers), with machine-specific durations in <processing_times>. Tasks are non-preemptive and must avoid overlaps on shared resources. The objective is to minimize the total production time (makespan) while meeting structural tolerances.
Reason: The problem involves a fixed sequence of operations (layup, curing, trimming, quality checks) for all jobs, which aligns with flow-shop characteristics. However, each operation can be performed by a subset of machines (e.g., autoclaves for curing, CNC trimmers for trimming), indicating parallel machines at each stage. This matches the Hybrid Flow-Shop Scheduling Problem (HFSSP), where multiple stages (here, operations) have parallel machines, and jobs follow the same stage sequence.
--------------------------------------------------------------------------------
Label: JSSP, Predicted: FSSP, Index: 71
Description: A craft distillery processes <num_jobs> oak barrels through a multi-stage charring and seasoning workflow (e.g., sanding, flaming, cooling, sealing) using <num_machines> specialized kilns and workstations. Each stage is irrevocably tied to a specific machine with fixed durations in <processing_times>. Workstations handle only one barrel at a time, and each barrel must progress through the exact sequence mandated by aging quality standards. The objective is to minimize makespan by scheduling all barrels efficiently while preserving the artisanal charring process’s meticulous timing requirements.
Reason: The problem describes a scenario where each barrel must follow a fixed sequence of stages, each irrevocably tied to a specific machine. All jobs (barrels) follow the exact same machine sequence mandated by quality standards, which aligns with the Flow-Shop Scheduling Problem (FSSP). There is no flexibility in machine choice or parallel machines at stages, ruling out other variants like FJSSP or HFSSP. The predefined, identical machine sequence for all jobs fits the FSSP definition.
--------------------------------------------------------------------------------
Label: FSSP, Predicted: HFSSP, Index: 86
Description: A high-end footwear workshop crafts <num_jobs> pairs of leather shoes through <num_machines> sequential stations: cutting, stitching, sole attachment, polishing, and packaging. Every pair follows this exact workflow, with exclusive machine usage and operation times defined in <processing_times>. The schedule must minimize the makespan to meet tight delivery deadlines for bespoke orders.
Reason: The problem describes a flow-shop environment where all jobs follow the same fixed sequence of stations (cutting, stitching, etc.), which aligns with Flow-Shop Scheduling (FSSP). However, the mention of <num_machines> as a variable parameter (distinct from the fixed 5 stations) implies that at least one station has multiple parallel machines, making it a Hybrid Flow-Shop Scheduling Problem (HFSSP). This hybrid configuration allows stages to have parallel machines while maintaining the sequential workflow, which is critical for minimizing makespan with exclusive machine usage.
--------------------------------------------------------------------------------
Label: JSSP, Predicted: FSSP, Index: 25
Description: A custom bicycle manufacturing facility processes <num_jobs> frame orders, each requiring sequential operations (e.g., tube cutting, welding, heat treatment, painting) across <num_machines> specialized workstations. Each operation is permanently assigned to a specific workstation with fixed durations from <processing_times>. Workstations enforce single-operation processing, while frames must follow strict build sequences to meet quality standards. The scheduling objective is to minimize makespan by coordinating all orders to complete production as early as possible, respecting both workflow dependencies and machine exclusivity constraints.
Reason: The problem requires each job to follow a strict sequence of operations (e.g., tube cutting, welding, etc.), which are each assigned to fixed workstations. All jobs follow the same predefined machine sequence (implied by the example operations), aligning with the Flow-Shop Scheduling Problem (FSSP) where all jobs share the same processing order across machines.
--------------------------------------------------------------------------------
Label: FJSSP, Predicted: HFSSP, Index: 77
Description: A lab produces <num_jobs> synthetic diamond batches, each requiring high-pressure high-temperature (HPHT) processing, laser cutting, polishing, and certification. Each operation has a fixed order but can be executed by alternative machines (e.g., different HPHT chambers or laser cutters) from <num_machines>. Machine-dependent durations are specified in <processing_times>, and operations cannot be interrupted. The scheduling aims to minimize the makespan while maintaining zero-defect standards for gem-quality output.
Reason: The problem involves a fixed order of operations (HPHT, laser cutting, polishing, certification) for all jobs, which aligns with a flow-shop structure. Each operation (stage) can be executed by alternative machines (e.g., multiple HPHT chambers, laser cutters), indicating parallel machines at each stage. This matches the Hybrid Flow-shop Scheduling Problem (HFSSP), defined as multiple stages with parallel machines in at least one stage. While FJSSP allows flexible machine choice, HFSSP better captures the flow-shop nature (fixed, identical operation sequence for all jobs) combined with parallel machines per stage.
--------------------------------------------------------------------------------
Label: FJSSP, Predicted: HFSSP, Index: 80
Description: A tech factory assembles <num_jobs> smartphone camera modules, each requiring lens alignment, sensor calibration, autofocus testing, and final sealing in strict sequence. Each operation can be executed by specialized machines from a pool of <num_machines>, with processing times varying by precision requirements (see <processing_times>). Non-preemptive scheduling ensures zero defects, and the goal is to minimize makespan while meeting daily output targets for flagship devices.
Reason: The problem involves a strict sequence of operations (lens alignment, sensor calibration, autofocus testing, final sealing) for all jobs, characteristic of a flow-shop. Additionally, each operation can be executed by multiple machines from a pool, indicating parallel machines at each stage. This aligns with the Hybrid Flow-shop Scheduling Problem (HFSSP), which involves multiple stages with parallel machines in at least one stage.
--------------------------------------------------------------------------------
Label: JSSP, Predicted: FSSP, Index: 52
Description: A specialty vinyl production line processes <num_jobs> album orders through sequential stages (e.g., lacquer cutting, electroplating, pressing, quality inspection) on <num_machines> analog machines. Each stage is permanently allocated to a unique machine with durations specified in <processing_times>. Machines handle one operation exclusively, and orders must follow the exact analog production sequence. The scheduling objective is to minimize total production time while preserving the fidelity of vintage audio formats and avoiding machine idle periods.
Reason: The problem describes a flow-shop scenario where all jobs (album orders) must follow the exact sequential production stages (e.g., lacquer cutting, electroplating, pressing) on dedicated machines. Each machine is permanently assigned to a single stage, and the order of operations is fixed and identical for all jobs. This matches the definition of the Flow-Shop Scheduling Problem (FSSP), which requires jobs to follow the same machine sequence with one machine per stage.
--------------------------------------------------------------------------------
Label: FSSP, Predicted: HFSSP, Index: 2
Description: An appliance factory paints <num_jobs> refrigerator doors using <num_machines> automated stations: primer application, base coating, decorative finishing, and UV curing. All doors follow this sequence, and each machine handles one door at a time. Processing times for each step are fixed and documented in <processing_times>. The objective is to minimize the makespan (total time) to complete all painting jobs.
Reason: All doors follow the same fixed sequence of stages (primer, base, decorative, UV curing), which aligns with the Flow-Shop structure. However, the presence of <num_machines> stations (potentially more than the 4 processing steps) implies parallel machines in at least one stage, making it a Hybrid Flow-Shop Scheduling Problem (HFSSP).
--------------------------------------------------------------------------------
Label: FSSP, Predicted: HFSSP, Index: 52
Description: A honey processing facility handles <num_jobs> batches through <num_machines> stages: uncapping, centrifugal extraction, filtering, pasteurization, and jar filling. All batches follow this exact workflow, with exclusive machine usage and fixed operation times (<processing_times>). The goal is to schedule batches to minimize the makespan—the total time to process all honey batches from extraction to packaging.
Reason: The problem involves multiple stages (uncapping, centrifugal extraction, filtering, pasteurization, jar filling) with all batches following the same fixed sequence. The presence of <num_machines> implies the total number of machines across stages, which may include parallel machines in one or more stages (e.g., multiple machines for filtering). This matches the Hybrid Flow-Shop Scheduling Problem (HFSSP), defined as a flow-shop with parallel machines in at least one stage. Fixed operation sequences and exclusive machine usage further align with HFSSP.
--------------------------------------------------------------------------------
Label: JSSP, Predicted: FSSP, Index: 48
Description: A space research lab calibrates <num_jobs> high-precision exoplanet detection sensors through sequential stages (e.g., dark current testing, spectral alignment, cryogenic stabilization) on <num_machines> isolated calibration rigs. Each stage is permanently allocated to a rig with fixed durations from <processing_times>. Rigs operate exclusively, and sensors must progress through calibration stages without deviation to avoid cosmic interference. The goal is to minimize the makespan while adhering to astrophysical testing protocols.
Reason: The problem specifies that each stage is permanently allocated to a rig (fixed machine per operation) and sensors must follow sequential stages (predefined operation order). All jobs (sensors) follow the same sequence of stages, which corresponds to the Flow-Shop Scheduling Problem (FSSP). This matches FSSP's definition where all jobs follow the same machine sequence.
--------------------------------------------------------------------------------
Label: JSSP, Predicted: FSSP, Index: 17
Description: A robotics service center handles <num_jobs> repair orders for malfunctioning robotic arms, each requiring diagnostic, disassembly, part replacement, and recalibration steps across <num_machines> specialized workstations. Each step is bound to a specific workstation with fixed durations in <processing_times>. Workstations are single-threaded, and repairs must follow strict procedural sequences to avoid reassembly errors. The goal is to schedule all repairs to minimize total downtime, respecting both machine exclusivity and technical dependencies.
Reason: The problem specifies that each repair job must follow a strict sequence of steps (diagnostic, disassembly, part replacement, recalibration) bound to specific workstations. Since all jobs follow the same procedural order and each step is fixed to a designated workstation, this aligns with the Flow-Shop Scheduling Problem (FSSP), where all jobs share the same machine sequence. There is no flexibility in machine choice or variation in operation order across jobs, ruling out JSSP or FJSSP. The fixed, uniform workflow matches FSSP's definition.
--------------------------------------------------------------------------------
Label: JSSP, Predicted: FSSP, Index: 28
Description: A prefabricated housing factory assembles <num_jobs> modular units through sequential stages (e.g., framing, insulation, electrical, finishing) on <num_machines> dedicated assembly lines. Each stage is assigned to a fixed line with processing times from <processing_times>. Lines handle one unit at a time, and stages must follow engineering specifications without reordering. The scheduling challenge is to optimize the sequence of units to minimize total production time while respecting assembly dependencies and line capacity limits.
Reason: The problem describes a scenario where all jobs (modular units) must follow the same fixed sequence of stages (framing, insulation, etc.), each processed on dedicated assembly lines (machines). This matches the Flow-Shop Scheduling Problem (FSSP), where jobs follow the same machine order, stages are fixed, and the goal is to minimize makespan. The absence of parallel machines per stage or flexible routing rules out HFSSP and FJSSP, while predefined stage order and no assembly-specific DAG constraints exclude JSSP, OSSP, and ASP.
--------------------------------------------------------------------------------
Label: JSSP, Predicted: FSSP, Index: 35
Description: A high-precision production line fabricates <num_jobs> smartphone display panels through a sequence of critical processes (e.g., glass cutting, OLED deposition, encapsulation, quality inspection). Each process is permanently assigned to one of <num_machines> specialized machines, with exact durations specified in <processing_times>. Machines enforce single-operation processing, while panels must follow strict sequential workflows without deviation. The scheduling challenge is to minimize makespan by optimizing the alignment of all jobs across the production line, ensuring zero cross-contamination and adherence to nanoscale tolerances.
Reason: The problem specifies that each job (smartphone panel) must follow strict sequential workflows, which implies that all jobs follow the same predefined order of processes (e.g., glass cutting → OLED deposition → encapsulation → inspection). Each process is permanently assigned to a specific machine, and there is no flexibility in machine selection. This matches the Flow-Shop Scheduling Problem (FSSP), where all jobs follow the same machine sequence.
--------------------------------------------------------------------------------
Label: ASP, Predicted: HFSSP, Index: 50
Description: A biotech facility produces <num_jobs> vaccine doses across <num_machines> sterile workstations, involving tasks like antigen synthesis, adjuvant mixing, vial filling, and quality control. Precedence constraints (e.g., filling requires completed mixing) are encoded in <precedence_relations>, with task durations in <processing_times>. The goal is to minimize makespan to meet urgent demand.
Reason: The problem involves sequential tasks (antigen synthesis, adjuvant mixing, vial filling, QC) with precedence constraints, suggesting a flow of operations. The presence of multiple workstations (<num_machines>) implies potential parallel machines in stages (e.g., mixing or filling could have multiple machines). This aligns with HFSSP, where jobs follow the same stage sequence, and at least one stage has parallel machines to optimize makespan.
--------------------------------------------------------------------------------
Label: FJSSP, Predicted: HFSSP, Index: 43
Description: A biotech plant processes <num_jobs> vaccine batches through sterile filling, capping, labeling, and cold storage. Each step uses <num_machines> isolator-equipped machines to maintain aseptic conditions, with processing times in <processing_times>. Strict operation order and machine compatibility constraints apply. The schedule must minimize makespan to expedite life-saving shipments.
Reason: The problem describes multiple stages (sterile filling, capping, labeling, cold storage) with parallel machines (<num_machines>) in each stage, and jobs must follow a strict operation order. This matches the Hybrid Flow-shop Scheduling Problem (HFSSP), which involves multiple processing stages with parallel machines in at least one stage and a fixed flow of jobs through the stages.
--------------------------------------------------------------------------------
Label: FJSSP, Predicted: HFSSP, Index: 58
Description: A boutique workshop handles <num_jobs> personalized jewelry orders, each involving engraving, polishing, stone setting, and final inspection in sequence. Each operation can be performed by one of <num_machines> artisan workstations or laser engravers, with varying speeds. Processing times are machine-specific (<processing_times>), and no job can be paused mid-operation. The scheduling aims to minimize the total completion time while maintaining craftsmanship standards.
Reason: The problem involves a fixed sequence of operations (engraving, polishing, stone setting, inspection) common to all jobs, which aligns with a flow-shop structure. However, each operation can be performed by one of multiple parallel machines (artisan workstations or laser engravers) with varying speeds. This combination of flow-shop sequencing and parallel machines at each stage matches the definition of the Hybrid Flow-Shop Scheduling Problem (HFSSP).
--------------------------------------------------------------------------------
Label: FJSSP, Predicted: HFSSP, Index: 24
Description: An electric vehicle supplier manufactures <num_jobs> charging stations via casing fabrication, circuit mounting, software flashing, and stress testing. Each operation has <num_machines> compatible machines (e.g., CNC cutters, test benches), with times in <processing_times>. Operations are sequential and non-interruptible. Scheduling aims to minimize makespan to scale production for global rollout.
Reason: The problem involves sequential operations (casing, circuit, software, testing) with multiple compatible machines per operation. All jobs follow the same fixed order of operations (flow-shop structure), and each operation (stage) has parallel machines. This matches the Hybrid Flow-Shop Scheduling Problem (HFSSP), which combines flow-shop sequencing with parallel machines at one or more stages.
--------------------------------------------------------------------------------
Label: JSSP, Predicted: FSSP, Index: 0
Description: An automotive plant assembles <num_jobs> engine units through a strict sequence of operations (e.g., block machining, piston fitting, head assembly, testing) across <num_machines> specialized workstations. Each operation is permanently assigned to a specific workstation with fixed durations from <processing_times>. Workstations enforce single-operation processing, while engines must follow their assembly sequence without deviation. The scheduling challenge is to minimize makespan by coordinating all workflows to complete all units as early as possible, respecting both procedural dependencies and workstation exclusivity.
Reason: The problem describes engines following a strict, predefined sequence of operations with each operation assigned to a specific workstation. All jobs (engines) must follow the same fixed machine sequence (as implied by the example operations and fixed workstation assignments), which aligns with the Flow-Shop Scheduling Problem (FSSP) where all jobs follow the same machine order. This differs from JSSP, where jobs can have varying machine sequences.
--------------------------------------------------------------------------------
Label: JSSP, Predicted: FSSP, Index: 76
Description: A marine conservation lab produces <num_jobs> artificial reef modules via sequential stages (e.g., substrate mixing, biopolymer printing, salinity hardening) using <num_machines> dedicated eco-printers. Each stage is irrevocably tied to a specific printer with fixed eco-processing times from <processing_times>. Printers operate exclusively, and modules must follow their ecological fabrication sequence without deviation. The goal is to minimize makespan by synchronizing all printing processes to meet reef deployment deadlines while complying with marine-material curing requirements.
Reason: The problem describes a scenario where all jobs (artificial reef modules) must follow the same predefined sequence of stages (e.g., substrate mixing, biopolymer printing, salinity hardening). Each stage is tied to a specific printer (machine), and all jobs follow this identical machine sequence. This aligns with the Flow-Shop Scheduling Problem (FSSP), where all jobs share the same machine order, and each stage is processed on a dedicated machine. The fixed processing times and absence of machine flexibility further confirm this variant.
--------------------------------------------------------------------------------
Label: JSSP, Predicted: FSSP, Index: 45
Description: A boutique perfume atelier crafts <num_jobs> custom fragrance orders, each requiring a strict sequence of blending, aging, filtering, and bottling stages across <num_machines> dedicated workstations (e.g., maceration vats, precision scales, sealing machines). Each stage is irrevocably tied to a specific workstation with fixed durations from <processing_times>. Workstations enforce single-operation exclusivity, while fragrance batches must follow their exact formulation sequence without parallel processing. The goal is to schedule all orders to minimize total production time while preserving delicate olfactory quality standards.
Reason: The problem specifies that each fragrance order must follow a strict sequence of stages (blending, aging, filtering, bottling) on dedicated workstations, with each stage irrevocably tied to a specific machine. All jobs follow the same predefined machine sequence (fixed processing order), and there is no flexibility in machine choice or parallel processing within stages. This aligns with the Flow-Shop Scheduling Problem (FSSP), where all jobs follow the same machine sequence and each operation is assigned to a fixed machine.
--------------------------------------------------------------------------------
Label: FJSSP, Predicted: HFSSP, Index: 66
Description: A futuristic plant assembles <num_jobs> UAM vehicles (e.g., flying taxis), with operations including carbon-fiber molding, avionics integration, propulsion testing, and final certification. Each operation has a predefined order but can be assigned to one of <num_machines> specialized workstations. The <processing_times> account for machine-specific setups. Non-preemptive scheduling is critical to avoid rework, and the objective is to minimize total production time.
Reason: The problem involves a fixed sequence of operations (carbon-fiber molding, avionics integration, etc.) for all jobs, which must follow the same predefined order. Each operation can be processed on one of multiple parallel machines (specialized workstations), indicating a multi-stage setup with parallel machines at each stage. This matches the Hybrid Flow-shop Scheduling Problem (HFSSP), where jobs follow the same machine sequence through stages, and at least one stage has parallel machines.
--------------------------------------------------------------------------------
Label: FJSSP, Predicted: HFSSP, Index: 11
Description: An electronics manufacturer assembles <num_jobs> PCB batches, each undergoing operations such as solder paste application, component placement, reflow soldering, and testing. Each operation can be executed on one of several compatible machines from <num_machines>, with processing times depending on machine efficiency (<processing_times>). The operations must follow a predefined sequence, and no two tasks can overlap on the same machine. The objective is to minimize the total production time while maintaining high yield rates.
Reason: The problem involves a predefined sequence of operations for each job (like solder paste, component placement, etc.), and each operation can be executed on multiple compatible machines. This setup aligns with the Hybrid Flow-shop Scheduling Problem (HFSSP), where all jobs follow the same sequence of stages (flow-shop), and at least one stage has parallel machines. The presence of multiple machines per operation (stage) and a fixed order across jobs (typical in PCB manufacturing) makes HFSSP the most specific variant.
--------------------------------------------------------------------------------
Label: FSSP, Predicted: HFSSP, Index: 73
Description: An aerospace lab tests <num_jobs> fuel nozzles through <num_machines> quality control stages: pressure testing, flow calibration, X-ray inspection, and surface finish verification. Each nozzle undergoes tests in this exact order, with one nozzle per machine at any time. The testing durations are predetermined and listed in <processing_times>. The lab seeks to minimize the total testing time (makespan) for all nozzles.
Reason: The problem describes a flow-shop scenario where all jobs (fuel nozzles) follow the same sequence of four stages. However, the mention of <num_machines> (which could exceed the number of stages) implies that at least one stage has parallel machines. This matches the Hybrid Flow-Shop Scheduling Problem (HFSSP), defined as having multiple stages with parallel machines in at least one stage. The fixed order of operations and potential for parallel machines per stage align with HFSSP.
--------------------------------------------------------------------------------
Label: FJSSP, Predicted: HFSSP, Index: 45
Description: A renewable energy facility services <num_jobs> damaged wind turbine blades, each requiring a sequence of operations: inspection, composite patching, curing, and polishing. Each operation can be performed by one of <num_machines> specialized robotic arms or manual workstations, with processing times varying by tooling precision (see <processing_times>). Operations are non-preemptive and order-constrained. The goal is to minimize the makespan to reduce turbine downtime and maximize energy output.
Reason: The problem involves a fixed sequence of operations (inspection, patching, curing, polishing) for all jobs, akin to a flow-shop. Each operation can be performed by one of multiple machines (specialized robotic arms or workstations), indicating parallel machines at each stage. This aligns with the Hybrid Flow-Shop Scheduling Problem (HFSSP), which features multiple stages with parallel machines in at least one stage and enforces a uniform processing order across jobs.
--------------------------------------------------------------------------------
Label: FJSSP, Predicted: HFSSP, Index: 75
Description: A high-volume repair center processes <num_jobs> damaged smartphone screens daily, each requiring a sequence of operations: diagnostics, adhesive removal, screen replacement, and quality testing. Each operation can be performed by one of <num_machines> specialized workstations, with processing times varying by machine skill level (see <processing_times>). Operations are non-preemptive and must follow a strict order. The goal is to minimize the makespan—ensuring all devices are repaired and returned to customers as quickly as possible.
Reason: The problem involves a strict sequence of operations (diagnostics, adhesive removal, etc.) where each operation is processed by one of multiple specialized workstations (parallel machines) at each stage. This aligns with the Hybrid Flow-shop Scheduling Problem (HFSSP), which features multiple stages with parallel machines in at least one stage. The strict operation order and per-stage machine specialization distinguish it from FJSSP, where machines are more flexible across operations.
--------------------------------------------------------------------------------
Label: JSSP, Predicted: FSSP, Index: 82
Description: A polar research lab analyzes <num_jobs> ice core segments through destructive testing phases (cleaning, spectrometry, gas extraction) using <num_machines> specialized instruments in a cryogenic environment. Each analysis phase is permanently allocated to a single instrument with fixed durations from <processing_times>. Instruments (e.g., mass spectrometers) process one sample at a time to prevent data corruption, while core segments must follow strict chronological testing sequences to preserve stratigraphic integrity. The goal is to minimize makespan while accommodating instrument decontamination cycles and irreversible sample consumption.
Reason: The problem describes a scenario where each job (ice core segment) must follow a strict sequence of phases (cleaning, spectrometry, gas extraction), with each phase permanently assigned to a specific instrument. This matches the Flow-Shop Scheduling Problem (FSSP), as all jobs follow the same machine sequence (fixed order of phases) and each phase is allocated to a single machine. There is no flexibility in machine choice per operation (ruling out FJSSP/HFSSP), and the strict phase order precludes open or assembly scheduling variants.
--------------------------------------------------------------------------------
Label: FJSSP, Predicted: HFSSP, Index: 99
Description: A gourmet dairy processes <num_jobs> custom cheese batches through brining, mold inoculation, aging, and packaging. Each step must occur in sequence but can use any available aging chamber or machine from <num_machines>. Processing times vary by equipment (e.g., humidity-controlled vs. traditional racks) as per <processing_times>. The scheduling aims to minimize the total production time while preserving flavor profiles.
Reason: The problem describes a sequence of processing stages (brining, mold inoculation, aging, packaging) that must occur in order. Each stage can use any available machine from a pool, with varying processing times depending on equipment (e.g., aging chambers). This matches the Hybrid Flow-shop Scheduling Problem (HFSSP), where jobs follow a fixed sequence of stages, and at least one stage has parallel machines (here, aging chambers and other equipment) to choose from. The flexibility in selecting machines per stage, combined with sequential processing requirements, aligns with HFSSP.
--------------------------------------------------------------------------------
Label: FJSSP, Predicted: HFSSP, Index: 25
Description: A factory produces <num_jobs> batches of high-performance drone batteries, each requiring sequential operations like electrode coating, cell stacking, sealing, and performance testing. Each operation can be processed by one of <num_machines> specialized machines, with processing times varying based on machine efficiency (<processing_times>). Operations must follow a strict order, and no preemption is allowed. The goal is to minimize the makespan—ensuring timely delivery for drone assembly lines.
Reason: The problem describes sequential operations that must follow a strict order, with each operation processed by one of multiple specialized machines. This setup corresponds to a flow-shop structure (same operation sequence for all jobs) but with multiple machines available for each operation (stage), aligning with the Hybrid Flow-shop Scheduling Problem (HFSSP) definition of multiple stages with parallel machines in at least one stage.
--------------------------------------------------------------------------------
Label: FJSSP, Predicted: HFSSP, Index: 94
Description: A gourmet dairy processes <num_jobs> cheese batches through sequential steps: curd pressing, brine soaking, mold inoculation, and cave aging. Each stage can use specialized chambers or manual stations from <num_machines>, with aging times in <processing_times> varying by equipment (e.g., humidity-controlled vs. traditional caves). The schedule minimizes makespan to align with seasonal demand peaks while preserving flavor profiles.
Reason: The problem involves sequential stages (curd pressing, brine soaking, mold inoculation, cave aging) with parallel machines (specialized chambers or manual stations) at each stage. This structure matches the Hybrid Flow-shop Scheduling Problem (HFSSP), which features multiple stages with parallel machines in at least one stage. Additionally, varying processing times per equipment (e.g., humidity-controlled vs. traditional caves) and the goal of minimizing makespan align with HFSSP characteristics.
--------------------------------------------------------------------------------
Label: JSSP, Predicted: FSSP, Index: 11
Description: A medical fabrication center produces <num_jobs> customized prosthetic limbs through sequential stages (e.g., 3D printing, post-processing, fitting, quality assurance) on <num_machines> dedicated machines. Each stage is irrevocably tied to a specific machine with fixed time requirements from <processing_times>. Machines process one operation at a time, while prosthetic orders must follow exact medical specifications in sequence. The objective is to minimize makespan by optimizing the scheduling of all jobs, ensuring timely delivery for patients while respecting equipment and procedural constraints.
Reason: The problem describes a scenario where all jobs (prosthetic limbs) follow the exact same sequence of stages (3D printing, post-processing, fitting, quality assurance), with each stage irrevocably tied to a specific machine. This matches the Flow-Shop Scheduling Problem (FSSP), where all jobs follow the same machine order. The fixed processing times, dedicated machines per stage, and sequential processing requirements align perfectly with FSSP’s definition. There is no flexibility in machine assignments or variation in job sequences, ruling out JSSP, FJSSP, or other variants.
--------------------------------------------------------------------------------
Label: JSSP, Predicted: FSSP, Index: 32
Description: A sports equipment factory assembles <num_jobs> carbon-fiber wheel sets via sequential steps (e.g., rim molding, spoke threading, hub alignment, tension testing) using <num_machines> precision machines. Each step is locked to a dedicated machine with durations from <processing_times>. Machines are single-threaded, and wheel sets must follow aerodynamic design protocols without step reordering. The challenge is to minimize makespan while ensuring tolerances of <0.1mm across all assemblies.
Reason: The problem describes a scenario where each job (wheel set) must follow a fixed sequence of operations (e.g., rim molding, spoke threading, etc.), each locked to a dedicated machine. This matches the Flow-Shop Scheduling Problem (FSSP), where all jobs follow the same machine sequence in the same order. The absence of machine flexibility per operation (fixed assignments) and the requirement to strictly follow sequential steps without reordering align with FSSP's definition, unlike JSSP (which allows varying sequences per job) or other variants.
--------------------------------------------------------------------------------
Label: JSSP, Predicted: FSSP, Index: 89
Description: An optical manufacturing center coats <num_jobs> AR lens batches through precision processes (e.g., anti-reflective layering, hydrophobic treatment, quality inspection) on <num_machines> deposition chambers. Each process stage is permanently assigned to a chamber with fixed times from <processing_times>. Chambers process one lens batch at a time, and production sequences cannot be altered due to material science requirements. The goal is to minimize makespan by optimizing the coating schedule to meet demand while avoiding chamber congestion.
Reason: The problem describes a scenario where each job (AR lens batch) must follow a fixed sequence of process stages (e.g., anti-reflective layering, hydrophobic treatment, inspection), each permanently assigned to a specific deposition chamber. This aligns with the Flow-Shop Scheduling Problem (FSSP), where all jobs follow the same machine sequence. The inability to alter production sequences and the fixed chamber assignments per stage further confirm this, as FSSP requires identical processing sequences across all jobs without parallel machines at any stage (ruling out HFSSP).
--------------------------------------------------------------------------------
Label: FSSP, Predicted: HFSSP, Index: 18
Description: A hospital’s central sterile department handles <num_jobs> surgical tool sets through <num_machines> stages: disassembly, ultrasonic cleaning, autoclaving, drying, and reassembly. Each set must pass through machines in this exact sequence, with one-at-a-time processing. The <processing_times> data ensures predictable throughput. The objective is to minimize the makespan to meet urgent surgery demands.
Reason: The problem describes a flow-shop environment where all jobs (surgical tool sets) follow the same fixed sequence of stages (disassembly, ultrasonic cleaning, etc.). Since the problem mentions stages with <num_machines> (parallel machines at each stage), this matches the Hybrid Flow-Shop Scheduling Problem (HFSSP), which allows parallel machines in at least one stage. This differs from FSSP (single machine per stage) and JSSP/FJSSP (variable operation sequences).
--------------------------------------------------------------------------------
Label: FSSP, Predicted: HFSSP, Index: 78
Description: A defense contractor produces <num_jobs> satellite antennas via <num_machines> precision stages: composite molding, signal reflector coating, electronic module integration, and vacuum chamber testing. All antennas follow this sequence, with machine exclusivity and fixed durations from <processing_times>. The high-cost facility seeks to minimize makespan to meet launch window deadlines.
Reason: The problem involves multiple stages (composite molding, etc.) with all jobs following the same sequence, and the presence of <num_machines> machines across the stages implies potential parallel machines in at least one stage. This aligns with the Hybrid Flow-shop Scheduling Problem (HFSSP), where stages may have parallel machines.
--------------------------------------------------------------------------------
Label: JSSP, Predicted: FSSP, Index: 81
Description: A boutique perfume atelier processes <num_jobs> custom fragrance orders through sequential steps (maceration, filtration, aging) in <num_machines> dedicated workstations (glass reactors, cold traps, etc.). Each step is irrevocably tied to a specific workstation with fixed durations in <processing_times>. Workstations handle one ingredient batch at a time due to contamination risks, while orders must follow exact formulation sequences (e.g., base notes before top notes). The objective is to minimize total production time while respecting olfactory cross-contamination protocols and client-specified maturation requirements.
Reason: The problem requires all orders to follow the same sequential steps (maceration, filtration, aging) in a fixed order, with each step tied to a specific workstation. This matches the Flow-Shop Scheduling Problem (FSSP), where all jobs follow the same machine sequence. The contamination constraints and fixed workstation assignments align with FSSP’s structure, as there is no flexibility in machine choice or operation order variation between jobs.
--------------------------------------------------------------------------------
Label: FJSSP, Predicted: HFSSP, Index: 85
Description: A smart greenhouse facility manages <num_jobs> crop batches, each requiring sequenced operations like seeding, nutrient dosing, robotic harvesting, and packaging. Each operation can be performed by one of <num_machines> specialized agrobots or automated systems, with processing times varying by machine efficiency (see <processing_times>). Operations must follow strict biological growth stages, and resources cannot be shared mid-task. The goal is to minimize the makespan—ensuring fresh produce reaches markets with minimal delay.
Reason: The problem requires jobs to follow a strict sequence of operations (biological growth stages) with each operation assignable to one of multiple machines, indicating a flow-shop structure. The presence of parallel machines for operations aligns with the Hybrid Flow-shop Scheduling Problem (HFSSP), which involves multiple stages (here, operations like seeding, nutrient dosing) with parallel machines at each stage.
--------------------------------------------------------------------------------
Label: JSSP, Predicted: FSSP, Index: 23
Description: A heavy forging facility manufactures <num_jobs> railway parts (axles, couplings) through sequential operations (heating, stamping, quenching, machining) on <num_machines> dedicated machines. Operations are machine-specific with fixed times from <processing_times>, and each machine handles one operation at a time. Parts must adhere to strict metallurgical sequences. The challenge is to schedule jobs to minimize total completion time while accounting for high-energy consumption constraints and safety-critical tolerances.
Reason: The problem involves sequential operations (heating, stamping, quenching, machining) that all jobs must follow in the same fixed order, with dedicated machines for each operation. This matches the Flow-Shop Scheduling Problem (FSSP), where all jobs follow the same machine sequence. The fixed processing times, strict sequence adherence, and no flexibility in machine choice further align with FSSP rather than variants like JSSP (different sequences per job) or HFSSP (parallel machines in stages).
--------------------------------------------------------------------------------
Label: JSSP, Predicted: HFSSP, Index: 99
Description: A heritage ceramics studio fires <num_jobs> pottery batches in <num_machines> traditional kilns, with each batch following rigid steps (e.g., bisque firing, glazing, reduction firing). Each step is bound to a kiln type with fixed times in <processing_times>. Kilns handle one batch at a time, and steps cannot overlap within a batch. The challenge is to minimize total firing time while respecting kiln thermal recovery limits and artisan labor shifts.
Reason: The problem involves batches following a rigid sequence of steps (like bisque, glazing, reduction), each requiring a specific kiln type (machine type). Since kiln types may have multiple parallel machines (given <num_machines> kilns) and all batches follow the same step order, this aligns with Hybrid Flow-Shop Scheduling Problem (HFSSP), where stages (steps) have parallel machines and jobs follow a fixed sequence.
--------------------------------------------------------------------------------
Label: FJSSP, Predicted: HFSSP, Index: 8
Description: A confectionery plant processes <num_jobs> chocolate product variants (e.g., truffles, bars) through tempering, molding, decorating, and packaging. Each step can be executed by a subset of <num_machines> machines (e.g., enrobing lines, wrapping robots), with task durations in <processing_times>. Operations are non-preemptive and order-sensitive. The goal is to optimize the schedule to minimize the total production time while accommodating seasonal demand spikes.
Reason: The problem involves multiple stages (tempering, molding, decorating, packaging) where each stage can be processed by a subset of machines, and operations are order-sensitive. This matches the Hybrid Flow-shop Scheduling Problem (HFSSP), which features multiple stages with parallel machines in at least one stage. While there is flexibility in machine selection per step, the fixed, uniform processing sequence across all jobs (flow-shop structure) and parallel machines at stages align more closely with HFSSP than FJSSP, which typically assumes job-specific operation sequences.
--------------------------------------------------------------------------------
Label: FJSSP, Predicted: HFSSP, Index: 20
Description: A semiconductor lab develops <num_jobs> AI chip prototypes, each requiring sequential operations like lithography, etching, doping, and testing. Each operation can be executed on one of <num_machines> specialized machines, with processing times varying based on equipment precision (see <processing_times>). Operations must follow a strict order, and no preemption is allowed. The goal is to minimize the makespan—the total time to complete all prototypes while meeting tight R&D deadlines.
Reason: The problem involves sequential operations (lithography, etching, doping, testing) that must follow a strict order, indicating a flow-shop structure. Since each operation can be executed on one of multiple specialized machines (parallel machines at each stage), this aligns with the Hybrid Flow-Shop Scheduling Problem (HFSSP), which features multiple stages with parallel machines in at least one stage.
--------------------------------------------------------------------------------
Label: OSSP, Predicted: ASP, Index: 80
Description: An EV battery factory assembles <num_jobs> custom battery packs using <num_machines> workstations for cell sorting, welding, cooling system integration, and quality testing. The assembly sequence is flexible, allowing parallelization to reduce bottlenecks. Each operation’s duration is specified in <processing_times>, and no workstation can handle multiple packs simultaneously. The goal is to minimize the makespan—the total time to deliver all orders.
Reason: The problem involves assembly operations with potential precedence constraints (e.g., cooling system integration must precede testing) but allows flexibility in the assembly sequence, aligning with the DAG structure of ASP. While parallelization is permitted, the assembly process inherently requires certain operations to follow others, distinguishing it from OSSP (no precedences) and JSSP/FJSSP (fixed operation order).
--------------------------------------------------------------------------------
Label: JSSP, Predicted: FSSP, Index: 36
Description: A confectionery equipment manufacturer produces <num_jobs> custom chocolate molds via sequential stages (e.g., CNC engraving, polishing, non-stick coating, stress testing). Each stage is tied to one of <num_machines> dedicated machines, with fixed processing times from <processing_times>. Machines process one operation at a time, and molds must progress through their technical sequence uninterrupted. The goal is to schedule all jobs to minimize total production time while accounting for food-grade safety protocols and machine cleaning intervals.
Reason: The problem describes a scenario where each job (chocolate mold) must follow a fixed sequence of stages (CNC engraving, polishing, etc.), each tied to a dedicated machine. All jobs follow the same machine sequence (sequential stages), and there is no mention of parallel machines at any stage. This aligns with the Flow-Shop Scheduling Problem (FSSP), where all jobs share the same machine order.
--------------------------------------------------------------------------------
Label: ASP, Predicted: HFSSP, Index: 48
Description: A marine conservation project coordinates <num_jobs> operations across <num_machines> vessels and fabrication sites to deploy artificial reefs. Tasks include mold casting, eco-friendly material injection, and underwater placement, where curing must precede submersion (<precedence_relations>). Time estimates in <processing_times> account for tidal windows, and the goal is to minimize deployment makespan to protect coastal ecosystems.
Reason: The problem involves multiple stages (e.g., mold casting, injection, curing, placement) with precedence constraints. The mention of vessels and fabrication sites as resources suggests parallel machines at certain stages (e.g., multiple vessels for underwater placement). This aligns with the Hybrid Flow-shop Scheduling Problem (HFSSP), which features multiple processing stages with parallel machines in at least one stage, while jobs follow a fixed sequence of operations (flow) across stages.
--------------------------------------------------------------------------------
Label: JSSP, Predicted: FSSP, Index: 1
Description: A pharmaceutical facility produces <num_jobs> batches of tablets through a regulated sequence of stages (e.g., mixing, compression, coating, packaging) on <num_machines> dedicated machines. Each stage is irrevocably tied to a specific machine with fixed processing times from <processing_times>. Machines handle only one batch at a time, and batches must follow their predefined sequence to comply with FDA regulations. The objective is to minimize makespan by optimizing the schedule while adhering to strict hygiene protocols and machine constraints.
Reason: The problem describes a regulated sequence of stages (e.g., mixing, compression, coating, packaging) that all batches must follow, with each stage tied to a specific machine. This aligns with the Flow-Shop Scheduling Problem (FSSP), where all jobs (batches) follow the same predefined machine sequence. The strict adherence to a fixed order for all batches, rather than job-specific sequences, distinguishes this from JSSP or other variants.
--------------------------------------------------------------------------------
Label: JSSP, Predicted: HFSSP, Index: 61
Description: An artisanal glass studio produces <num_jobs> custom orders (e.g., vases, sculptures) through sequential stages (molten shaping, annealing, etching) using <num_machines> specialized workstations (furnace, kiln, engraving bench). Each stage is irrevocably tied to a workstation with fixed durations from <processing_times>. Workstations handle one operation at a time, and orders must follow exact artistic workflows. The challenge is to sequence all orders to minimize total studio time while respecting fragile-material handling rules and artist availability.
Reason: The problem involves sequential stages with each stage tied to a specific workstation, indicating a flow-shop structure. However, since the number of workstations (<num_machines>) can exceed the number of stages, it implies parallel machines in at least one stage (e.g., multiple furnaces for molten shaping). This aligns with the Hybrid Flow-shop Scheduling Problem (HFSSP), which allows multiple stages with parallel machines in one or more stages, while jobs follow the same predefined sequence of stages.
--------------------------------------------------------------------------------
Label: ASP, Predicted: HFSSP, Index: 33
Description: A bioengineering facility automates <num_jobs> steps across <num_machines> robotic stations to synthesize gene-edited microbes. Operations include plasmid insertion, incubation, fluorescence tagging, and viability assays. Precedence constraints in <precedence_relations> mandate that tagging occurs only after incubation, and assays follow tagging. Lab-specific delays in <processing_times> account for biological growth rates. The schedule optimizes the end-to-end workflow makespan.
Reason: The problem involves a sequence of operations (plasmid insertion, incubation, tagging, assays) that all jobs must follow, indicating a flow-shop structure. The mention of multiple robotic stations (<num_machines>) suggests parallel machines at one or more stages (e.g., incubation or tagging), aligning with the Hybrid Flow-shop Scheduling Problem (HFSSP) definition. Precedence constraints enforce a strict order, but the key differentiator is the multi-stage flow with potential parallel machines, which HFSSP explicitly addresses.
--------------------------------------------------------------------------------
Label: FJSSP, Predicted: HFSSP, Index: 92
Description: A biotech lab produces <num_jobs> patient-specific gene therapies, with strict sequences: DNA synthesis, viral vector loading, quality control, and cryopreservation. Each step can use alternative equipment from a pool of <num_machines> (e.g., PCR machines vs. microfluidics), with time costs in <processing_times>. Scheduling must minimize makespan to meet critical treatment deadlines while adhering to cellular viability constraints.
Reason: The problem involves a strict sequence of operations (DNA synthesis, viral vector loading, quality control, cryopreservation) that all jobs must follow, forming a flow-shop structure. Additionally, each step (stage) allows the use of alternative equipment from a pool of machines, indicating parallel machines at one or more stages. This matches the Hybrid Flow-shop Scheduling Problem (HFSSP), which combines flow-shop sequencing with parallel machine flexibility at specific stages.
--------------------------------------------------------------------------------
Label: ASP, Predicted: FJSSP, Index: 90
Description: A space agency assembles <num_jobs> mirror segments and calibration instruments for a next-generation telescope across <num_machines> precision workstations. Operations include polishing, alignment, sensor integration, and thermal shielding, where alignment cannot begin until polishing is complete. These dependencies are formalized in <precedence_relations>, and task durations (e.g., 8 hours for polishing) are specified in <processing_times>. The goal is to minimize the makespan to meet launch window deadlines.
Reason: The problem involves multiple operations (polishing, alignment, etc.) with precedence constraints (alignment after polishing) and requires scheduling across multiple workstations. While the dependencies resemble JSSP, the presence of <num_machines> workstations (parallel machines) suggests potential flexibility in machine assignment for operations, aligning with FJSSP. However, the problem does not explicitly state that all jobs follow the same machine sequence (FSSP/HFSSP) or involve assembly of components (ASP). The precedence constraints are predefined per job, and machine flexibility is implied by the general workstation setup, making FJSSP the best fit.
--------------------------------------------------------------------------------
Label: ASP, Predicted: HFSSP, Index: 61
Description: An environmental engineering team schedules <num_jobs> operations across <num_machines> vessels and 3D-printing platforms to construct and deploy artificial reef modules. Tasks like base anchoring, coral seeding, and bio-coating depend on prior steps (e.g., seeding requires hardened bases). These dependencies are encoded in <precedence_relations>, with ocean conditions affecting <processing_times>. The objective is to minimize deployment time before tidal changes disrupt operations.
Reason: The problem involves scheduling operations with precedence constraints (e.g., anchoring before seeding) and parallel machines (vessels and 3D-printing platforms). The process resembles a multi-stage workflow where operations like anchoring, seeding, and bio-coating must follow a sequence (flow), and each stage may have multiple parallel machines (e.g., multiple vessels for anchoring, multiple 3D-printers for seeding). This aligns with the Hybrid Flow-Shop Scheduling Problem (HFSSP), which allows stages with parallel machines and enforces a flow-like sequence across stages.
--------------------------------------------------------------------------------
Label: FSSP, Predicted: HFSSP, Index: 44
Description: A pasta factory dries and packages <num_jobs> batches of artisan pasta through <num_machines> stages: extrusion, drying, portioning, and vacuum sealing. Every batch follows the same sequence, with one batch per machine at any time. The processing times for each stage are listed in <processing_times>. The scheduling target is to minimize the total production time (makespan) for all batches.
Reason: The problem describes a flow-shop scenario where all batches follow the same sequence of stages (extrusion, drying, portioning, vacuum sealing). The mention of "<num_machines>" suggests multiple machines may exist in at least one stage (e.g., parallel machines for drying or sealing), aligning with the Hybrid Flow-shop Scheduling Problem (HFSSP), which allows parallel machines in stages while maintaining a fixed processing order.
--------------------------------------------------------------------------------
Label: JSSP, Predicted: FSSP, Index: 56
Description: An emergency gear manufacturer assembles <num_jobs> tent orders via sequential operations (e.g., fabric cutting, pole welding, waterproof sealing, packaging) on <num_machines> dedicated stations. Each operation is irrevocably tied to a station with fixed durations in <processing_times>. Stations process one operation at a time, while orders must follow exact assembly sequences to ensure structural integrity. The objective is to minimize total production time to meet urgent delivery deadlines, balancing humanitarian priorities with equipment availability.
Reason: The problem describes a scenario where all jobs (tent orders) follow the same fixed sequence of operations (e.g., fabric cutting → pole welding → waterproof sealing → packaging) on dedicated stations. This aligns with the Flow-Shop Scheduling Problem (FSSP), where all jobs share the same machine sequence. Operations are fixed to specific stations, and there is no flexibility in machine choice or operation order, ruling out JSSP, FJSSP, and OSSP. The absence of parallel machines or assembly-specific precedence constraints (DAG) eliminates HFSSP and ASP.
--------------------------------------------------------------------------------
Label: JSSP, Predicted: FSSP, Index: 62
Description: A robotics lab calibrates <num_jobs> autonomous vehicle sensor suites (LiDAR, cameras, radar) through a mandatory sequence of tests (alignment, field-of-view validation, noise reduction) on <num_machines> dedicated calibration rigs. Each test is machine-specific with fixed durations in <processing_times>. Rigs operate exclusively, and sensor suites cannot skip or parallelize tests. The objective is to minimize total calibration time for all vehicles while ensuring millimeter-precision accuracy.
Reason: The problem describes a mandatory sequence of tests (alignment, field-of-view validation, noise reduction) that all sensor suites must follow. Each test is machine-specific with fixed durations, and the rigs operate exclusively. Since all jobs (sensor suites) follow the same predefined machine sequence (aligned with the order of tests), this matches the Flow-Shop Scheduling Problem (FSSP), where all jobs share the same machine order. There is no flexibility in machine choice or variation in operation sequences across jobs, ruling out JSSP, FJSSP, and others.
--------------------------------------------------------------------------------
Label: JSSP, Predicted: FSSP, Index: 67
Description: An autonomous drone depot services <num_jobs> agricultural drone fleets through sequential maintenance steps (e.g., battery swapping, pesticide tank refilling, rotor calibration) at <num_machines> specialized service bays. Each bay handles exactly one maintenance task with durations in <processing_times>, while fleets require strict adherence to preparation sequences before dawn deployment windows. The scheduling goal is to minimize makespan despite timevarying electricity costs that dynamically prioritize certain charging bays during offpeak hours.
Reason: The problem describes a scenario where all agricultural drone fleets (jobs) must follow a strict sequence of maintenance steps (e.g., battery swapping, pesticide refilling, rotor calibration), each handled by a specialized service bay (machine). This implies that all jobs follow the same machine order, aligning with the Flow-Shop Scheduling Problem (FSSP). Each service bay is dedicated to one task, and the sequential nature of the steps matches FSSP's requirement for identical job processing sequences. Time-varying electricity costs add constraints but do not alter the core flow-shop structure.
--------------------------------------------------------------------------------
Label: ASP, Predicted: HFSSP, Index: 77
Description: Marine conservationists assemble <num_jobs> biodegradable scaffolds across <num_machines> underwater sites to regenerate coral ecosystems. Tasks involve 3D printing lattice structures, seeding with coral larvae, and securing scaffolds to the seabed—where larval seeding depends on scaffold curing. Dependencies are in <precedence_relations>, and tidal windows dictate <processing_times>. The objective is to minimize deployment time before spawning seasons.
Reason: The problem involves multiple stages (3D printing, seeding, securing) with precedence constraints. Each stage can be processed at any of the <num_machines> underwater sites (parallel machines per stage), aligning with the Hybrid Flow-shop Scheduling Problem (HFSSP) definition. The dependencies form a fixed order of operations (flow), and tidal windows imply stage-specific processing times, reinforcing the multi-stage nature with parallel machines.
--------------------------------------------------------------------------------
Label: JSSP, Predicted: HFSSP, Index: 12
Description: A high-volume print shop processes <num_jobs> publishing orders (e.g., books, brochures) through sequential tasks (printing, binding, trimming, packaging) on <num_machines> industrial-grade machines. Each task is permanently assigned to a designated machine with fixed durations in <processing_times>. Machines handle one task exclusively, and orders must follow strict production sequences. The scheduling goal is to minimize total completion time while balancing machine utilization and meeting tight client deadlines.
Reason: The problem involves orders following a strict sequential production path (printing, binding, trimming, packaging) with each task assigned to designated machines. Since machines are dedicated to specific tasks and the number of machines (<num_machines>) may exceed the number of tasks (implying parallel machines for at least one task/stage), this aligns with the Hybrid Flow-Shop Scheduling Problem (HFSSP). HFSSP accommodates multiple stages with parallel machines in one or more stages, which fits the need to balance machine utilization while enforcing a fixed production sequence for all jobs.
--------------------------------------------------------------------------------
Label: JSSP, Predicted: HFSSP, Index: 29
Description: A craft coffee roastery processes <num_jobs> bean batches through sequential steps (e.g., sorting, roasting, cooling, packaging) using <num_machines> dedicated machines (e.g., roasters, chillers, sealers). Each step is machine-specific with fixed durations in <processing_times>. Machines operate exclusively, and batches must follow quality-controlled workflows. The objective is to schedule all batches to minimize total production time while preserving flavor profiles and meeting delivery schedules.
Reason: The problem involves sequential steps with dedicated machines, where each step may have multiple machines (as indicated by <num_machines> potentially exceeding the number of steps). This structure matches the Hybrid Flow-shop Scheduling Problem (HFSSP), which allows parallel machines in at least one stage while maintaining a fixed flow of jobs through stages.
--------------------------------------------------------------------------------

=== Statistics ===
Overall Accuracy: 483/600 = 0.8050

Problem Type: HFSSP
Accuracy: 100/100 = 1.0000
Top 3 Misclassifications:

Problem Type: ASP
Accuracy: 85/100 = 0.8500
Top 3 Misclassifications:
  Predicted: HFSSP, Count: 7
  Predicted: FJSSP, Count: 4
  Predicted: FSSP, Count: 3

Problem Type: FSSP
Accuracy: 93/100 = 0.9300
Top 3 Misclassifications:
  Predicted: HFSSP, Count: 7

Problem Type: JSSP
Accuracy: 51/100 = 0.5100
Top 3 Misclassifications:
  Predicted: FSSP, Count: 39
  Predicted: HFSSP, Count: 10

Problem Type: FJSSP
Accuracy: 57/100 = 0.5700
Top 3 Misclassifications:
  Predicted: HFSSP, Count: 43

Problem Type: OSSP
Accuracy: 97/100 = 0.9700
Top 3 Misclassifications:
  Predicted: ASP, Count: 2
  Predicted: <Error> at level 0, Count: 1
================================================================================
