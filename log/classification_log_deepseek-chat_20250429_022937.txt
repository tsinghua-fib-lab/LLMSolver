Label: FJSSP, Predicted: HFSSP, Index: 30
Description: A craft brewery schedules <num_jobs> batches of specialty beers, each requiring mashing, boiling, fermenting, and bottling in strict sequence. Each stage can be processed by one of <num_machines> tanks or machines with varying capacities and efficiency levels. Processing times differ based on equipment (e.g., fermentation vats vs. rapid-cooling systems), as detailed in <processing_times>. Non-preemptive operations must avoid overlaps on shared equipment. The goal is to minimize the makespan while accommodating seasonal demand spikes.
Reason: The problem description involves multiple stages (mashing, boiling, fermenting, and bottling) with each stage having multiple machines (tanks or machines) with varying capacities and efficiency levels. This setup indicates parallel machines at each stage, which is characteristic of the Hybrid Flow-shop Scheduling Problem (HFSSP). Additionally, the operations must be performed in a strict sequence, which aligns with the flow-shop nature, and the flexibility in machine choice per operation within each stage further supports the hybrid aspect.
--------------------------------------------------------------------------------
Label: ASP, Predicted: JSSP, Index: 35
Description: A precision optics facility assembles <num_jobs> mirror segments for a next-generation space telescope across <num_machines> ultra-clean workstations. Tasks include grinding, coating, alignment, and stress testing, with strict dependencies — e.g., coating requires prior grinding and cleaning. These constraints are formalized in <precedence_relations>, and each operation’s duration is specified in <processing_times>. The goal is to minimize the makespan to meet launch window deadlines.
Reason: The problem involves assembling mirror segments with strict dependencies (precedence relations) between tasks, such as coating requiring prior grinding and cleaning. This indicates that the operations must follow a specific order, which is characteristic of the Job Shop Scheduling Problem (JSSP). Additionally, each operation is assigned to a specific workstation (machine), and the goal is to minimize the makespan, which aligns with the JSSP definition where each operation has a fixed machine assignment and a predefined operation order.
--------------------------------------------------------------------------------
Label: OSSP, Predicted: HFSSP, Index: 73
Description: An NGO coordinates <num_jobs> meal batches for disaster survivors, requiring cooking, packaging, and quality checks across <num_machines> portable stations. The order of stages can vary (e.g., packaging may occur before final heating). Each step’s duration is listed in <processing_times>, with constraints on parallel processing. The goal is to minimize the total time to deliver all meals amid urgent demand.
Reason: The problem involves multiple stages (cooking, packaging, quality checks) with parallel machines (portable stations) and the order of stages can vary, which aligns with the characteristics of the Hybrid Flow-shop Scheduling Problem (HFSSP). HFSSP is defined as having multiple stages with parallel machines in at least one stage, and it allows for flexibility in the order of operations, which matches the user's description.
--------------------------------------------------------------------------------
Label: ASP, Predicted: JSSP, Index: 89
Description: A museum lab reconstructs <num_jobs> ancient artifacts across <num_machines> conservation stations. Steps include 3D fragment scanning, AI-assisted matching, adhesive bonding, and surface finishing. Dependencies (e.g., scanning precedes matching) are in <precedence_relations>, with <processing_times> for each delicate operation. The schedule minimizes handling time to preserve fragile materials.
Reason: The problem involves reconstructing artifacts with specific operations (3D fragment scanning, AI-assisted matching, adhesive bonding, and surface finishing) that must follow a predefined order (precedence relations). Each operation has processing times and must be assigned to conservation stations (machines). The description does not indicate that all artifacts follow the same machine sequence (ruling out FSSP and HFSSP), nor does it suggest flexible machine choices for operations (ruling out FJSSP). The operations have a strict order (ruling out OSSP), and while there are precedence constraints, the problem is not about assembling components into a final product (ruling out ASP). The most fitting variant is the Job Shop Scheduling Problem (JSSP), where each operation of a job must be processed on a specific machine in a predefined order.
--------------------------------------------------------------------------------
Label: ASP, Predicted: FJSSP, Index: 94
Description: A robotic pizzeria executes <num_jobs> tasks across <num_machines> automated stations (dough prep, topping placement, baking, boxing). Precedence constraints in <precedence_relations> require dough proofing before saucing, and baking before boxing. Task durations in <processing_times> (e.g., 3 minutes per bake) are optimized to minimize customer wait times while ensuring food safety standards.
Reason: The problem involves multiple automated stations (dough prep, topping placement, baking, boxing) with precedence constraints (e.g., dough proofing before saucing, baking before boxing). This indicates that the operations must follow a specific order, similar to the Job Shop Scheduling Problem (JSSP). However, the problem also mentions that the tasks are executed across multiple machines, which suggests that there might be flexibility in assigning tasks to machines, aligning more closely with the Flexible Job Shop Scheduling Problem (FJSSP). The predefined operation order and the potential for flexible machine assignment make FJSSP the most appropriate variant.
--------------------------------------------------------------------------------
Label: ASP, Predicted: JSSP, Index: 87
Description: A precision engineering workshop produces <num_jobs> bespoke bobsleds across <num_machines> stations, including carbon-fiber molding, aerodynamics tuning, and impact testing. Precedence rules (e.g., molding must cure before tuning) are in <precedence_relations>, with <processing_times> for each step. The schedule must minimize lead time for pre-Games delivery.
Reason: The problem description involves bespoke bobsleds (jobs) that must go through multiple stations (machines) with specific precedence rules (e.g., molding must cure before tuning) and processing times. This indicates that each job has a predefined operation order with precedence constraints, which is characteristic of the Job Shop Scheduling Problem (JSSP). The mention of fixed stations (carbon-fiber molding, aerodynamics tuning, impact testing) suggests that each operation is assigned to a fixed machine, further aligning with JSSP. The goal of minimizing lead time is also consistent with typical JSSP objectives.
--------------------------------------------------------------------------------
Label: HFSSP, Predicted: <Error>, Index: 65
Description: A confectionery plant processes <num_jobs> batches of chocolate products through <num_stages> stages, including mixing, conching, tempering, molding, and packaging. Some stages (e.g., molding) have multiple parallel machines to handle high demand, as specified in <machines_per_stage>. All batches follow the same sequence, and no job can skip a stage. Processing times per stage are detailed in <processing_times>. The goal is to minimize the makespan—the total production time—while ensuring consistent product quality and meeting seasonal demand peaks.
Reason: Request timed out.
--------------------------------------------------------------------------------
Label: FJSSP, Predicted: HFSSP, Index: 29
Description: A smart textile factory processes <num_jobs> fabric orders through sequential stages: pre-treatment, dyeing, drying, and quality control. Each stage can be handled by any compatible machine from <num_machines>, with machine-dependent processing times (<processing_times>). Jobs follow a strict order, and machines are reserved until tasks finish. The objective is to minimize the makespan while reducing water/energy waste in dyeing processes.
Reason: The problem involves multiple stages (pre-treatment, dyeing, drying, quality control) with parallel machines at each stage, and jobs must follow a strict order through these stages. This matches the definition of the Hybrid Flow-shop Scheduling Problem (HFSSP), which is characterized by multiple stages with parallel machines in at least one stage and a fixed sequence of operations for each job.
--------------------------------------------------------------------------------
Label: OSSP, Predicted: HFSSP, Index: 97
Description: A tech company processes <num_jobs> datasets through <num_machines> stages like data cleaning, annotation, and model validation. The workflow is non-sequential: tasks can be reordered to balance server loads. Each stage’s runtime is listed in <processing_times>, and no two tasks can use the same machine simultaneously. The scheduler aims to minimize the total processing time for all datasets to accelerate AI deployment.
Reason: The problem description involves multiple stages (data cleaning, annotation, model validation) with parallel machines (since tasks can be reordered to balance server loads and no two tasks can use the same machine simultaneously). This matches the Hybrid Flow-shop Scheduling Problem (HFSSP), which is characterized by multiple stages with parallel machines in at least one stage. The non-sequential workflow and the ability to reorder tasks further align with the flexibility allowed in HFSSP.
--------------------------------------------------------------------------------
Label: ASP, Predicted: FJSSP, Index: 79
Description: A biotech facility executes <num_jobs> sterile processes across <num_machines> isolators to manufacture patient-specific gene therapies. Tasks include viral vector synthesis, CRISPR editing, and vial labeling—where quality control halts further steps if contaminants are detected. The workflow is in <precedence_relations>, with <processing_times> for each batch. The aim is to minimize makespan for critical-care deliveries.
Reason: The problem involves multiple isolators (machines) that can perform various tasks (viral vector synthesis, CRISPR editing, vial labeling) with precedence relations and processing times. The tasks are not required to follow a fixed machine sequence (unlike FSSP), and there is flexibility in machine assignment (unlike JSSP). The presence of precedence relations and the need to minimize makespan align with the Flexible Job Shop Scheduling Problem (FJSSP), where operations have predefined order but machine assignment is flexible.
--------------------------------------------------------------------------------
Label: ASP, Predicted: JSSP, Index: 15
Description: A semiconductor foundry processes <num_jobs> operations across <num_machines> specialized machines to produce integrated circuits. Tasks include photolithography, etching, doping, and final testing, with strict dependencies — e.g., etching cannot begin until photoresist patterning is complete. These precedence rules are encoded in <precedence_relations>, and each step’s duration is specified in <processing_times>. The goal is to minimize the makespan of wafer production.
Reason: The problem description involves processing operations across specialized machines with strict precedence constraints (e.g., etching cannot begin until photoresist patterning is complete), and the goal is to minimize the makespan. This aligns with the Job Shop Scheduling Problem (JSSP), where each operation is assigned to a fixed machine and must follow a predefined order due to the precedence rules. The presence of strict dependencies and fixed machine assignments per operation rules out more flexible variants like FJSSP or OSSP, and the lack of stages with parallel machines or identical machine sequences for all jobs rules out FSSP, HFSSP, and ASP.
--------------------------------------------------------------------------------
Label: ASP, Predicted: FJSSP, Index: 50
Description: A biotech facility produces <num_jobs> vaccine doses across <num_machines> sterile workstations, involving tasks like antigen synthesis, adjuvant mixing, vial filling, and quality control. Precedence constraints (e.g., filling requires completed mixing) are encoded in <precedence_relations>, with task durations in <processing_times>. The goal is to minimize makespan to meet urgent demand.
Reason: The problem involves multiple tasks (antigen synthesis, adjuvant mixing, vial filling, quality control) with precedence constraints (e.g., filling requires completed mixing) and tasks can be assigned to multiple sterile workstations (machines). This matches the Flexible Job Shop Scheduling Problem (FJSSP), where operations have a predefined order but can be flexibly assigned to any available machine within a set of eligible machines.
--------------------------------------------------------------------------------
Label: JSSP, Predicted: HFSSP, Index: 83
Description: A logistics hub services <num_jobs> autonomous robot fleets through sequential maintenance stages (battery swap, diagnostics, software updates) at <num_machines> docking bays. Each stage is hardwired to specific bay types with fixed service times in <processing_times>. Bays enforce singular robot processing due to physical space constraints, while fleets require ordered servicing to meet deployment windows. The scheduling challenge is to minimize total downtime across all fleets while preventing charging bottlenecks and synchronization failures.
Reason: The problem description involves multiple stages (battery swap, diagnostics, software updates) with each stage hardwired to specific bay types (machines) and fixed service times. This setup indicates that all fleets (jobs) must follow the same sequence of stages, which is characteristic of a Flow-Shop Scheduling Problem (FSSP). However, the mention of 'docking bays' implies that there may be parallel machines at each stage, which aligns with the Hybrid Flow-shop Scheduling Problem (HFSSP), where multiple stages have parallel machines in at least one stage. The problem also enforces ordered servicing to meet deployment windows, which is consistent with the flow-shop paradigm but with added complexity due to parallel machines.
--------------------------------------------------------------------------------
Label: JSSP, Predicted: FSSP, Index: 28
Description: A prefabricated housing factory assembles <num_jobs> modular units through sequential stages (e.g., framing, insulation, electrical, finishing) on <num_machines> dedicated assembly lines. Each stage is assigned to a fixed line with processing times from <processing_times>. Lines handle one unit at a time, and stages must follow engineering specifications without reordering. The scheduling challenge is to optimize the sequence of units to minimize total production time while respecting assembly dependencies and line capacity limits.
Reason: The problem description involves assembling modular units through sequential stages on dedicated assembly lines, where each stage is assigned to a fixed line and stages must follow engineering specifications without reordering. This matches the Flow-Shop Scheduling Problem (FSSP), where all jobs follow the same machine sequence (i.e., the same stages in the same order). The presence of dedicated assembly lines and fixed processing times per stage further supports this classification. The problem does not involve flexible machine choices (ruling out FJSSP), parallel machines in stages (ruling out HFSSP), or operations with arbitrary precedence constraints (ruling out ASP). The fixed order of stages also rules out OSSP and JSSP, where operations can have different orders or machine assignments.
--------------------------------------------------------------------------------
Label: FJSSP, Predicted: HFSSP, Index: 43
Description: A biotech plant processes <num_jobs> vaccine batches through sterile filling, capping, labeling, and cold storage. Each step uses <num_machines> isolator-equipped machines to maintain aseptic conditions, with processing times in <processing_times>. Strict operation order and machine compatibility constraints apply. The schedule must minimize makespan to expedite life-saving shipments.
Reason: The problem description mentions that each vaccine batch must go through a strict operation order (sterile filling, capping, labeling, and cold storage) and that each step uses multiple isolator-equipped machines (parallel machines at each stage). This aligns with the Hybrid Flow-shop Scheduling Problem (HFSSP), which involves multiple stages with parallel machines in at least one stage and a fixed sequence of operations for all jobs.
--------------------------------------------------------------------------------
Label: FSSP, Predicted: HFSSP, Index: 73
Description: An aerospace lab tests <num_jobs> fuel nozzles through <num_machines> quality control stages: pressure testing, flow calibration, X-ray inspection, and surface finish verification. Each nozzle undergoes tests in this exact order, with one nozzle per machine at any time. The testing durations are predetermined and listed in <processing_times>. The lab seeks to minimize the total testing time (makespan) for all nozzles.
Reason: The problem description states that each nozzle undergoes tests in the exact same order (pressure testing, flow calibration, X-ray inspection, and surface finish verification) and that there are multiple machines at each stage (quality control stages). This matches the definition of the Hybrid Flow-shop Scheduling Problem (HFSSP), which involves multiple stages with parallel machines in at least one stage and all jobs follow the same machine sequence.
--------------------------------------------------------------------------------
Label: OSSP, Predicted: FSSP, Index: 13
Description: A prefab housing factory assembles <num_jobs> modular units using <num_machines> workstations (e.g., framing, plumbing, electrical, finishing). The assembly sequence is adaptable to worker availability, with task times defined in <processing_times>. Each unit must pass through all stations, but no station can process multiple units simultaneously. The goal is to minimize the makespan—the total time to complete all units.
Reason: The problem description states that each modular unit must pass through all stations (workstations) in a sequence that is adaptable to worker availability, but there is no mention of predefined operation order or flexibility in machine choice per operation. This aligns with the Flow-Shop Scheduling Problem (FSSP), where all jobs follow the same machine sequence but the order can be adapted (in this case, based on worker availability). The constraints that no station can process multiple units simultaneously and the goal to minimize makespan are also consistent with FSSP.
--------------------------------------------------------------------------------
Label: FSSP, Predicted: JSSP, Index: 77
Description: A gas plant refills <num_jobs> medical oxygen cylinders through <num_machines> critical stages: depressurization, purity testing, refilling, valve calibration, and safety certification. Cylinders follow this strict sequence, with each i-th operation bound to the i-th machine. Processing times (including safety checks) are fixed in <processing_times>. The schedule must minimize makespan to accelerate emergency supply chains.
Reason: The problem description specifies that each cylinder must go through a strict sequence of stages (depressurization, purity testing, refilling, valve calibration, and safety certification), with each i-th operation bound to the i-th machine. This matches the definition of the Job Shop Scheduling Problem (JSSP), where each job (cylinder) has a predefined operation order and each operation is assigned to a specific machine.
--------------------------------------------------------------------------------
Label: FSSP, Predicted: HFSSP, Index: 78
Description: A defense contractor produces <num_jobs> satellite antennas via <num_machines> precision stages: composite molding, signal reflector coating, electronic module integration, and vacuum chamber testing. All antennas follow this sequence, with machine exclusivity and fixed durations from <processing_times>. The high-cost facility seeks to minimize makespan to meet launch window deadlines.
Reason: The problem description states that all antennas follow the same sequence of stages (composite molding, signal reflector coating, electronic module integration, and vacuum chamber testing) and involves multiple machines at each stage. This matches the definition of the Hybrid Flow-shop Scheduling Problem (HFSSP), which is characterized by multiple stages with parallel machines in at least one stage and all jobs following the same machine sequence.
--------------------------------------------------------------------------------
Label: FJSSP, Predicted: HFSSP, Index: 94
Description: A gourmet dairy processes <num_jobs> cheese batches through sequential steps: curd pressing, brine soaking, mold inoculation, and cave aging. Each stage can use specialized chambers or manual stations from <num_machines>, with aging times in <processing_times> varying by equipment (e.g., humidity-controlled vs. traditional caves). The schedule minimizes makespan to align with seasonal demand peaks while preserving flavor profiles.
Reason: The problem description involves multiple stages (curd pressing, brine soaking, mold inoculation, and cave aging) with each stage having specialized chambers or manual stations (parallel machines) that can be chosen flexibly for each operation. This matches the definition of the Hybrid Flow-shop Scheduling Problem (HFSSP), which features multiple stages with parallel machines in at least one stage and allows for flexible machine choices within stages. The predefined sequential order of operations (stages) also aligns with flow-shop characteristics, distinguishing it from open shop or job shop variants.
--------------------------------------------------------------------------------
Label: ASP, Predicted: JSSP, Index: 23
Description: A specialty workshop restores classic motorcycles with <num_jobs> tasks across <num_machines> workbenches, such as engine disassembly, chroming, carburetor tuning, and upholstery. Precedence constraints (e.g., painting cannot start before sandblasting) are modeled in <precedence_relations>, with labor hours in <processing_times>. The goal is to minimize project duration while preserving authenticity.
Reason: The problem involves multiple tasks (jobs) that need to be scheduled across multiple workbenches (machines) with specific precedence constraints (e.g., painting cannot start before sandblasting). The tasks have predefined processing times and must follow a certain order, which aligns with the characteristics of the Job Shop Scheduling Problem (JSSP). Additionally, the goal is to minimize project duration, which is a common objective in JSSP. The problem does not mention flexibility in machine choice for operations (which would suggest FJSSP), nor does it imply that all jobs follow the same machine sequence (FSSP), multiple stages with parallel machines (HFSSP), no predefined operation order (OSSP), or assembly-specific constraints (ASP).
--------------------------------------------------------------------------------
Label: ASP, Predicted: FJSSP, Index: 33
Description: A bioengineering facility automates <num_jobs> steps across <num_machines> robotic stations to synthesize gene-edited microbes. Operations include plasmid insertion, incubation, fluorescence tagging, and viability assays. Precedence constraints in <precedence_relations> mandate that tagging occurs only after incubation, and assays follow tagging. Lab-specific delays in <processing_times> account for biological growth rates. The schedule optimizes the end-to-end workflow makespan.
Reason: The problem description involves multiple robotic stations (machines) with precedence constraints (e.g., tagging after incubation, assays after tagging) and lab-specific delays (processing times). The operations have a predefined order (plasmid insertion → incubation → fluorescence tagging → viability assays), but the description does not explicitly state that all jobs follow the same machine sequence (as in FSSP) or that there are multiple stages with parallel machines (as in HFSSP). Instead, it suggests that operations must follow a specific order (precedence constraints) and may involve flexible machine assignments (though not explicitly stated). The most fitting variant is the Flexible Job Shop Scheduling Problem (FJSSP), as it allows for flexible machine choice per operation while adhering to predefined operation orders, which aligns with the described scenario.
--------------------------------------------------------------------------------
Label: ASP, Predicted: FJSSP, Index: 48
Description: A marine conservation project coordinates <num_jobs> operations across <num_machines> vessels and fabrication sites to deploy artificial reefs. Tasks include mold casting, eco-friendly material injection, and underwater placement, where curing must precede submersion (<precedence_relations>). Time estimates in <processing_times> account for tidal windows, and the goal is to minimize deployment makespan to protect coastal ecosystems.
Reason: The problem involves multiple operations (mold casting, material injection, underwater placement) with precedence constraints (curing must precede submersion), and tasks can be assigned to different vessels or fabrication sites (flexible machine choice). This aligns with the Flexible Job Shop Scheduling Problem (FJSSP), where operations have a predefined order but can be processed on any available machine from a set of eligible machines.
--------------------------------------------------------------------------------
Label: OSSP, Predicted: FJSSP, Index: 80
Description: An EV battery factory assembles <num_jobs> custom battery packs using <num_machines> workstations for cell sorting, welding, cooling system integration, and quality testing. The assembly sequence is flexible, allowing parallelization to reduce bottlenecks. Each operation’s duration is specified in <processing_times>, and no workstation can handle multiple packs simultaneously. The goal is to minimize the makespan—the total time to deliver all orders.
Reason: The problem involves assembling custom battery packs with a flexible assembly sequence, allowing parallelization across multiple workstations (cell sorting, welding, cooling system integration, and quality testing). Each operation's duration is specified, and no workstation can handle multiple packs simultaneously. The goal is to minimize the makespan. This scenario fits the Flexible Job Shop Scheduling Problem (FJSSP) because it allows for flexible machine choice per operation (parallelization) and has a predefined operation order (though the sequence is flexible, the operations themselves are defined).
--------------------------------------------------------------------------------
Label: FSSP, Predicted: HFSSP, Index: 44
Description: A pasta factory dries and packages <num_jobs> batches of artisan pasta through <num_machines> stages: extrusion, drying, portioning, and vacuum sealing. Every batch follows the same sequence, with one batch per machine at any time. The processing times for each stage are listed in <processing_times>. The scheduling target is to minimize the total production time (makespan) for all batches.
Reason: The problem description states that every batch follows the same sequence of stages (extrusion, drying, portioning, and vacuum sealing) and that there are multiple machines at each stage. This matches the definition of the Hybrid Flow-shop Scheduling Problem (HFSSP), which involves multiple stages with parallel machines in at least one stage and all jobs following the same machine sequence.
--------------------------------------------------------------------------------
Label: OSSP, Predicted: HFSSP, Index: 84
Description: A pharmaceutical plant manufactures <num_jobs> vaccine batches using <num_machines> modular units (mRNA synthesis, lipid encapsulation, purification, and vial filling). Regulatory constraints allow flexible stage sequencing but require exclusive machine access. Processing times (from <processing_times>) depend on batch size. The scheduler aims to minimize the makespan to accelerate vaccine distribution.
Reason: The problem description mentions that the pharmaceutical plant uses modular units (mRNA synthesis, lipid encapsulation, purification, and vial filling) which can be interpreted as stages with parallel machines (since it mentions 'modular units'). The regulatory constraints allow flexible stage sequencing but require exclusive machine access, which suggests that jobs can be processed in different orders but must follow the stages. This aligns with the Hybrid Flow-shop Scheduling Problem (HFSSP), where there are multiple stages with parallel machines in at least one stage and jobs must pass through all stages but not necessarily in the same order.
--------------------------------------------------------------------------------
Label: ASP, Predicted: FJSSP, Index: 28
Description: A medical robotics lab coordinates <num_jobs> tasks (actuator calibration, carbon-fiber socket molding, neural interface syncing) across <num_machines> precision workstations. Dependencies in <precedence_relations> require waterproofing to follow sensor integration. Custom-fit adjustments lead to non-uniform <processing_times>. The schedule prioritizes minimizing patient wait times.
Reason: The problem description mentions dependencies in precedence relations, which suggests that operations have a predefined order (not open shop). It also mentions non-uniform processing times and multiple tasks across multiple workstations, which indicates flexibility in machine assignment. This aligns with the Flexible Job Shop Scheduling Problem (FJSSP), where operations have a predefined order but can be processed on any available machine from a set of capable machines.
--------------------------------------------------------------------------------
Label: ASP, Predicted: HFSSP, Index: 77
Description: Marine conservationists assemble <num_jobs> biodegradable scaffolds across <num_machines> underwater sites to regenerate coral ecosystems. Tasks involve 3D printing lattice structures, seeding with coral larvae, and securing scaffolds to the seabed—where larval seeding depends on scaffold curing. Dependencies are in <precedence_relations>, and tidal windows dictate <processing_times>. The objective is to minimize deployment time before spawning seasons.
Reason: The problem involves multiple operations (3D printing, seeding, securing) with precedence constraints (seeding depends on scaffold curing) and tasks are assigned to different underwater sites (machines). The operations have a specific order (precedence relations), and the choice of machine for each operation is not explicitly stated to be flexible, but the problem allows for parallel processing across multiple sites. This aligns most closely with the Hybrid Flow-shop Scheduling Problem (HFSSP), where there are multiple stages (operations) with parallel machines (underwater sites) in at least one stage.
--------------------------------------------------------------------------------
Label: OSSP, Predicted: FSSP, Index: 91
Description: A pharmaceutical plant produces <num_jobs> vaccine batches using <num_machines> stations for mixing, filtration, vial filling, and quality control. The production sequence can be dynamically adjusted to avoid bottlenecks. Each batch must pass through all stations (duration in <processing_times>), with no parallel processing per station. The scheduler aims to minimize the total production time to meet urgent demand.
Reason: The problem describes a production sequence where each vaccine batch must pass through all stations (mixing, filtration, vial filling, and quality control) in a specific order, which is characteristic of a Flow-Shop Scheduling Problem (FSSP). All jobs follow the same machine sequence, and there is no parallel processing per station, which aligns with the definition of FSSP. The dynamic adjustment of the production sequence to avoid bottlenecks does not imply flexibility in machine choice or operation order, ruling out FJSSP, JSSP, and OSSP. There are no multiple stages with parallel machines (HFSSP) or assembly-like precedence constraints (ASP).
--------------------------------------------------------------------------------
Label: ASP, Predicted: JSSP, Index: 30
Description: A cutting-edge semiconductor lab assembles <num_jobs> quantum bit (qubit) modules across <num_machines> cryogenic workstations. Operations include substrate cooling, qubit deposition, microwave resonator tuning, and error-correction testing. Precedence constraints in <precedence_relations> dictate that resonator tuning cannot begin until deposition is complete, and testing requires all prior steps. Each operation’s duration in <processing_times> varies due to ultra-low-temperature tolerances. The goal is to minimize the makespan for chip fabrication.
Reason: The problem involves multiple operations with precedence constraints (substrate cooling, qubit deposition, microwave resonator tuning, and error-correction testing) that must be performed in a specific order, which is characteristic of the Job Shop Scheduling Problem (JSSP). Each operation is assigned to a specific cryogenic workstation, and the order of operations is predefined by the precedence constraints, fitting the definition of JSSP where each operation has a fixed machine assignment and a predefined sequence.
--------------------------------------------------------------------------------

=== Statistics ===
Overall Accuracy: 570/600 = 0.9500

Problem Type: JSSP
Accuracy: 98/100 = 0.9800
Top 3 Misclassifications:
  Predicted: HFSSP, Count: 1
  Predicted: FSSP, Count: 1

Problem Type: OSSP
Accuracy: 94/100 = 0.9400
Top 3 Misclassifications:
  Predicted: HFSSP, Count: 3
  Predicted: FSSP, Count: 2
  Predicted: FJSSP, Count: 1

Problem Type: FSSP
Accuracy: 96/100 = 0.9600
Top 3 Misclassifications:
  Predicted: HFSSP, Count: 3
  Predicted: JSSP, Count: 1

Problem Type: HFSSP
Accuracy: 99/100 = 0.9900
Top 3 Misclassifications:
  Predicted: <Error>, Count: 1

Problem Type: ASP
Accuracy: 87/100 = 0.8700
Top 3 Misclassifications:
  Predicted: JSSP, Count: 6
  Predicted: FJSSP, Count: 6
  Predicted: HFSSP, Count: 1

Problem Type: FJSSP
Accuracy: 96/100 = 0.9600
Top 3 Misclassifications:
  Predicted: HFSSP, Count: 4
================================================================================
