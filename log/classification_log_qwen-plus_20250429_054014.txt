Label: FSSP, Predicted: JSSP, Index: 79
Description: A cosmetics facility packages <num_jobs> batches of organic face cream through <num_machines> hygienic stations: sterile filling, pump attachment, labeling, and shrink-wrapping. Each batch’s sequence is immutable, with processing times per machine in <processing_times>. Parallel processing is prohibited to avoid contamination. The goal is to minimize total packaging time for perishable ingredients.
Reason: The problem description indicates that each batch must follow a predefined sequence of operations (sterile filling, pump attachment, labeling, and shrink-wrapping), which are performed on specific machines. Parallel processing is prohibited, meaning there is only one machine per operation type, and the order of operations for each batch is immutable. This matches the characteristics of the Job Shop Scheduling Problem (JSSP), where each job has a fixed machine per operation and a predefined operation order.
--------------------------------------------------------------------------------
Label: FJSSP, Predicted: ASP, Index: 44
Description: An agricultural machinery plant assembles <num_jobs> autonomous tractors via chassis welding, drivetrain integration, AI module installation, and calibration. Operations are assigned to <num_machines> flexible assembly cells, with durations in <processing_times>. Parallelism is limited by tooling constraints. The goal is to minimize total production time while meeting seasonal demand peaks.
Reason: The problem involves assembling tractors through a series of operations with specific precedence constraints (e.g., chassis welding must occur before AI module installation). This implies a Directed Acyclic Graph (DAG) structure for the operations, which is characteristic of an Assembly Scheduling Problem (ASP). While other variants like FJSSP or HFSSP might seem relevant due to flexible assembly cells and parallelism, the emphasis on minimizing total production time while meeting demand peaks and respecting assembly precedence makes ASP the most appropriate choice.
--------------------------------------------------------------------------------
Label: JSSP, Predicted: FSSP, Index: 24
Description: A cosmetics plant processes <num_jobs> skincare product batches through ordered phases (mixing, emulsifying, filling, labeling) on <num_machines> hygienic machines. Each phase is assigned to a dedicated machine with fixed durations in <processing_times>. Machines are sterilized between batches and enforce single-operation processing. Batches must follow regulatory-compliant sequences. The goal is to minimize makespan while ensuring adherence to FDA-grade hygiene and batch traceability rules.
Reason: The problem description indicates that each skincare product batch follows a regulatory-compliant sequence of phases (mixing, emulsifying, filling, labeling), which are processed on dedicated machines with fixed durations. This implies a predefined operation order for all jobs, and each phase is assigned to a specific machine without flexibility in machine choice. Additionally, the focus is on minimizing makespan while adhering to constraints like hygiene and traceability. These characteristics align most closely with the Flow-Shop Scheduling Problem (FSSP), where all jobs follow the same machine sequence.
--------------------------------------------------------------------------------
Label: HFSSP, Predicted: FJSSP, Index: 13
Description: A publishing house processes <num_jobs> book orders through <num_stages> stages: printing, folding, stitching, binding, and trimming. Some stages (e.g., printing and binding) have multiple machines (<machines_per_stage>) to handle bulk orders. Jobs must complete each stage sequentially. Processing times per machine are defined in <processing_times>. The schedule optimizes the makespan to meet tight publishing deadlines without compromising print quality.
Reason: The problem involves processing book orders through a predefined sequence of stages (printing, folding, stitching, binding, and trimming), which indicates a fixed order of operations. Additionally, some stages have multiple parallel machines available (e.g., printing and binding), allowing for flexibility in machine selection for certain operations. This matches the characteristics of the Flexible Job Shop Scheduling Problem (FJSSP), as it allows for flexible machine choice per operation while maintaining a predefined operation order.
--------------------------------------------------------------------------------
Label: HFSSP, Predicted: FJSSP, Index: 41
Description: A medical device facility processes <num_jobs> patient-specific orthopedic implants across <num_stages> stages: 3D printing, post-processing (e.g., polishing), sterilization, and packaging. Critical stages like 3D printing have multiple machines (<machines_per_stage>) to accommodate urgent orders. Jobs must follow the exact sequence, with no stage skipping. Processing times vary by machine and are detailed in <processing_times>. The scheduling system aims to minimize the makespan—the total time to deliver all implants—while adhering to strict medical regulations and minimizing patient wait times.
Reason: The problem involves processing patient-specific orthopedic implants across multiple stages with a strict predefined sequence that cannot be skipped. Additionally, there are multiple machines available at critical stages (e.g., 3D printing), allowing for flexible machine selection for each job at those stages. This aligns with the characteristics of the Flexible Job Shop Scheduling Problem (FJSSP), which allows for flexible machine choices per operation while maintaining a predefined order of operations for each job. Variants like JSSP do not account for machine flexibility, and HFSSP does not emphasize the job-specific nature of the sequence as strongly as FJSSP does.
--------------------------------------------------------------------------------
Label: JSSP, Predicted: ASP, Index: 68
Description: A polar logistics center assembles <num_jobs> modular survival kits for remote bases through sequential packing stages (e.g., cryogenic food sealing, medical supply sterilization, fuel canister pressure testing) using <num_machines> climate-controlled processing stations. Each station is permanently assigned to one packing phase with fixed durations from <processing_times>, and kits must follow strict assembly sequences to meet aviation weight distribution requirements. The challenge is to minimize total completion time while accommodating unpredictable station outages caused by -60°C equipment failures.
Reason: The problem involves assembling survival kits with strict sequence constraints, indicating precedence constraints among operations. Additionally, each station is permanently assigned to one packing phase with fixed durations, which aligns with the characteristics of an Assembly Scheduling Problem (ASP). The ASP variant captures the need for meeting aviation weight distribution requirements through a specific assembly order and accommodates the challenge of minimizing total completion time while dealing with potential station outages.
--------------------------------------------------------------------------------
Label: OSSP, Predicted: JSSP, Index: 92
Description: A traveling film festival must prepare <num_jobs> screening venues by setting up projectors, sound systems, and seating across <num_machines> technician teams. The setup tasks can be reordered based on team availability, but each venue requires all steps (times in <processing_times>). Only one task per team or venue can occur at once. The objective is to minimize the time until all venues are ready.
Reason: The problem described involves setting up multiple venues with specific tasks that must be completed in a predefined order (projectors, sound systems, and seating). Each task can only be performed by one of the technician teams at a time, and each venue requires all steps to be completed. This matches the Job Shop Scheduling Problem (JSSP) because it has a fixed machine (team) per operation and a predefined operation order for each job (venue). There is no flexibility in choosing machines or stages, nor does it follow a simple flow-shop structure where all jobs follow the same sequence. Precedence constraints exist within each venue's setup process, which aligns with JSSP rather than OSSP or FSSP.
--------------------------------------------------------------------------------
Label: OSSP, Predicted: FJSSP, Index: 18
Description: A boutique coffee roaster processes <num_jobs> batches of beans through <num_machines> stages (e.g., sorting, roasting, grinding, and packaging). The sequence can vary to prioritize freshness or equipment availability. Each stage’s duration is listed in <processing_times>, and no two batches can use the same machine simultaneously. The goal is to minimize the makespan while preserving flavor profiles.
Reason: The problem involves processing batches of beans through multiple stages with a predefined sequence that can vary based on priorities such as freshness or equipment availability. Each batch cannot use the same machine simultaneously, and the goal is to minimize the makespan. This aligns most closely with the Flexible Job Shop Scheduling Problem (FJSSP), as it allows for flexible machine choices for each operation while maintaining a predefined order of operations for each job.
--------------------------------------------------------------------------------
Label: OSSP, Predicted: ASP, Index: 54
Description: A lunar base project assembles <num_jobs> habitat modules using <num_machines> robotic arms for welding, insulation, and life-support system installation. The assembly sequence is flexible to accommodate delayed cargo shipments. Task durations (see <processing_times>) depend on module complexity. The goal is to minimize total construction time despite strict single-machine-use constraints.
Reason: The problem description indicates that the assembly sequence is flexible, which implies that there are no fixed predefined operation orders. Additionally, the operations involve precedence constraints due to the nature of habitat module assembly (e.g., welding must precede insulation and life-support system installation). This aligns with the characteristics of an Assembly Scheduling Problem (ASP), where operations follow a Directed Acyclic Graph (DAG) for precedence but do not adhere to a strict or predefined order like in JSSP or FJSSP.
--------------------------------------------------------------------------------
Label: FJSSP, Predicted: HFSSP, Index: 1
Description: A semiconductor plant processes <num_jobs> wafer batches, each undergoing photolithography, etching, doping, and inspection in a fixed sequence. Each operation can be executed by a subset of <num_machines> machines (e.g., different etchers or scanners), with machine-dependent processing times specified in <processing_times>. Operations are non-preemptive and must adhere to strict cleanliness protocols. The scheduling objective is to minimize the makespan while maximizing equipment utilization.
Reason: The problem description indicates that each wafer batch undergoes a fixed sequence of operations (photolithography, etching, doping, and inspection), which aligns with the flow-shop structure. Additionally, there are multiple machines available for each operation, allowing flexibility in machine choice, which is characteristic of a hybrid flow-shop environment. The objective to minimize makespan while maximizing equipment utilization further supports this classification. Therefore, the most appropriate variant is 'HFSSP'.
--------------------------------------------------------------------------------
Label: ASP, Predicted: JSSP, Index: 79
Description: A biotech facility executes <num_jobs> sterile processes across <num_machines> isolators to manufacture patient-specific gene therapies. Tasks include viral vector synthesis, CRISPR editing, and vial labeling—where quality control halts further steps if contaminants are detected. The workflow is in <precedence_relations>, with <processing_times> for each batch. The aim is to minimize makespan for critical-care deliveries.
Reason: The problem involves sterile processes for manufacturing gene therapies with specific precedence relations and processing times. Quality control measures introduce potential halts, implying a need for careful sequencing of operations. The description suggests that each job (therapy batch) may have its own unique sequence of operations (not all jobs follow the same machine sequence), and there are constraints on the order of operations (precedence relations). This matches the characteristics of the Job Shop Scheduling Problem (JSSP), where each job has a predefined operation order and is processed on specific machines.
--------------------------------------------------------------------------------
Label: JSSP, Predicted: FSSP, Index: 52
Description: A specialty vinyl production line processes <num_jobs> album orders through sequential stages (e.g., lacquer cutting, electroplating, pressing, quality inspection) on <num_machines> analog machines. Each stage is permanently allocated to a unique machine with durations specified in <processing_times>. Machines handle one operation exclusively, and orders must follow the exact analog production sequence. The scheduling objective is to minimize total production time while preserving the fidelity of vintage audio formats and avoiding machine idle periods.
Reason: The problem description specifies that each stage is permanently allocated to a unique machine and that orders must follow the exact analog production sequence. This aligns with the Flow-Shop Scheduling Problem (FSSP) where all jobs follow the same machine sequence without any flexibility in machine choice or operation order. There are no indications of parallel machines, flexible machine assignments, or lack of predefined order, which rules out other variants like FJSSP, HFSSP, OSSP, or ASP.
--------------------------------------------------------------------------------
Label: FJSSP, Predicted: HFSSP, Index: 43
Description: A biotech plant processes <num_jobs> vaccine batches through sterile filling, capping, labeling, and cold storage. Each step uses <num_machines> isolator-equipped machines to maintain aseptic conditions, with processing times in <processing_times>. Strict operation order and machine compatibility constraints apply. The schedule must minimize makespan to expedite life-saving shipments.
Reason: The problem involves processing vaccine batches through multiple steps (sterile filling, capping, labeling, and cold storage) with strict operation order constraints, indicating a predefined sequence of operations. Additionally, each step uses isolator-equipped machines with potential parallelism (as there are <num_machines> for each step), which aligns with the Hybrid Flow-shop Scheduling Problem (HFSSP). HFSSP accounts for multiple stages where parallel machines exist in at least one stage, and all jobs follow a similar sequence of stages with the goal of minimizing makespan.
--------------------------------------------------------------------------------
Label: FSSP, Predicted: JSSP, Index: 77
Description: A gas plant refills <num_jobs> medical oxygen cylinders through <num_machines> critical stages: depressurization, purity testing, refilling, valve calibration, and safety certification. Cylinders follow this strict sequence, with each i-th operation bound to the i-th machine. Processing times (including safety checks) are fixed in <processing_times>. The schedule must minimize makespan to accelerate emergency supply chains.
Reason: The problem description specifies that each cylinder follows a strict sequence of operations, with each operation bound to a specific machine. This matches the characteristics of the Job Shop Scheduling Problem (JSSP), where each job has a predefined order of operations and each operation is assigned to a specific machine. The goal of minimizing makespan also aligns with typical objectives in JSSP.
--------------------------------------------------------------------------------
Label: OSSP, Predicted: FSSP, Index: 13
Description: A prefab housing factory assembles <num_jobs> modular units using <num_machines> workstations (e.g., framing, plumbing, electrical, finishing). The assembly sequence is adaptable to worker availability, with task times defined in <processing_times>. Each unit must pass through all stations, but no station can process multiple units simultaneously. The goal is to minimize the makespan—the total time to complete all units.
Reason: The problem description indicates that each modular unit must pass through all workstations in a specific sequence, which is adaptable based on worker availability. This implies a fixed sequence of operations for each job (unit), making it similar to a flow-shop problem. Since all jobs follow the same machine sequence and no station can process multiple units simultaneously, the most appropriate variant is the Flow-Shop Scheduling Problem (FSSP).
--------------------------------------------------------------------------------
Label: OSSP, Predicted: JSSP, Index: 61
Description: A conservation lab handles <num_jobs> artworks needing cleaning, structural repair, pigment analysis, and varnishing across <num_machines> specialized workstations. The sequence of treatments is adaptable to prioritize fragile items or resource availability. Each restoration step has fixed durations (see <processing_times>), and only one artwork can occupy a workstation at a time. The objective is to minimize the total project completion time while preserving artistic integrity.
Reason: The problem description indicates that each artwork (job) requires a sequence of treatments (operations) that can be adapted based on priorities, implying a predefined order of operations with potential flexibility in sequencing. Additionally, each operation has a fixed duration, and only one job can occupy a workstation at a time, which aligns with the characteristics of a Job Shop Scheduling Problem (JSSP). There is no mention of multiple machines being available for the same operation, so it does not fit the FJSSP. The requirement to minimize total project completion time (makespan) while preserving artistic integrity further supports this classification.
--------------------------------------------------------------------------------
Label: OSSP, Predicted: ASP, Index: 11
Description: An automated warehouse processes <num_jobs> customer orders using <num_machines> robotic stations for picking, packing, labeling, and quality checks. The sequence of operations is adaptable to avoid congestion, with each task duration specified in <processing_times>. Only one order can occupy a station at a time. The scheduler aims to minimize the total fulfillment time (makespan) while balancing workload across robots.
Reason: The problem involves multiple robotic stations where each customer order (job) must pass through a sequence of operations such as picking, packing, labeling, and quality checks. The sequence of operations is adaptable, meaning there is no strict predefined order for all jobs, but there are likely precedence constraints among the tasks within each job. This matches the characteristics of the Assembly Scheduling Problem (ASP), which deals with operations having precedence constraints represented by a Directed Acyclic Graph (DAG). Additionally, the goal of minimizing makespan and balancing workload aligns with the objectives typically found in ASP.
--------------------------------------------------------------------------------
Label: FSSP, Predicted: JSSP, Index: 93
Description: A composites facility processes <num_jobs> carbon-fiber panels through <num_machines> stages: resin layup, vacuum sealing, autoclave curing, trimming, and quality inspection. Each panel must complete these steps in strict order, with the i-th operation on the i-th machine. Processing times are deterministic (see <processing_times>), and machines are non-shareable. The objective is to minimize the total curing and inspection time for all panels.
Reason: The problem description specifies that each panel must complete the steps in strict order, with a specific machine assigned to each operation. This matches the characteristics of the Job Shop Scheduling Problem (JSSP), where there is a fixed machine per operation and a predefined operation order for each job. The deterministic processing times and non-shareable machines further align with JSSP. Although all jobs follow the same sequence, which might suggest FSSP, the emphasis on specific machines for each operation makes JSSP the more precise match.
--------------------------------------------------------------------------------
Label: OSSP, Predicted: ASP, Index: 80
Description: An EV battery factory assembles <num_jobs> custom battery packs using <num_machines> workstations for cell sorting, welding, cooling system integration, and quality testing. The assembly sequence is flexible, allowing parallelization to reduce bottlenecks. Each operation’s duration is specified in <processing_times>, and no workstation can handle multiple packs simultaneously. The goal is to minimize the makespan—the total time to deliver all orders.
Reason: The problem description indicates that the assembly sequence is flexible, allowing parallelization to reduce bottlenecks. This suggests there are no fixed operation orders for the battery packs, which rules out JSSP, FJSSP, and FSSP. Additionally, while HFSSP involves parallel machines in stages, it still implies a more rigid structure than what is described. The OSSP fits better because it allows operations to be performed in any order, aligning with the flexibility mentioned in the problem. However, since the problem specifically mentions 'assembly' and likely involves some precedence constraints (e.g., quality testing cannot occur before welding), the most appropriate variant is ASP, which explicitly models operations with precedence constraints in a directed acyclic graph (DAG).
--------------------------------------------------------------------------------
Label: OSSP, Predicted: JSSP, Index: 77
Description: A traveling film festival must prepare <num_jobs> screening venues by configuring <num_machines> equipment sets (projectors, sound systems, seating). Each venue requires all setups, but the sequence depends on crew availability and venue access. Setup times per task (e.g., calibrating audio) are in <processing_times>. The objective is to minimize the total setup time before the festival opens.
Reason: The problem involves setting up multiple venues with a fixed sequence of tasks (e.g., configuring projectors, sound systems, seating) that must be performed in a specific order due to dependencies such as crew availability and venue access. This matches the characteristics of the Job Shop Scheduling Problem (JSSP), where each job (venue setup) has a predefined sequence of operations (tasks) that must be executed on specific machines (equipment sets). The focus on minimizing total setup time also aligns with the objective of JSSP.
--------------------------------------------------------------------------------
Label: OSSP, Predicted: ASP, Index: 33
Description: A tech factory assembles <num_jobs> custom smartphones using <num_machines> modular stations (camera calibration, battery install, software flash). While all stations must process each phone, the sequence is adaptable to bottlenecks. Assembly times per station are in <processing_times>, and stations can’t multitask. The goal is to minimize the production makespan to meet shipping deadlines.
Reason: The problem description indicates that all stations must process each phone, but the sequence is adaptable to bottlenecks. This suggests that there are precedence constraints among operations for assembling each smartphone, which aligns with the characteristics of an Assembly Scheduling Problem (ASP). Unlike JSSP or FJSSP, ASP specifically deals with assembly processes where components are put together in a specific order defined by a Directed Acyclic Graph (DAG), which matches the need to follow certain sequences while allowing flexibility to optimize makespan.
--------------------------------------------------------------------------------
Label: OSSP, Predicted: FSSP, Index: 91
Description: A pharmaceutical plant produces <num_jobs> vaccine batches using <num_machines> stations for mixing, filtration, vial filling, and quality control. The production sequence can be dynamically adjusted to avoid bottlenecks. Each batch must pass through all stations (duration in <processing_times>), with no parallel processing per station. The scheduler aims to minimize the total production time to meet urgent demand.
Reason: The problem description indicates that each batch must pass through all stations in a specific sequence (mixing, filtration, vial filling, and quality control), with no parallel processing per station. This implies a fixed order of operations for all jobs (vaccine batches) across the same set of machines (stations). Since all jobs follow the same machine sequence and the goal is to minimize the total production time, this matches the definition of the Flow-Shop Scheduling Problem (FSSP).
--------------------------------------------------------------------------------

=== Statistics ===
Overall Accuracy: 578/600 = 0.9633

Problem Type: JSSP
Accuracy: 97/100 = 0.9700
Top 3 Misclassifications:
  Predicted: FSSP, Count: 2
  Predicted: ASP, Count: 1

Problem Type: ASP
Accuracy: 99/100 = 0.9900
Top 3 Misclassifications:
  Predicted: JSSP, Count: 1

Problem Type: HFSSP
Accuracy: 98/100 = 0.9800
Top 3 Misclassifications:
  Predicted: FJSSP, Count: 2

Problem Type: OSSP
Accuracy: 90/100 = 0.9000
Top 3 Misclassifications:
  Predicted: ASP, Count: 4
  Predicted: JSSP, Count: 3
  Predicted: FSSP, Count: 2

Problem Type: FSSP
Accuracy: 97/100 = 0.9700
Top 3 Misclassifications:
  Predicted: JSSP, Count: 3

Problem Type: FJSSP
Accuracy: 97/100 = 0.9700
Top 3 Misclassifications:
  Predicted: HFSSP, Count: 2
  Predicted: ASP, Count: 1
================================================================================
