[
    {
        "title": "Textile Industry Fabric Cutting",
        "desc_split": "Large rolls of fabric (<bin_size>) must be cut into smaller rectangular pieces (<items_size>) for clothing production, where each piece is requested in real-time and requires immediate placement without knowledge of future piece dimensions, aiming to maximize fabric utilization by optimizing the arrangement based solely on the length and width constraints.",
        "desc_merge": "Large rolls of fabric ([10, 10]) must be cut into smaller rectangular pieces ([[5, 5], [3, 7], [1, 5], [9, 2], [10, 8], [8, 6], [2, 7], [4, 1], [6, 8], [5, 2], [2, 7], [7, 2], [1, 9], [3, 10], [7, 8], [1, 2], [7, 7], [8, 8], [6, 1], [5, 2], [7, 5]]) for clothing production, where each piece is requested in real-time and requires immediate placement without knowledge of future piece dimensions, aiming to maximize fabric utilization by optimizing the arrangement based solely on the length and width constraints.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    5,
                    5
                ],
                [
                    3,
                    7
                ],
                [
                    1,
                    5
                ],
                [
                    9,
                    2
                ],
                [
                    10,
                    8
                ],
                [
                    8,
                    6
                ],
                [
                    2,
                    7
                ],
                [
                    4,
                    1
                ],
                [
                    6,
                    8
                ],
                [
                    5,
                    2
                ],
                [
                    2,
                    7
                ],
                [
                    7,
                    2
                ],
                [
                    1,
                    9
                ],
                [
                    3,
                    10
                ],
                [
                    7,
                    8
                ],
                [
                    1,
                    2
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    8
                ],
                [
                    6,
                    1
                ],
                [
                    5,
                    2
                ],
                [
                    7,
                    5
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 0
    },
    {
        "title": "Furniture Manufacturing Wood Panel Utilization",
        "desc_split": "Rectangular wooden panels (<bin_size>) are used to cut smaller components (<items_size>) for furniture assembly, with components arriving one by one and needing instant placement without foresight of upcoming part sizes, striving to reduce wood waste by considering only the length and width of panels and components.",
        "desc_merge": "Rectangular wooden panels ([10, 10]) are used to cut smaller components ([[7, 3], [1, 8], [6, 1], [9, 6], [3, 3], [6, 9], [9, 5], [9, 6], [8, 1], [8, 1], [2, 1], [8, 4], [8, 2], [4, 4], [9, 4], [6, 1], [10, 10], [8, 3], [4, 5], [7, 5], [6, 3], [1, 8], [3, 4]]) for furniture assembly, with components arriving one by one and needing instant placement without foresight of upcoming part sizes, striving to reduce wood waste by considering only the length and width of panels and components.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    7,
                    3
                ],
                [
                    1,
                    8
                ],
                [
                    6,
                    1
                ],
                [
                    9,
                    6
                ],
                [
                    3,
                    3
                ],
                [
                    6,
                    9
                ],
                [
                    9,
                    5
                ],
                [
                    9,
                    6
                ],
                [
                    8,
                    1
                ],
                [
                    8,
                    1
                ],
                [
                    2,
                    1
                ],
                [
                    8,
                    4
                ],
                [
                    8,
                    2
                ],
                [
                    4,
                    4
                ],
                [
                    9,
                    4
                ],
                [
                    6,
                    1
                ],
                [
                    10,
                    10
                ],
                [
                    8,
                    3
                ],
                [
                    4,
                    5
                ],
                [
                    7,
                    5
                ],
                [
                    6,
                    3
                ],
                [
                    1,
                    8
                ],
                [
                    3,
                    4
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 1
    },
    {
        "title": "Shipping Industry Container Loading",
        "desc_split": "Shipping containers (<bin_size>) are loaded with rectangular parcels (<items_size>) that arrive sequentially, each requiring immediate placement without prior knowledge of incoming parcel dimensions, where the goal is to fit all parcels into the containers while minimizing unused space, accounting for only the length and width of parcels and containers.",
        "desc_merge": "Shipping containers ([10, 10]) are loaded with rectangular parcels ([[7, 8], [9, 1], [1, 6], [3, 10], [1, 7], [4, 9], [5, 6], [4, 8], [1, 3], [9, 4], [9, 3], [4, 10], [3, 10], [3, 1], [3, 7], [9, 7], [1, 2], [1, 6], [8, 4], [1, 3], [7, 3]]) that arrive sequentially, each requiring immediate placement without prior knowledge of incoming parcel dimensions, where the goal is to fit all parcels into the containers while minimizing unused space, accounting for only the length and width of parcels and containers.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    7,
                    8
                ],
                [
                    9,
                    1
                ],
                [
                    1,
                    6
                ],
                [
                    3,
                    10
                ],
                [
                    1,
                    7
                ],
                [
                    4,
                    9
                ],
                [
                    5,
                    6
                ],
                [
                    4,
                    8
                ],
                [
                    1,
                    3
                ],
                [
                    9,
                    4
                ],
                [
                    9,
                    3
                ],
                [
                    4,
                    10
                ],
                [
                    3,
                    10
                ],
                [
                    3,
                    1
                ],
                [
                    3,
                    7
                ],
                [
                    9,
                    7
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    6
                ],
                [
                    8,
                    4
                ],
                [
                    1,
                    3
                ],
                [
                    7,
                    3
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 2
    },
    {
        "title": "PCB Manufacturing Component Placement",
        "desc_split": "Circuit boards (<bin_size>) must accommodate rectangular electronic components (<items_size>) placed one at a time without knowledge of subsequent component sizes, ensuring optimal board space usage by arranging components based solely on their length and width.",
        "desc_merge": "Circuit boards ([10, 10]) must accommodate rectangular electronic components ([[4, 4], [5, 6], [5, 8], [3, 5], [8, 8], [9, 3], [9, 6], [3, 6], [1, 5], [10, 7], [2, 9], [2, 9], [8, 6], [9, 9], [9, 6], [9, 9], [1, 10], [3, 4], [6, 1], [10, 7], [4, 10], [5, 2], [5, 3], [4, 3], [10, 4]]) placed one at a time without knowledge of subsequent component sizes, ensuring optimal board space usage by arranging components based solely on their length and width.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    4,
                    4
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    8
                ],
                [
                    3,
                    5
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    3
                ],
                [
                    9,
                    6
                ],
                [
                    3,
                    6
                ],
                [
                    1,
                    5
                ],
                [
                    10,
                    7
                ],
                [
                    2,
                    9
                ],
                [
                    2,
                    9
                ],
                [
                    8,
                    6
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    6
                ],
                [
                    9,
                    9
                ],
                [
                    1,
                    10
                ],
                [
                    3,
                    4
                ],
                [
                    6,
                    1
                ],
                [
                    10,
                    7
                ],
                [
                    4,
                    10
                ],
                [
                    5,
                    2
                ],
                [
                    5,
                    3
                ],
                [
                    4,
                    3
                ],
                [
                    10,
                    4
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 3
    },
    {
        "title": "Print Industry Magazine Page Layout",
        "desc_split": "Magazine pages (<bin_size>) are filled with rectangular images and articles (<items_size>) that arrive in real-time, needing immediate placement without future content dimensions, aiming to maximize page usage by arranging elements considering just their length and width.",
        "desc_merge": "Magazine pages ([10, 10]) are filled with rectangular images and articles ([[3, 7], [10, 4], [8, 5], [2, 3], [10, 5], [2, 1], [2, 6], [4, 4], [7, 9], [2, 9], [8, 7], [5, 9], [4, 6], [7, 4], [6, 3], [4, 2], [3, 8], [8, 3], [3, 9], [2, 3], [8, 1]]) that arrive in real-time, needing immediate placement without future content dimensions, aiming to maximize page usage by arranging elements considering just their length and width.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    3,
                    7
                ],
                [
                    10,
                    4
                ],
                [
                    8,
                    5
                ],
                [
                    2,
                    3
                ],
                [
                    10,
                    5
                ],
                [
                    2,
                    1
                ],
                [
                    2,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    7,
                    9
                ],
                [
                    2,
                    9
                ],
                [
                    8,
                    7
                ],
                [
                    5,
                    9
                ],
                [
                    4,
                    6
                ],
                [
                    7,
                    4
                ],
                [
                    6,
                    3
                ],
                [
                    4,
                    2
                ],
                [
                    3,
                    8
                ],
                [
                    8,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    2,
                    3
                ],
                [
                    8,
                    1
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 4
    },
    {
        "title": "#Aerospace Industry Composite Material Trimming",
        "desc_split": "Large composite sheets (<bin_size>) are trimmed into smaller rectangular aerospace parts (<items_size>) as each part is requested, with no foresight ahead, requiring careful placement to minimize material waste while working solely with the length and width constraints.",
        "desc_merge": "Large composite sheets ([10, 10]) are trimmed into smaller rectangular aerospace parts ([[2, 8], [5, 8], [10, 7], [3, 7], [6, 6], [1, 4], [9, 9], [6, 6], [6, 8], [8, 3], [10, 7], [1, 8], [9, 5], [10, 8], [4, 9], [7, 1], [4, 2], [7, 6], [9, 4], [5, 6], [9, 5], [1, 5], [7, 3], [4, 9]]) as each part is requested, with no foresight ahead, requiring careful placement to minimize material waste while working solely with the length and width constraints.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    2,
                    8
                ],
                [
                    5,
                    8
                ],
                [
                    10,
                    7
                ],
                [
                    3,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    1,
                    4
                ],
                [
                    9,
                    9
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    8
                ],
                [
                    8,
                    3
                ],
                [
                    10,
                    7
                ],
                [
                    1,
                    8
                ],
                [
                    9,
                    5
                ],
                [
                    10,
                    8
                ],
                [
                    4,
                    9
                ],
                [
                    7,
                    1
                ],
                [
                    4,
                    2
                ],
                [
                    7,
                    6
                ],
                [
                    9,
                    4
                ],
                [
                    5,
                    6
                ],
                [
                    9,
                    5
                ],
                [
                    1,
                    5
                ],
                [
                    7,
                    3
                ],
                [
                    4,
                    9
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 5
    },
    {
        "title": "Food Industry Boxed Chocolate Arrangement",
        "desc_split": "Gift boxes (<bin_size>) are packed with rectangular chocolates (<items_size>) that arrive in a continuous stream and must be placed instantly without knowing future chocolate sizes, focusing on efficient box filling by considering only the chocolates' length and width.",
        "desc_merge": "Gift boxes ([10, 10]) are packed with rectangular chocolates ([[10, 6], [6, 1], [1, 8], [6, 6], [8, 1], [8, 7], [3, 9], [9, 4], [6, 7], [7, 6], [7, 4], [1, 5], [8, 8], [8, 1], [7, 6], [6, 9], [3, 3], [2, 4], [5, 3], [10, 8], [10, 1], [1, 9], [10, 4], [8, 6]]) that arrive in a continuous stream and must be placed instantly without knowing future chocolate sizes, focusing on efficient box filling by considering only the chocolates' length and width.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    10,
                    6
                ],
                [
                    6,
                    1
                ],
                [
                    1,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    8,
                    1
                ],
                [
                    8,
                    7
                ],
                [
                    3,
                    9
                ],
                [
                    9,
                    4
                ],
                [
                    6,
                    7
                ],
                [
                    7,
                    6
                ],
                [
                    7,
                    4
                ],
                [
                    1,
                    5
                ],
                [
                    8,
                    8
                ],
                [
                    8,
                    1
                ],
                [
                    7,
                    6
                ],
                [
                    6,
                    9
                ],
                [
                    3,
                    3
                ],
                [
                    2,
                    4
                ],
                [
                    5,
                    3
                ],
                [
                    10,
                    8
                ],
                [
                    10,
                    1
                ],
                [
                    1,
                    9
                ],
                [
                    10,
                    4
                ],
                [
                    8,
                    6
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 6
    },
    {
        "title": "#Construction Industry Tile Flooring",
        "desc_split": "Tiles (<bin_size>) are fitted onto rectangular floor segments (<items_size>) that arrive sequentially and require immediate placement with no knowledge of subsequent segments, ensuring maximum tile usage by arranging them based purely on their length and width.",
        "desc_merge": "Tiles ([10, 10]) are fitted onto rectangular floor segments ([[1, 10], [1, 9], [10, 2], [6, 5], [3, 1], [5, 3], [5, 7], [7, 1], [1, 9], [7, 5], [6, 7], [9, 5], [1, 5], [5, 9], [5, 1], [1, 2], [1, 1], [6, 7], [5, 8], [4, 8], [4, 9]]) that arrive sequentially and require immediate placement with no knowledge of subsequent segments, ensuring maximum tile usage by arranging them based purely on their length and width.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    1,
                    10
                ],
                [
                    1,
                    9
                ],
                [
                    10,
                    2
                ],
                [
                    6,
                    5
                ],
                [
                    3,
                    1
                ],
                [
                    5,
                    3
                ],
                [
                    5,
                    7
                ],
                [
                    7,
                    1
                ],
                [
                    1,
                    9
                ],
                [
                    7,
                    5
                ],
                [
                    6,
                    7
                ],
                [
                    9,
                    5
                ],
                [
                    1,
                    5
                ],
                [
                    5,
                    9
                ],
                [
                    5,
                    1
                ],
                [
                    1,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    6,
                    7
                ],
                [
                    5,
                    8
                ],
                [
                    4,
                    8
                ],
                [
                    4,
                    9
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 7
    },
    {
        "title": "Fashion Industry Leather Hide Utilization",
        "desc_split": "Large animal hides (<bin_size>) are cut into rectangular fashion accessories (<items_size>) one by one with no future dimensions known, optimizing the layout to minimize wasted leather while considering exclusively their length and width.",
        "desc_merge": "Large animal hides ([10, 10]) are cut into rectangular fashion accessories ([[8, 6], [1, 6], [10, 3], [4, 4], [8, 4], [9, 8], [5, 4], [6, 6], [10, 9], [6, 7], [6, 8], [1, 6], [7, 9], [8, 4], [7, 1], [8, 1], [5, 7], [8, 10], [8, 2], [8, 8], [3, 6], [9, 3], [10, 3], [2, 7]]) one by one with no future dimensions known, optimizing the layout to minimize wasted leather while considering exclusively their length and width.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    8,
                    6
                ],
                [
                    1,
                    6
                ],
                [
                    10,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    8,
                    4
                ],
                [
                    9,
                    8
                ],
                [
                    5,
                    4
                ],
                [
                    6,
                    6
                ],
                [
                    10,
                    9
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    8
                ],
                [
                    1,
                    6
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    4
                ],
                [
                    7,
                    1
                ],
                [
                    8,
                    1
                ],
                [
                    5,
                    7
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    2
                ],
                [
                    8,
                    8
                ],
                [
                    3,
                    6
                ],
                [
                    9,
                    3
                ],
                [
                    10,
                    3
                ],
                [
                    2,
                    7
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 8
    },
    {
        "title": "Glass Manufacturing Window Pane Cutting",
        "desc_split": "Glass sheets (<bin_size>) are cut into smaller rectangular panes (<items_size>) for windows. The panes are ordered one at a time, and each must be cut from the sheet immediately without knowing future pane dimensions. The challenge is to maximize the utilization of each glass sheet, considering only the length and width of the panes and sheets.",
        "desc_merge": "Glass sheets ([10, 10]) are cut into smaller rectangular panes ([[1, 4], [6, 6], [7, 6], [1, 9], [3, 3], [7, 7], [1, 9], [3, 8], [7, 8], [2, 8], [1, 7], [2, 3], [2, 6], [8, 7], [2, 8], [3, 10], [10, 1], [7, 10], [2, 8], [8, 5], [10, 6], [2, 5], [1, 5], [5, 8]]) for windows. The panes are ordered one at a time, and each must be cut from the sheet immediately without knowing future pane dimensions. The challenge is to maximize the utilization of each glass sheet, considering only the length and width of the panes and sheets.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    1,
                    4
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    6
                ],
                [
                    1,
                    9
                ],
                [
                    3,
                    3
                ],
                [
                    7,
                    7
                ],
                [
                    1,
                    9
                ],
                [
                    3,
                    8
                ],
                [
                    7,
                    8
                ],
                [
                    2,
                    8
                ],
                [
                    1,
                    7
                ],
                [
                    2,
                    3
                ],
                [
                    2,
                    6
                ],
                [
                    8,
                    7
                ],
                [
                    2,
                    8
                ],
                [
                    3,
                    10
                ],
                [
                    10,
                    1
                ],
                [
                    7,
                    10
                ],
                [
                    2,
                    8
                ],
                [
                    8,
                    5
                ],
                [
                    10,
                    6
                ],
                [
                    2,
                    5
                ],
                [
                    1,
                    5
                ],
                [
                    5,
                    8
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 9
    },
    {
        "title": "Advertising Industry Billboard Ad Placement",
        "desc_split": "Billboards (<bin_size>) display multiple rectangular advertisements (<items_size>) that arrive sequentially. Each ad must be placed on the billboard without knowledge of future ads' dimensions, and the goal is to fit all ads onto the billboard while maximizing space usage, considering only the length and width of the ads and the billboard.",
        "desc_merge": "Billboards ([10, 10]) display multiple rectangular advertisements ([[7, 6], [7, 9], [1, 4], [6, 3], [2, 1], [7, 3], [1, 9], [7, 4], [8, 9], [3, 2], [6, 10], [4, 5], [7, 8], [9, 4], [5, 9], [8, 7], [2, 3], [2, 8], [3, 4], [3, 4]]) that arrive sequentially. Each ad must be placed on the billboard without knowledge of future ads' dimensions, and the goal is to fit all ads onto the billboard while maximizing space usage, considering only the length and width of the ads and the billboard.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    7,
                    6
                ],
                [
                    7,
                    9
                ],
                [
                    1,
                    4
                ],
                [
                    6,
                    3
                ],
                [
                    2,
                    1
                ],
                [
                    7,
                    3
                ],
                [
                    1,
                    9
                ],
                [
                    7,
                    4
                ],
                [
                    8,
                    9
                ],
                [
                    3,
                    2
                ],
                [
                    6,
                    10
                ],
                [
                    4,
                    5
                ],
                [
                    7,
                    8
                ],
                [
                    9,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    8,
                    7
                ],
                [
                    2,
                    3
                ],
                [
                    2,
                    8
                ],
                [
                    3,
                    4
                ],
                [
                    3,
                    4
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 10
    },
    {
        "title": "Automotive Industry Metal Sheet Cutting",
        "desc_split": "Car manufacturers cut rectangular metal parts (<items_size>) from large metal sheets (<bin_size>). The parts arrive in an online fashion, and each must be placed on the sheet immediately without knowing the sizes of subsequent parts. The objective is to minimize the number of metal sheets used by optimizing the layout based solely on the length and width of the parts and sheets.",
        "desc_merge": "Car manufacturers cut rectangular metal parts ([[5, 4], [7, 6], [3, 4], [10, 10], [7, 2], [7, 6], [4, 3], [10, 3], [1, 1], [3, 5], [3, 5], [1, 2], [4, 1], [2, 6], [9, 6], [9, 5], [6, 10], [4, 4], [7, 1], [10, 10], [1, 6], [8, 2], [10, 8], [1, 4], [3, 8]]) from large metal sheets ([10, 10]). The parts arrive in an online fashion, and each must be placed on the sheet immediately without knowing the sizes of subsequent parts. The objective is to minimize the number of metal sheets used by optimizing the layout based solely on the length and width of the parts and sheets.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    5,
                    4
                ],
                [
                    7,
                    6
                ],
                [
                    3,
                    4
                ],
                [
                    10,
                    10
                ],
                [
                    7,
                    2
                ],
                [
                    7,
                    6
                ],
                [
                    4,
                    3
                ],
                [
                    10,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    3,
                    5
                ],
                [
                    3,
                    5
                ],
                [
                    1,
                    2
                ],
                [
                    4,
                    1
                ],
                [
                    2,
                    6
                ],
                [
                    9,
                    6
                ],
                [
                    9,
                    5
                ],
                [
                    6,
                    10
                ],
                [
                    4,
                    4
                ],
                [
                    7,
                    1
                ],
                [
                    10,
                    10
                ],
                [
                    1,
                    6
                ],
                [
                    8,
                    2
                ],
                [
                    10,
                    8
                ],
                [
                    1,
                    4
                ],
                [
                    3,
                    8
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 11
    },
    {
        "title": "Furniture Manufacturing Wood Panel Optimization",
        "desc_split": "Rectangular wooden panels (<bin_size>) are used to cut smaller components (<items_size>) for furniture assembly. The components are requested one by one, and each must be cut from the panel without prior knowledge of future component sizes. The aim is to reduce wasted wood by maximizing panel utilization, considering only the length and width of the components and panels.",
        "desc_merge": "Rectangular wooden panels ([10, 10]) are used to cut smaller components ([[2, 6], [4, 5], [6, 5], [7, 2], [5, 1], [6, 2], [8, 3], [1, 6], [4, 10], [2, 2], [6, 7], [4, 10], [6, 8], [1, 9], [7, 5], [3, 6], [3, 4], [7, 7], [10, 7], [10, 9], [4, 6], [8, 10], [9, 3], [3, 3]]) for furniture assembly. The components are requested one by one, and each must be cut from the panel without prior knowledge of future component sizes. The aim is to reduce wasted wood by maximizing panel utilization, considering only the length and width of the components and panels.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    2,
                    6
                ],
                [
                    4,
                    5
                ],
                [
                    6,
                    5
                ],
                [
                    7,
                    2
                ],
                [
                    5,
                    1
                ],
                [
                    6,
                    2
                ],
                [
                    8,
                    3
                ],
                [
                    1,
                    6
                ],
                [
                    4,
                    10
                ],
                [
                    2,
                    2
                ],
                [
                    6,
                    7
                ],
                [
                    4,
                    10
                ],
                [
                    6,
                    8
                ],
                [
                    1,
                    9
                ],
                [
                    7,
                    5
                ],
                [
                    3,
                    6
                ],
                [
                    3,
                    4
                ],
                [
                    7,
                    7
                ],
                [
                    10,
                    7
                ],
                [
                    10,
                    9
                ],
                [
                    4,
                    6
                ],
                [
                    8,
                    10
                ],
                [
                    9,
                    3
                ],
                [
                    3,
                    3
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 12
    },
    {
        "title": "Textile Industry Fabric Roll Cutting",
        "desc_split": "Fabric rolls (<bin_size>) are sliced into rectangular pieces (<items_size>) for clothing production. Orders arrive dynamically, and each piece must be cut immediately without knowing the dimensions of upcoming orders. The task is to minimize fabric waste by efficiently arranging cuts based solely on the length and width of the pieces and rolls.",
        "desc_merge": "Fabric rolls ([10, 10]) are sliced into rectangular pieces ([[6, 10], [8, 4], [9, 10], [7, 5], [5, 6], [1, 9], [8, 5], [4, 3], [9, 10], [10, 3], [6, 1], [1, 3], [2, 9], [5, 10], [1, 6], [4, 2], [9, 7], [5, 9], [3, 6], [7, 2], [1, 4], [1, 7], [2, 10]]) for clothing production. Orders arrive dynamically, and each piece must be cut immediately without knowing the dimensions of upcoming orders. The task is to minimize fabric waste by efficiently arranging cuts based solely on the length and width of the pieces and rolls.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    6,
                    10
                ],
                [
                    8,
                    4
                ],
                [
                    9,
                    10
                ],
                [
                    7,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    1,
                    9
                ],
                [
                    8,
                    5
                ],
                [
                    4,
                    3
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    3
                ],
                [
                    6,
                    1
                ],
                [
                    1,
                    3
                ],
                [
                    2,
                    9
                ],
                [
                    5,
                    10
                ],
                [
                    1,
                    6
                ],
                [
                    4,
                    2
                ],
                [
                    9,
                    7
                ],
                [
                    5,
                    9
                ],
                [
                    3,
                    6
                ],
                [
                    7,
                    2
                ],
                [
                    1,
                    4
                ],
                [
                    1,
                    7
                ],
                [
                    2,
                    10
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 13
    },
    {
        "title": "Electronics Industry PCB Component Placement",
        "desc_split": "Printed circuit boards (<bin_size>) accommodate rectangular electronic components (<items_size>) that are placed sequentially. Each component must be positioned without knowledge of future components' sizes, and the goal is to fit all components on the board while optimizing space usage, considering only the length and width of the components and the board.",
        "desc_merge": "Printed circuit boards ([10, 10]) accommodate rectangular electronic components ([[5, 6], [8, 10], [3, 7], [8, 3], [10, 5], [1, 3], [7, 10], [8, 3], [7, 9], [4, 6], [1, 1], [8, 6], [2, 4], [4, 3], [9, 8], [9, 5], [1, 3], [4, 7], [3, 2], [5, 2], [10, 8], [10, 7], [6, 8], [9, 3]]) that are placed sequentially. Each component must be positioned without knowledge of future components' sizes, and the goal is to fit all components on the board while optimizing space usage, considering only the length and width of the components and the board.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    5,
                    6
                ],
                [
                    8,
                    10
                ],
                [
                    3,
                    7
                ],
                [
                    8,
                    3
                ],
                [
                    10,
                    5
                ],
                [
                    1,
                    3
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    3
                ],
                [
                    7,
                    9
                ],
                [
                    4,
                    6
                ],
                [
                    1,
                    1
                ],
                [
                    8,
                    6
                ],
                [
                    2,
                    4
                ],
                [
                    4,
                    3
                ],
                [
                    9,
                    8
                ],
                [
                    9,
                    5
                ],
                [
                    1,
                    3
                ],
                [
                    4,
                    7
                ],
                [
                    3,
                    2
                ],
                [
                    5,
                    2
                ],
                [
                    10,
                    8
                ],
                [
                    10,
                    7
                ],
                [
                    6,
                    8
                ],
                [
                    9,
                    3
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 14
    },
    {
        "title": "Packaging Industry Cardboard Box Design",
        "desc_split": "Large cardboard sheets (<bin_size>) are cut into smaller rectangular boxes (<items_size>) for packaging. The box orders arrive one at a time, and each must be cut from the sheet immediately without foresight into future box sizes. The challenge is to maximize sheet utilization by arranging cuts efficiently, focusing solely on the length and width of the boxes and sheets.",
        "desc_merge": "Large cardboard sheets ([10, 10]) are cut into smaller rectangular boxes ([[5, 6], [7, 1], [2, 3], [4, 5], [3, 8], [2, 3], [9, 7], [10, 4], [2, 9], [8, 6], [3, 8], [3, 3], [8, 8], [3, 5], [7, 2], [9, 5], [6, 2], [6, 2], [7, 3], [4, 9], [1, 1]]) for packaging. The box orders arrive one at a time, and each must be cut from the sheet immediately without foresight into future box sizes. The challenge is to maximize sheet utilization by arranging cuts efficiently, focusing solely on the length and width of the boxes and sheets.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    5,
                    6
                ],
                [
                    7,
                    1
                ],
                [
                    2,
                    3
                ],
                [
                    4,
                    5
                ],
                [
                    3,
                    8
                ],
                [
                    2,
                    3
                ],
                [
                    9,
                    7
                ],
                [
                    10,
                    4
                ],
                [
                    2,
                    9
                ],
                [
                    8,
                    6
                ],
                [
                    3,
                    8
                ],
                [
                    3,
                    3
                ],
                [
                    8,
                    8
                ],
                [
                    3,
                    5
                ],
                [
                    7,
                    2
                ],
                [
                    9,
                    5
                ],
                [
                    6,
                    2
                ],
                [
                    6,
                    2
                ],
                [
                    7,
                    3
                ],
                [
                    4,
                    9
                ],
                [
                    1,
                    1
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 15
    },
    {
        "title": "Construction Industry Tile Layout",
        "desc_split": "Floor tiles (<bin_size>) are arranged to cover a surface with rectangular decorative pieces (<items_size>) that arrive in sequence. Each piece must be placed without knowing the dimensions of subsequent pieces, and the objective is to minimize tile usage by optimizing the layout based only on the length and width of the pieces and tiles.",
        "desc_merge": "Floor tiles ([10, 10]) are arranged to cover a surface with rectangular decorative pieces ([[8, 7], [5, 6], [8, 7], [10, 3], [10, 7], [9, 4], [9, 2], [5, 5], [6, 5], [10, 4], [1, 6], [6, 8], [6, 8], [8, 3], [8, 2], [9, 2], [3, 7], [5, 5], [1, 1], [2, 3], [10, 8], [4, 7], [1, 3], [8, 1]]) that arrive in sequence. Each piece must be placed without knowing the dimensions of subsequent pieces, and the objective is to minimize tile usage by optimizing the layout based only on the length and width of the pieces and tiles.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    8,
                    7
                ],
                [
                    5,
                    6
                ],
                [
                    8,
                    7
                ],
                [
                    10,
                    3
                ],
                [
                    10,
                    7
                ],
                [
                    9,
                    4
                ],
                [
                    9,
                    2
                ],
                [
                    5,
                    5
                ],
                [
                    6,
                    5
                ],
                [
                    10,
                    4
                ],
                [
                    1,
                    6
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    8
                ],
                [
                    8,
                    3
                ],
                [
                    8,
                    2
                ],
                [
                    9,
                    2
                ],
                [
                    3,
                    7
                ],
                [
                    5,
                    5
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    3
                ],
                [
                    10,
                    8
                ],
                [
                    4,
                    7
                ],
                [
                    1,
                    3
                ],
                [
                    8,
                    1
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 16
    },
    {
        "title": "Aerospace Industry Composite Material Cutting",
        "desc_split": "Composite material sheets (<bin_size>) are cut into rectangular parts (<items_size>) for aircraft assembly. The parts arrive online, and each must be cut immediately without knowledge of future part sizes. The aim is to reduce material waste by maximizing sheet utilization, considering only the length and width of the parts and sheets.",
        "desc_merge": "Composite material sheets ([10, 10]) are cut into rectangular parts ([[3, 1], [1, 5], [3, 7], [4, 6], [8, 10], [8, 3], [6, 9], [1, 5], [2, 6], [9, 6], [10, 7], [7, 7], [7, 7], [1, 5], [5, 4], [4, 1], [8, 6], [2, 10], [6, 7], [3, 1], [5, 9]]) for aircraft assembly. The parts arrive online, and each must be cut immediately without knowledge of future part sizes. The aim is to reduce material waste by maximizing sheet utilization, considering only the length and width of the parts and sheets.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    3,
                    1
                ],
                [
                    1,
                    5
                ],
                [
                    3,
                    7
                ],
                [
                    4,
                    6
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    3
                ],
                [
                    6,
                    9
                ],
                [
                    1,
                    5
                ],
                [
                    2,
                    6
                ],
                [
                    9,
                    6
                ],
                [
                    10,
                    7
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    7
                ],
                [
                    1,
                    5
                ],
                [
                    5,
                    4
                ],
                [
                    4,
                    1
                ],
                [
                    8,
                    6
                ],
                [
                    2,
                    10
                ],
                [
                    6,
                    7
                ],
                [
                    3,
                    1
                ],
                [
                    5,
                    9
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 17
    },
    {
        "title": "Printing Industry Paper Sheet Layout",
        "desc_split": "Print jobs require rectangular designs (<items_size>) to be arranged on large paper sheets (<bin_size>). Designs arrive one by one, and each must be placed on the sheet without knowing future design dimensions. The goal is to minimize the number of sheets used by optimizing the layout, focusing solely on the length and width of the designs and sheets.",
        "desc_merge": "Print jobs require rectangular designs ([[1, 3], [7, 8], [3, 3], [8, 3], [7, 10], [5, 2], [6, 5], [9, 3], [9, 8], [7, 5], [5, 2], [5, 5], [2, 10], [7, 6], [6, 4], [7, 10], [7, 2], [3, 2], [4, 10], [2, 4], [5, 7], [1, 7]]) to be arranged on large paper sheets ([10, 10]). Designs arrive one by one, and each must be placed on the sheet without knowing future design dimensions. The goal is to minimize the number of sheets used by optimizing the layout, focusing solely on the length and width of the designs and sheets.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    1,
                    3
                ],
                [
                    7,
                    8
                ],
                [
                    3,
                    3
                ],
                [
                    8,
                    3
                ],
                [
                    7,
                    10
                ],
                [
                    5,
                    2
                ],
                [
                    6,
                    5
                ],
                [
                    9,
                    3
                ],
                [
                    9,
                    8
                ],
                [
                    7,
                    5
                ],
                [
                    5,
                    2
                ],
                [
                    5,
                    5
                ],
                [
                    2,
                    10
                ],
                [
                    7,
                    6
                ],
                [
                    6,
                    4
                ],
                [
                    7,
                    10
                ],
                [
                    7,
                    2
                ],
                [
                    3,
                    2
                ],
                [
                    4,
                    10
                ],
                [
                    2,
                    4
                ],
                [
                    5,
                    7
                ],
                [
                    1,
                    7
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 18
    },
    {
        "title": "Textile Industry Fabric Cutting",
        "desc_split": "Large rolls of fabric (<bin_size>) are cut into smaller rectangular pieces (<items_size>) for clothing production. Each piece must be cut as soon as it is ordered, without knowledge of future piece dimensions, aiming to maximize fabric utilization by optimizing the arrangement based solely on length and width.",
        "desc_merge": "Large rolls of fabric ([10, 10]) are cut into smaller rectangular pieces ([[8, 2], [1, 4], [9, 10], [4, 7], [8, 4], [1, 10], [2, 6], [4, 4], [9, 1], [5, 5], [4, 1], [2, 5], [3, 8], [9, 7], [1, 6], [1, 10], [3, 6], [1, 4], [5, 4], [3, 2], [6, 3], [6, 5], [8, 4]]) for clothing production. Each piece must be cut as soon as it is ordered, without knowledge of future piece dimensions, aiming to maximize fabric utilization by optimizing the arrangement based solely on length and width.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    8,
                    2
                ],
                [
                    1,
                    4
                ],
                [
                    9,
                    10
                ],
                [
                    4,
                    7
                ],
                [
                    8,
                    4
                ],
                [
                    1,
                    10
                ],
                [
                    2,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    9,
                    1
                ],
                [
                    5,
                    5
                ],
                [
                    4,
                    1
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    8
                ],
                [
                    9,
                    7
                ],
                [
                    1,
                    6
                ],
                [
                    1,
                    10
                ],
                [
                    3,
                    6
                ],
                [
                    1,
                    4
                ],
                [
                    5,
                    4
                ],
                [
                    3,
                    2
                ],
                [
                    6,
                    3
                ],
                [
                    6,
                    5
                ],
                [
                    8,
                    4
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 19
    },
    {
        "title": "Furniture Manufacturing Wood Panel Cutting",
        "desc_split": "Raw wooden panels (<bin_size>) are cut into smaller rectangular components (<items_size>) for furniture assembly. Components are ordered one at a time and must be cut immediately, with no foresight into upcoming orders, while striving to minimize wasted wood by considering only the length and width of panels and components.",
        "desc_merge": "Raw wooden panels ([10, 10]) are cut into smaller rectangular components ([[8, 4], [8, 10], [5, 9], [4, 3], [7, 4], [2, 10], [7, 8], [3, 1], [7, 10], [9, 3], [4, 3], [1, 8], [2, 4], [5, 1], [2, 9], [10, 2], [4, 2], [5, 3], [6, 6], [1, 1], [1, 7]]) for furniture assembly. Components are ordered one at a time and must be cut immediately, with no foresight into upcoming orders, while striving to minimize wasted wood by considering only the length and width of panels and components.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    8,
                    4
                ],
                [
                    8,
                    10
                ],
                [
                    5,
                    9
                ],
                [
                    4,
                    3
                ],
                [
                    7,
                    4
                ],
                [
                    2,
                    10
                ],
                [
                    7,
                    8
                ],
                [
                    3,
                    1
                ],
                [
                    7,
                    10
                ],
                [
                    9,
                    3
                ],
                [
                    4,
                    3
                ],
                [
                    1,
                    8
                ],
                [
                    2,
                    4
                ],
                [
                    5,
                    1
                ],
                [
                    2,
                    9
                ],
                [
                    10,
                    2
                ],
                [
                    4,
                    2
                ],
                [
                    5,
                    3
                ],
                [
                    6,
                    6
                ],
                [
                    1,
                    1
                ],
                [
                    1,
                    7
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 20
    },
    {
        "title": "Shipbuilding Industry Steel Plate Allocation",
        "desc_split": "Rectangular steel plates (<bin_size>) are allocated for cutting into ship hull segments (<items_size>). Each segment must be placed on a plate as soon as it is designed, with no knowledge of future segment sizes, and the goal is to reduce the number of plates used by optimizing their layout using only length and width.",
        "desc_merge": "Rectangular steel plates ([10, 10]) are allocated for cutting into ship hull segments ([[7, 1], [4, 9], [1, 6], [5, 3], [1, 10], [3, 4], [10, 8], [2, 10], [7, 2], [2, 8], [3, 7], [9, 9], [2, 6], [10, 4], [8, 8], [5, 2], [9, 6], [9, 4], [1, 3], [5, 3], [9, 7], [7, 8], [7, 10], [4, 3], [1, 5]]). Each segment must be placed on a plate as soon as it is designed, with no knowledge of future segment sizes, and the goal is to reduce the number of plates used by optimizing their layout using only length and width.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    7,
                    1
                ],
                [
                    4,
                    9
                ],
                [
                    1,
                    6
                ],
                [
                    5,
                    3
                ],
                [
                    1,
                    10
                ],
                [
                    3,
                    4
                ],
                [
                    10,
                    8
                ],
                [
                    2,
                    10
                ],
                [
                    7,
                    2
                ],
                [
                    2,
                    8
                ],
                [
                    3,
                    7
                ],
                [
                    9,
                    9
                ],
                [
                    2,
                    6
                ],
                [
                    10,
                    4
                ],
                [
                    8,
                    8
                ],
                [
                    5,
                    2
                ],
                [
                    9,
                    6
                ],
                [
                    9,
                    4
                ],
                [
                    1,
                    3
                ],
                [
                    5,
                    3
                ],
                [
                    9,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    7,
                    10
                ],
                [
                    4,
                    3
                ],
                [
                    1,
                    5
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 21
    },
    {
        "title": "Packaging Industry Cardboard Box Design",
        "desc_split": "Cardboard sheets (<bin_size>) are die-cut into smaller rectangular boxes (<items_size>) for product packaging. Box designs come in sequentially and must be arranged immediately on the sheet, without knowing subsequent designs, while maximizing sheet usage by working solely with their length and width.",
        "desc_merge": "Cardboard sheets ([10, 10]) are die-cut into smaller rectangular boxes ([[1, 7], [8, 2], [7, 8], [9, 2], [6, 2], [1, 9], [3, 2], [1, 1], [5, 4], [1, 8], [7, 5], [5, 7], [10, 8], [5, 2], [6, 10], [2, 9], [10, 1], [8, 7], [8, 7], [3, 5], [5, 8]]) for product packaging. Box designs come in sequentially and must be arranged immediately on the sheet, without knowing subsequent designs, while maximizing sheet usage by working solely with their length and width.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    1,
                    7
                ],
                [
                    8,
                    2
                ],
                [
                    7,
                    8
                ],
                [
                    9,
                    2
                ],
                [
                    6,
                    2
                ],
                [
                    1,
                    9
                ],
                [
                    3,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    5,
                    4
                ],
                [
                    1,
                    8
                ],
                [
                    7,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    10,
                    8
                ],
                [
                    5,
                    2
                ],
                [
                    6,
                    10
                ],
                [
                    2,
                    9
                ],
                [
                    10,
                    1
                ],
                [
                    8,
                    7
                ],
                [
                    8,
                    7
                ],
                [
                    3,
                    5
                ],
                [
                    5,
                    8
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 22
    },
    {
        "title": "Construction Industry Tile Flooring Layout",
        "desc_split": "Large rectangular flooring tiles (<bin_size>) are cut into smaller tiles (<items_size>) to fit specific room dimensions. Each small tile must be cut on demand, with no advance information about later cuts, and the objective is to minimize material waste by optimizing placement based only on length and width.",
        "desc_merge": "Large rectangular flooring tiles ([10, 10]) are cut into smaller tiles ([[8, 10], [6, 4], [4, 10], [9, 1], [4, 9], [2, 1], [2, 5], [6, 5], [10, 5], [7, 10], [6, 10], [4, 6], [10, 8], [4, 10], [10, 9], [2, 1], [5, 4], [6, 4], [5, 6], [1, 9], [1, 4], [8, 10], [10, 3], [5, 4], [1, 6]]) to fit specific room dimensions. Each small tile must be cut on demand, with no advance information about later cuts, and the objective is to minimize material waste by optimizing placement based only on length and width.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    8,
                    10
                ],
                [
                    6,
                    4
                ],
                [
                    4,
                    10
                ],
                [
                    9,
                    1
                ],
                [
                    4,
                    9
                ],
                [
                    2,
                    1
                ],
                [
                    2,
                    5
                ],
                [
                    6,
                    5
                ],
                [
                    10,
                    5
                ],
                [
                    7,
                    10
                ],
                [
                    6,
                    10
                ],
                [
                    4,
                    6
                ],
                [
                    10,
                    8
                ],
                [
                    4,
                    10
                ],
                [
                    10,
                    9
                ],
                [
                    2,
                    1
                ],
                [
                    5,
                    4
                ],
                [
                    6,
                    4
                ],
                [
                    5,
                    6
                ],
                [
                    1,
                    9
                ],
                [
                    1,
                    4
                ],
                [
                    8,
                    10
                ],
                [
                    10,
                    3
                ],
                [
                    5,
                    4
                ],
                [
                    1,
                    6
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 23
    },
    {
        "title": "Electronics Industry Circuit Board Component Placement",
        "desc_split": "Circuit boards (<bin_size>) must accommodate various rectangular electronic components (<items_size>) that arrive one at a time during assembly. Components must be placed immediately without knowing future arrivals, aiming to fit all parts onto the board by considering only their length and width.",
        "desc_merge": "Circuit boards ([10, 10]) must accommodate various rectangular electronic components ([[5, 1], [8, 1], [10, 6], [5, 6], [1, 8], [2, 6], [5, 3], [4, 9], [1, 1], [10, 1], [1, 10], [6, 5], [2, 2], [8, 8], [5, 1], [6, 2], [4, 10], [4, 1], [2, 8], [10, 8], [6, 5], [7, 9], [4, 4], [3, 10]]) that arrive one at a time during assembly. Components must be placed immediately without knowing future arrivals, aiming to fit all parts onto the board by considering only their length and width.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    5,
                    1
                ],
                [
                    8,
                    1
                ],
                [
                    10,
                    6
                ],
                [
                    5,
                    6
                ],
                [
                    1,
                    8
                ],
                [
                    2,
                    6
                ],
                [
                    5,
                    3
                ],
                [
                    4,
                    9
                ],
                [
                    1,
                    1
                ],
                [
                    10,
                    1
                ],
                [
                    1,
                    10
                ],
                [
                    6,
                    5
                ],
                [
                    2,
                    2
                ],
                [
                    8,
                    8
                ],
                [
                    5,
                    1
                ],
                [
                    6,
                    2
                ],
                [
                    4,
                    10
                ],
                [
                    4,
                    1
                ],
                [
                    2,
                    8
                ],
                [
                    10,
                    8
                ],
                [
                    6,
                    5
                ],
                [
                    7,
                    9
                ],
                [
                    4,
                    4
                ],
                [
                    3,
                    10
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 24
    },
    {
        "title": "Food Industry Chocolate Bar Packaging",
        "desc_split": "Large chocolate slabs (<bin_size>) are divided into smaller rectangular bars (<items_size>) for packaging. Each bar size is revealed only upon ordering and must be cut immediately, requiring optimal slab usage with no knowledge of future bars, using only length and width for placement.",
        "desc_merge": "Large chocolate slabs ([10, 10]) are divided into smaller rectangular bars ([[3, 10], [5, 9], [2, 4], [6, 9], [1, 2], [3, 2], [9, 10], [2, 7], [2, 9], [8, 9], [3, 4], [7, 8], [6, 2], [3, 3], [3, 10], [8, 7], [1, 10], [5, 3], [4, 3], [2, 5], [9, 7], [8, 7], [5, 8], [9, 6]]) for packaging. Each bar size is revealed only upon ordering and must be cut immediately, requiring optimal slab usage with no knowledge of future bars, using only length and width for placement.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    3,
                    10
                ],
                [
                    5,
                    9
                ],
                [
                    2,
                    4
                ],
                [
                    6,
                    9
                ],
                [
                    1,
                    2
                ],
                [
                    3,
                    2
                ],
                [
                    9,
                    10
                ],
                [
                    2,
                    7
                ],
                [
                    2,
                    9
                ],
                [
                    8,
                    9
                ],
                [
                    3,
                    4
                ],
                [
                    7,
                    8
                ],
                [
                    6,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    10
                ],
                [
                    8,
                    7
                ],
                [
                    1,
                    10
                ],
                [
                    5,
                    3
                ],
                [
                    4,
                    3
                ],
                [
                    2,
                    5
                ],
                [
                    9,
                    7
                ],
                [
                    8,
                    7
                ],
                [
                    5,
                    8
                ],
                [
                    9,
                    6
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 25
    },
    {
        "title": "Renewable Energy Solar Panel Array Design",
        "desc_split": "Solar panel arrays (<bin_size>) are assembled from rectangular photovoltaic modules (<items_size>) that arrive sequentially. Each module must be placed immediately upon arrival, without knowing subsequent module sizes, while maximizing roof space utilization by arranging them based solely on length and width.",
        "desc_merge": "Solar panel arrays ([10, 10]) are assembled from rectangular photovoltaic modules ([[2, 9], [9, 7], [2, 3], [8, 3], [6, 6], [2, 3], [8, 6], [1, 6], [6, 3], [5, 4], [10, 2], [7, 2], [5, 4], [10, 8], [10, 2], [2, 4], [1, 10], [3, 8], [8, 3], [5, 3], [10, 5], [5, 1]]) that arrive sequentially. Each module must be placed immediately upon arrival, without knowing subsequent module sizes, while maximizing roof space utilization by arranging them based solely on length and width.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    2,
                    9
                ],
                [
                    9,
                    7
                ],
                [
                    2,
                    3
                ],
                [
                    8,
                    3
                ],
                [
                    6,
                    6
                ],
                [
                    2,
                    3
                ],
                [
                    8,
                    6
                ],
                [
                    1,
                    6
                ],
                [
                    6,
                    3
                ],
                [
                    5,
                    4
                ],
                [
                    10,
                    2
                ],
                [
                    7,
                    2
                ],
                [
                    5,
                    4
                ],
                [
                    10,
                    8
                ],
                [
                    10,
                    2
                ],
                [
                    2,
                    4
                ],
                [
                    1,
                    10
                ],
                [
                    3,
                    8
                ],
                [
                    8,
                    3
                ],
                [
                    5,
                    3
                ],
                [
                    10,
                    5
                ],
                [
                    5,
                    1
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 26
    },
    {
        "title": "Furniture Industry Wood Panel Utilization",
        "desc_split": "Rectangular wood panels (<bin_size>) are used to cut smaller rectangular pieces (<items_size>) for furniture manufacturing. Orders arrive one by one, and each piece must be cut immediately without knowing future piece dimensions. The challenge is to maximize the utilization of each wood panel based solely on length and width, reducing waste.",
        "desc_merge": "Rectangular wood panels ([10, 10]) are used to cut smaller rectangular pieces ([[3, 3], [7, 9], [2, 7], [4, 2], [9, 8], [5, 2], [8, 7], [7, 1], [4, 9], [2, 1], [10, 10], [3, 8], [4, 2], [9, 6], [3, 10], [2, 8], [5, 8], [5, 4], [4, 3], [5, 1], [9, 3], [7, 6]]) for furniture manufacturing. Orders arrive one by one, and each piece must be cut immediately without knowing future piece dimensions. The challenge is to maximize the utilization of each wood panel based solely on length and width, reducing waste.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    3,
                    3
                ],
                [
                    7,
                    9
                ],
                [
                    2,
                    7
                ],
                [
                    4,
                    2
                ],
                [
                    9,
                    8
                ],
                [
                    5,
                    2
                ],
                [
                    8,
                    7
                ],
                [
                    7,
                    1
                ],
                [
                    4,
                    9
                ],
                [
                    2,
                    1
                ],
                [
                    10,
                    10
                ],
                [
                    3,
                    8
                ],
                [
                    4,
                    2
                ],
                [
                    9,
                    6
                ],
                [
                    3,
                    10
                ],
                [
                    2,
                    8
                ],
                [
                    5,
                    8
                ],
                [
                    5,
                    4
                ],
                [
                    4,
                    3
                ],
                [
                    5,
                    1
                ],
                [
                    9,
                    3
                ],
                [
                    7,
                    6
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 27
    },
    {
        "title": "Shipping Industry Pallet Loading",
        "desc_split": "Pallets (<bin_size>) must accommodate rectangular packages (<items_size>) that arrive sequentially. Each package must be loaded immediately without knowledge of incoming package sizes, aiming to fit all items on the pallet while optimizing space based on length and width only.",
        "desc_merge": "Pallets ([10, 10]) must accommodate rectangular packages ([[4, 1], [9, 10], [2, 8], [2, 6], [8, 1], [9, 4], [7, 7], [3, 4], [4, 7], [6, 9], [6, 2], [3, 2], [10, 3], [8, 4], [4, 9], [1, 3], [3, 4], [6, 1], [4, 1], [10, 8], [9, 4], [1, 1], [6, 2], [5, 1], [6, 7]]) that arrive sequentially. Each package must be loaded immediately without knowledge of incoming package sizes, aiming to fit all items on the pallet while optimizing space based on length and width only.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    4,
                    1
                ],
                [
                    9,
                    10
                ],
                [
                    2,
                    8
                ],
                [
                    2,
                    6
                ],
                [
                    8,
                    1
                ],
                [
                    9,
                    4
                ],
                [
                    7,
                    7
                ],
                [
                    3,
                    4
                ],
                [
                    4,
                    7
                ],
                [
                    6,
                    9
                ],
                [
                    6,
                    2
                ],
                [
                    3,
                    2
                ],
                [
                    10,
                    3
                ],
                [
                    8,
                    4
                ],
                [
                    4,
                    9
                ],
                [
                    1,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    6,
                    1
                ],
                [
                    4,
                    1
                ],
                [
                    10,
                    8
                ],
                [
                    9,
                    4
                ],
                [
                    1,
                    1
                ],
                [
                    6,
                    2
                ],
                [
                    5,
                    1
                ],
                [
                    6,
                    7
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 28
    },
    {
        "title": "Electronics Industry PCB Component Placement",
        "desc_split": "Printed circuit boards (<bin_size>) require placing rectangular electronic components (<items_size>) one after another. Components arrive unpredictably, and each must be positioned without knowing future component sizes. The goal is to minimize unused board space using only length and width constraints.",
        "desc_merge": "Printed circuit boards ([10, 10]) require placing rectangular electronic components ([[1, 1], [10, 10], [1, 8], [1, 5], [4, 5], [7, 1], [1, 4], [7, 3], [8, 6], [5, 6], [1, 6], [3, 6], [10, 1], [7, 10], [10, 6], [6, 1], [3, 4], [10, 6], [1, 8], [10, 3], [10, 2], [1, 2], [8, 8], [7, 4]]) one after another. Components arrive unpredictably, and each must be positioned without knowing future component sizes. The goal is to minimize unused board space using only length and width constraints.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    1,
                    1
                ],
                [
                    10,
                    10
                ],
                [
                    1,
                    8
                ],
                [
                    1,
                    5
                ],
                [
                    4,
                    5
                ],
                [
                    7,
                    1
                ],
                [
                    1,
                    4
                ],
                [
                    7,
                    3
                ],
                [
                    8,
                    6
                ],
                [
                    5,
                    6
                ],
                [
                    1,
                    6
                ],
                [
                    3,
                    6
                ],
                [
                    10,
                    1
                ],
                [
                    7,
                    10
                ],
                [
                    10,
                    6
                ],
                [
                    6,
                    1
                ],
                [
                    3,
                    4
                ],
                [
                    10,
                    6
                ],
                [
                    1,
                    8
                ],
                [
                    10,
                    3
                ],
                [
                    10,
                    2
                ],
                [
                    1,
                    2
                ],
                [
                    8,
                    8
                ],
                [
                    7,
                    4
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 29
    },
    {
        "title": "Fashion Industry Leather Hide Cutting",
        "desc_split": "Leather hides (<bin_size>) are cut into rectangular patterns (<items_size>) for shoes and bags. Patterns are ordered individually, and each must be cut immediately without knowing subsequent pattern dimensions. The objective is to optimize each hide's usage, considering only length and width.",
        "desc_merge": "Leather hides ([10, 10]) are cut into rectangular patterns ([[5, 5], [3, 5], [4, 4], [5, 1], [9, 7], [5, 8], [10, 5], [3, 5], [9, 10], [3, 10], [10, 1], [4, 6], [7, 4], [5, 2], [5, 7], [8, 5], [7, 5], [7, 7], [10, 1], [9, 3]]) for shoes and bags. Patterns are ordered individually, and each must be cut immediately without knowing subsequent pattern dimensions. The objective is to optimize each hide's usage, considering only length and width.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    5,
                    5
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    1
                ],
                [
                    9,
                    7
                ],
                [
                    5,
                    8
                ],
                [
                    10,
                    5
                ],
                [
                    3,
                    5
                ],
                [
                    9,
                    10
                ],
                [
                    3,
                    10
                ],
                [
                    10,
                    1
                ],
                [
                    4,
                    6
                ],
                [
                    7,
                    4
                ],
                [
                    5,
                    2
                ],
                [
                    5,
                    7
                ],
                [
                    8,
                    5
                ],
                [
                    7,
                    5
                ],
                [
                    7,
                    7
                ],
                [
                    10,
                    1
                ],
                [
                    9,
                    3
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 30
    },
    {
        "title": "Construction Industry Tile Layout",
        "desc_split": "Floor tiles (<bin_size>) must cover irregular spaces using rectangular pieces (<items_size>) delivered one at a time. Each piece placed does not allow for adjustments later, requiring real-time optimization based solely on length and width to minimize tile waste.",
        "desc_merge": "Floor tiles ([10, 10]) must cover irregular spaces using rectangular pieces ([[8, 4], [9, 7], [9, 4], [2, 10], [8, 10], [7, 3], [2, 5], [8, 3], [1, 5], [10, 9], [1, 3], [9, 4], [3, 9], [1, 8], [8, 3], [10, 1], [6, 6], [6, 1], [1, 5], [2, 5]]) delivered one at a time. Each piece placed does not allow for adjustments later, requiring real-time optimization based solely on length and width to minimize tile waste.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    8,
                    4
                ],
                [
                    9,
                    7
                ],
                [
                    9,
                    4
                ],
                [
                    2,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    7,
                    3
                ],
                [
                    2,
                    5
                ],
                [
                    8,
                    3
                ],
                [
                    1,
                    5
                ],
                [
                    10,
                    9
                ],
                [
                    1,
                    3
                ],
                [
                    9,
                    4
                ],
                [
                    3,
                    9
                ],
                [
                    1,
                    8
                ],
                [
                    8,
                    3
                ],
                [
                    10,
                    1
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    1
                ],
                [
                    1,
                    5
                ],
                [
                    2,
                    5
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 31
    },
    {
        "title": "Textile Industry Garment Panel Cutting",
        "desc_split": "Fabric rolls (<bin_size>) are sliced into rectangular garment panels (<items_size>) ordered sequentially. Each panel is cut immediately without knowledge of upcoming panel sizes. The challenge is to maximize fabric roll utilization using only length and width measurements.",
        "desc_merge": "Fabric rolls ([10, 10]) are sliced into rectangular garment panels ([[7, 10], [10, 5], [9, 3], [8, 6], [7, 9], [6, 2], [5, 8], [2, 8], [5, 1], [2, 6], [9, 6], [9, 7], [4, 9], [10, 4], [4, 4], [3, 7], [8, 10], [4, 6], [4, 6], [10, 6], [1, 7]]) ordered sequentially. Each panel is cut immediately without knowledge of upcoming panel sizes. The challenge is to maximize fabric roll utilization using only length and width measurements.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    7,
                    10
                ],
                [
                    10,
                    5
                ],
                [
                    9,
                    3
                ],
                [
                    8,
                    6
                ],
                [
                    7,
                    9
                ],
                [
                    6,
                    2
                ],
                [
                    5,
                    8
                ],
                [
                    2,
                    8
                ],
                [
                    5,
                    1
                ],
                [
                    2,
                    6
                ],
                [
                    9,
                    6
                ],
                [
                    9,
                    7
                ],
                [
                    4,
                    9
                ],
                [
                    10,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    3,
                    7
                ],
                [
                    8,
                    10
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    6
                ],
                [
                    10,
                    6
                ],
                [
                    1,
                    7
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 32
    },
    {
        "title": "Food Industry Baking Sheet Arrangement",
        "desc_split": "Baking sheets (<bin_size>) hold rectangular dough pieces (<items_size>) for mass production. Pieces arrive randomly and must be placed immediately without knowing future piece sizes. The aim is to maximize the number of pieces per sheet, considering only length and width.",
        "desc_merge": "Baking sheets ([10, 10]) hold rectangular dough pieces ([[5, 8], [6, 3], [3, 8], [8, 4], [3, 7], [9, 4], [5, 6], [1, 1], [3, 4], [2, 8], [2, 6], [7, 3], [9, 8], [7, 1], [8, 5], [9, 2], [2, 5], [1, 6], [6, 7], [4, 4], [4, 8], [8, 7], [5, 7], [2, 3]]) for mass production. Pieces arrive randomly and must be placed immediately without knowing future piece sizes. The aim is to maximize the number of pieces per sheet, considering only length and width.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    5,
                    8
                ],
                [
                    6,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    8,
                    4
                ],
                [
                    3,
                    7
                ],
                [
                    9,
                    4
                ],
                [
                    5,
                    6
                ],
                [
                    1,
                    1
                ],
                [
                    3,
                    4
                ],
                [
                    2,
                    8
                ],
                [
                    2,
                    6
                ],
                [
                    7,
                    3
                ],
                [
                    9,
                    8
                ],
                [
                    7,
                    1
                ],
                [
                    8,
                    5
                ],
                [
                    9,
                    2
                ],
                [
                    2,
                    5
                ],
                [
                    1,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    8
                ],
                [
                    8,
                    7
                ],
                [
                    5,
                    7
                ],
                [
                    2,
                    3
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 33
    },
    {
        "title": "Publishing Industry Magazine Page Layout",
        "desc_split": "Magazine pages (<bin_size>) feature variable-sized rectangular advertisements (<items_size>) submitted in real-time. Each ad must fit as submitted without rearranging later content. The challenge is to minimize blank space on each page, using only length and width for placement decisions.",
        "desc_merge": "Magazine pages ([10, 10]) feature variable-sized rectangular advertisements ([[4, 3], [2, 9], [8, 7], [3, 8], [5, 1], [3, 6], [10, 10], [2, 4], [7, 7], [2, 3], [5, 2], [2, 6], [4, 9], [5, 5], [10, 3], [7, 4], [10, 5], [10, 1], [9, 10], [9, 9], [7, 8], [5, 7]]) submitted in real-time. Each ad must fit as submitted without rearranging later content. The challenge is to minimize blank space on each page, using only length and width for placement decisions.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    4,
                    3
                ],
                [
                    2,
                    9
                ],
                [
                    8,
                    7
                ],
                [
                    3,
                    8
                ],
                [
                    5,
                    1
                ],
                [
                    3,
                    6
                ],
                [
                    10,
                    10
                ],
                [
                    2,
                    4
                ],
                [
                    7,
                    7
                ],
                [
                    2,
                    3
                ],
                [
                    5,
                    2
                ],
                [
                    2,
                    6
                ],
                [
                    4,
                    9
                ],
                [
                    5,
                    5
                ],
                [
                    10,
                    3
                ],
                [
                    7,
                    4
                ],
                [
                    10,
                    5
                ],
                [
                    10,
                    1
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    9
                ],
                [
                    7,
                    8
                ],
                [
                    5,
                    7
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 34
    },
    {
        "title": "Aerospace Industry Composite Material Cutting",
        "desc_split": "Large composite sheets (<bin_size>) are trimmed into rectangular aircraft parts (<items_size>) ordered individually. Parts must be cut immediately without foresight into future orders. The goal is to reduce material waste by optimizing sheet usage, focusing solely on length and width.",
        "desc_merge": "Large composite sheets ([10, 10]) are trimmed into rectangular aircraft parts ([[6, 7], [1, 10], [5, 5], [2, 2], [8, 6], [6, 1], [5, 9], [8, 3], [3, 6], [4, 7], [6, 6], [1, 2], [7, 10], [5, 1], [9, 8], [10, 5], [7, 3], [6, 10], [8, 3], [4, 1], [7, 1], [8, 2], [4, 5]]) ordered individually. Parts must be cut immediately without foresight into future orders. The goal is to reduce material waste by optimizing sheet usage, focusing solely on length and width.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    6,
                    7
                ],
                [
                    1,
                    10
                ],
                [
                    5,
                    5
                ],
                [
                    2,
                    2
                ],
                [
                    8,
                    6
                ],
                [
                    6,
                    1
                ],
                [
                    5,
                    9
                ],
                [
                    8,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    1,
                    2
                ],
                [
                    7,
                    10
                ],
                [
                    5,
                    1
                ],
                [
                    9,
                    8
                ],
                [
                    10,
                    5
                ],
                [
                    7,
                    3
                ],
                [
                    6,
                    10
                ],
                [
                    8,
                    3
                ],
                [
                    4,
                    1
                ],
                [
                    7,
                    1
                ],
                [
                    8,
                    2
                ],
                [
                    4,
                    5
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 35
    },
    {
        "title": "Pharmaceutical Industry Blister Pack Design",
        "desc_split": "Blister pack sheets (<bin_size>) must hold rectangular pill compartments (<items_size>) designed sequentially. Each compartment is added without knowing subsequent sizes, requiring efficient packing based only on length and width to maximize sheet capacity.",
        "desc_merge": "Blister pack sheets ([10, 10]) must hold rectangular pill compartments ([[8, 2], [3, 4], [3, 7], [9, 9], [7, 2], [1, 3], [4, 2], [5, 8], [2, 2], [7, 6], [8, 6], [1, 4], [5, 4], [8, 7], [4, 6], [8, 10], [7, 3], [9, 1], [2, 5], [7, 7], [8, 4], [7, 7], [5, 1]]) designed sequentially. Each compartment is added without knowing subsequent sizes, requiring efficient packing based only on length and width to maximize sheet capacity.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    8,
                    2
                ],
                [
                    3,
                    4
                ],
                [
                    3,
                    7
                ],
                [
                    9,
                    9
                ],
                [
                    7,
                    2
                ],
                [
                    1,
                    3
                ],
                [
                    4,
                    2
                ],
                [
                    5,
                    8
                ],
                [
                    2,
                    2
                ],
                [
                    7,
                    6
                ],
                [
                    8,
                    6
                ],
                [
                    1,
                    4
                ],
                [
                    5,
                    4
                ],
                [
                    8,
                    7
                ],
                [
                    4,
                    6
                ],
                [
                    8,
                    10
                ],
                [
                    7,
                    3
                ],
                [
                    9,
                    1
                ],
                [
                    2,
                    5
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    4
                ],
                [
                    7,
                    7
                ],
                [
                    5,
                    1
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 36
    },
    {
        "title": "Furniture Industry Plywood Cutting",
        "desc_split": "Plywood sheets (<bin_size>) are used to cut various rectangular furniture panels (<items_size>). Panels arrive one by one and must be cut immediately without knowing future panel sizes. The goal is to maximize utilization of each plywood sheet, considering only the length and width of panels and sheets.",
        "desc_merge": "Plywood sheets ([10, 10]) are used to cut various rectangular furniture panels ([[8, 3], [1, 6], [10, 4], [3, 4], [5, 10], [6, 9], [10, 7], [10, 1], [3, 10], [5, 1], [8, 4], [9, 2], [4, 3], [2, 7], [10, 7], [6, 4], [7, 7], [2, 10], [7, 4], [8, 9], [10, 3]]). Panels arrive one by one and must be cut immediately without knowing future panel sizes. The goal is to maximize utilization of each plywood sheet, considering only the length and width of panels and sheets.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    8,
                    3
                ],
                [
                    1,
                    6
                ],
                [
                    10,
                    4
                ],
                [
                    3,
                    4
                ],
                [
                    5,
                    10
                ],
                [
                    6,
                    9
                ],
                [
                    10,
                    7
                ],
                [
                    10,
                    1
                ],
                [
                    3,
                    10
                ],
                [
                    5,
                    1
                ],
                [
                    8,
                    4
                ],
                [
                    9,
                    2
                ],
                [
                    4,
                    3
                ],
                [
                    2,
                    7
                ],
                [
                    10,
                    7
                ],
                [
                    6,
                    4
                ],
                [
                    7,
                    7
                ],
                [
                    2,
                    10
                ],
                [
                    7,
                    4
                ],
                [
                    8,
                    9
                ],
                [
                    10,
                    3
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 37
    },
    {
        "title": "Electronics Industry PCB Component Placement",
        "desc_split": "Printed circuit boards (<bin_size>) require placement of rectangular electronic components (<items_size>). Components arrive sequentially and must be positioned immediately without knowledge of upcoming component dimensions. The challenge is to optimize board space usage, working solely with component and PCB length and width.",
        "desc_merge": "Printed circuit boards ([10, 10]) require placement of rectangular electronic components ([[7, 2], [1, 7], [7, 8], [4, 8], [6, 1], [8, 5], [9, 9], [3, 3], [4, 2], [10, 2], [3, 6], [3, 10], [1, 8], [4, 4], [6, 2], [6, 2], [7, 3], [7, 3], [3, 7], [3, 5], [5, 7], [1, 1], [7, 5], [5, 7], [3, 5]]). Components arrive sequentially and must be positioned immediately without knowledge of upcoming component dimensions. The challenge is to optimize board space usage, working solely with component and PCB length and width.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    7,
                    2
                ],
                [
                    1,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    4,
                    8
                ],
                [
                    6,
                    1
                ],
                [
                    8,
                    5
                ],
                [
                    9,
                    9
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    2
                ],
                [
                    10,
                    2
                ],
                [
                    3,
                    6
                ],
                [
                    3,
                    10
                ],
                [
                    1,
                    8
                ],
                [
                    4,
                    4
                ],
                [
                    6,
                    2
                ],
                [
                    6,
                    2
                ],
                [
                    7,
                    3
                ],
                [
                    7,
                    3
                ],
                [
                    3,
                    7
                ],
                [
                    3,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    1,
                    1
                ],
                [
                    7,
                    5
                ],
                [
                    5,
                    7
                ],
                [
                    3,
                    5
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 38
    },
    {
        "title": "Shipping Industry Container Loading",
        "desc_split": "Shipping containers (<bin_size>) must accommodate variously sized rectangular cargo packages (<items_size>) that arrive at the dock one by one. Each package must be loaded immediately without insight into subsequent packages' dimensions. The aim is to minimize container usage by efficiently arranging packages based solely on length and width.",
        "desc_merge": "Shipping containers ([10, 10]) must accommodate variously sized rectangular cargo packages ([[9, 6], [1, 3], [3, 9], [7, 4], [8, 4], [6, 2], [6, 4], [7, 5], [3, 8], [7, 9], [4, 2], [7, 10], [2, 7], [7, 5], [4, 5], [5, 4], [10, 6], [7, 10], [8, 8], [4, 6], [4, 2], [1, 4], [2, 8], [4, 5], [4, 7]]) that arrive at the dock one by one. Each package must be loaded immediately without insight into subsequent packages' dimensions. The aim is to minimize container usage by efficiently arranging packages based solely on length and width.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    9,
                    6
                ],
                [
                    1,
                    3
                ],
                [
                    3,
                    9
                ],
                [
                    7,
                    4
                ],
                [
                    8,
                    4
                ],
                [
                    6,
                    2
                ],
                [
                    6,
                    4
                ],
                [
                    7,
                    5
                ],
                [
                    3,
                    8
                ],
                [
                    7,
                    9
                ],
                [
                    4,
                    2
                ],
                [
                    7,
                    10
                ],
                [
                    2,
                    7
                ],
                [
                    7,
                    5
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    4
                ],
                [
                    10,
                    6
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    2
                ],
                [
                    1,
                    4
                ],
                [
                    2,
                    8
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    7
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 39
    },
    {
        "title": "Clothing Industry Leather Hide Cutting",
        "desc_split": "Leather hides (<bin_size>) are cut for various rectangular patterns (<items_size>) in real-time as orders arrive. Each pattern must be placed before knowing subsequent pattern sizes. The objective is maximize hide utilization by strategically arranging patterns according to only their length and width.",
        "desc_merge": "Leather hides ([10, 10]) are cut for various rectangular patterns ([[5, 4], [3, 10], [8, 7], [6, 6], [8, 10], [6, 8], [2, 6], [3, 5], [7, 10], [4, 7], [3, 5], [7, 1], [7, 4], [1, 5], [7, 2], [1, 1], [4, 7], [9, 8], [6, 10], [4, 5], [7, 9], [8, 5], [2, 3]]) in real-time as orders arrive. Each pattern must be placed before knowing subsequent pattern sizes. The objective is maximize hide utilization by strategically arranging patterns according to only their length and width.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    5,
                    4
                ],
                [
                    3,
                    10
                ],
                [
                    8,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    8,
                    10
                ],
                [
                    6,
                    8
                ],
                [
                    2,
                    6
                ],
                [
                    3,
                    5
                ],
                [
                    7,
                    10
                ],
                [
                    4,
                    7
                ],
                [
                    3,
                    5
                ],
                [
                    7,
                    1
                ],
                [
                    7,
                    4
                ],
                [
                    1,
                    5
                ],
                [
                    7,
                    2
                ],
                [
                    1,
                    1
                ],
                [
                    4,
                    7
                ],
                [
                    9,
                    8
                ],
                [
                    6,
                    10
                ],
                [
                    4,
                    5
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    5
                ],
                [
                    2,
                    3
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 40
    },
    {
        "title": "Carpentry Workshop Wood Plank Utilization",
        "desc_split": "Wood planks (<bin_size>) are cut into rectangular pieces (<items_size>) for custom projects. Pieces are requested sequentially and each must be cut immediately without seeing future requirement sizes. The goal is to minimize plank waste by optimizing piece layout based solely on length and width.",
        "desc_merge": "Wood planks ([10, 10]) are cut into rectangular pieces ([[5, 8], [1, 10], [7, 7], [1, 9], [7, 3], [4, 6], [3, 6], [2, 4], [6, 3], [2, 10], [3, 6], [5, 6], [9, 10], [4, 9], [8, 3], [1, 5], [7, 5], [7, 7], [6, 3], [3, 1], [1, 4]]) for custom projects. Pieces are requested sequentially and each must be cut immediately without seeing future requirement sizes. The goal is to minimize plank waste by optimizing piece layout based solely on length and width.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    5,
                    8
                ],
                [
                    1,
                    10
                ],
                [
                    7,
                    7
                ],
                [
                    1,
                    9
                ],
                [
                    7,
                    3
                ],
                [
                    4,
                    6
                ],
                [
                    3,
                    6
                ],
                [
                    2,
                    4
                ],
                [
                    6,
                    3
                ],
                [
                    2,
                    10
                ],
                [
                    3,
                    6
                ],
                [
                    5,
                    6
                ],
                [
                    9,
                    10
                ],
                [
                    4,
                    9
                ],
                [
                    8,
                    3
                ],
                [
                    1,
                    5
                ],
                [
                    7,
                    5
                ],
                [
                    7,
                    7
                ],
                [
                    6,
                    3
                ],
                [
                    3,
                    1
                ],
                [
                    1,
                    4
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 41
    },
    {
        "title": "Paper Industry Sheet Conversion",
        "desc_split": "Large paper rolls (<bin_size>) are sliced into smaller rectangular sheets (<items_size>) in response to immediate customer orders. Each requested sheet dimension must be processed before subsequent requests are known. The challenge is to maximize paper roll usage by efficiently planning cuts using only sheet length and width.",
        "desc_merge": "Large paper rolls ([10, 10]) are sliced into smaller rectangular sheets ([[3, 4], [4, 7], [1, 10], [8, 5], [4, 10], [3, 10], [9, 4], [8, 9], [8, 4], [3, 10], [9, 1], [3, 10], [9, 7], [6, 7], [5, 2], [5, 4], [3, 4], [10, 5], [9, 10], [10, 4], [6, 9]]) in response to immediate customer orders. Each requested sheet dimension must be processed before subsequent requests are known. The challenge is to maximize paper roll usage by efficiently planning cuts using only sheet length and width.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    3,
                    4
                ],
                [
                    4,
                    7
                ],
                [
                    1,
                    10
                ],
                [
                    8,
                    5
                ],
                [
                    4,
                    10
                ],
                [
                    3,
                    10
                ],
                [
                    9,
                    4
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    4
                ],
                [
                    3,
                    10
                ],
                [
                    9,
                    1
                ],
                [
                    3,
                    10
                ],
                [
                    9,
                    7
                ],
                [
                    6,
                    7
                ],
                [
                    5,
                    2
                ],
                [
                    5,
                    4
                ],
                [
                    3,
                    4
                ],
                [
                    10,
                    5
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    4
                ],
                [
                    6,
                    9
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 42
    },
    {
        "title": "Automated Warehouse Pallet Packing",
        "desc_split": "Warehouse pallets (<bin_size>) must store rectangular boxes (<items_size>) that continuously arrive on conveyor belts. Each box must be placed immediately with no information about upcoming box sizes. The aim is to maximize pallet space utilization by strategically positioning boxes based exclusively on their length and width.",
        "desc_merge": "Warehouse pallets ([10, 10]) must store rectangular boxes ([[4, 9], [3, 2], [6, 10], [3, 2], [3, 3], [8, 1], [7, 8], [1, 4], [4, 9], [5, 10], [7, 1], [3, 1], [7, 7], [10, 3], [2, 2], [5, 10], [1, 5], [1, 4], [1, 7], [2, 3], [4, 2], [2, 4], [5, 10], [7, 1]]) that continuously arrive on conveyor belts. Each box must be placed immediately with no information about upcoming box sizes. The aim is to maximize pallet space utilization by strategically positioning boxes based exclusively on their length and width.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    4,
                    9
                ],
                [
                    3,
                    2
                ],
                [
                    6,
                    10
                ],
                [
                    3,
                    2
                ],
                [
                    3,
                    3
                ],
                [
                    8,
                    1
                ],
                [
                    7,
                    8
                ],
                [
                    1,
                    4
                ],
                [
                    4,
                    9
                ],
                [
                    5,
                    10
                ],
                [
                    7,
                    1
                ],
                [
                    3,
                    1
                ],
                [
                    7,
                    7
                ],
                [
                    10,
                    3
                ],
                [
                    2,
                    2
                ],
                [
                    5,
                    10
                ],
                [
                    1,
                    5
                ],
                [
                    1,
                    4
                ],
                [
                    1,
                    7
                ],
                [
                    2,
                    3
                ],
                [
                    4,
                    2
                ],
                [
                    2,
                    4
                ],
                [
                    5,
                    10
                ],
                [
                    7,
                    1
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 43
    },
    {
        "title": "Signage Industry Composite Panel Usage",
        "desc_split": "Composite panels (<bin_size>) are used to create multiple rectangular signs (<items_size>) in an online production process. Signs arrive one at time and must be cut immediately before subsequent sign dimensions are known. The objective is to optimize panel consumption by arranging signs according to their length and width only.",
        "desc_merge": "Composite panels ([10, 10]) are used to create multiple rectangular signs ([[1, 2], [1, 8], [3, 2], [6, 6], [7, 4], [10, 4], [3, 4], [10, 3], [6, 3], [5, 10], [7, 3], [4, 2], [5, 10], [2, 2], [7, 9], [3, 4], [7, 4], [10, 8], [7, 9], [10, 1], [2, 1], [5, 4], [10, 2], [8, 8]]) in an online production process. Signs arrive one at time and must be cut immediately before subsequent sign dimensions are known. The objective is to optimize panel consumption by arranging signs according to their length and width only.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    1,
                    2
                ],
                [
                    1,
                    8
                ],
                [
                    3,
                    2
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    4
                ],
                [
                    10,
                    4
                ],
                [
                    3,
                    4
                ],
                [
                    10,
                    3
                ],
                [
                    6,
                    3
                ],
                [
                    5,
                    10
                ],
                [
                    7,
                    3
                ],
                [
                    4,
                    2
                ],
                [
                    5,
                    10
                ],
                [
                    2,
                    2
                ],
                [
                    7,
                    9
                ],
                [
                    3,
                    4
                ],
                [
                    7,
                    4
                ],
                [
                    10,
                    8
                ],
                [
                    7,
                    9
                ],
                [
                    10,
                    1
                ],
                [
                    2,
                    1
                ],
                [
                    5,
                    4
                ],
                [
                    10,
                    2
                ],
                [
                    8,
                    8
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 44
    },
    {
        "title": "Construction Industry Steel Plate Allocation",
        "desc_split": "Steel plates (<bin_size>) are cut to produce various rectangular construction parts (<items_size>). Parts arrive sequentially and each must be processed immediately without knowledge of future part sizes. The challenge is to maximize steel plate usage by carefully arranging parts based solely on their length and width specifications.",
        "desc_merge": "Steel plates ([10, 10]) are cut to produce various rectangular construction parts ([[10, 4], [1, 8], [2, 1], [7, 7], [3, 10], [7, 10], [7, 2], [9, 4], [3, 8], [6, 1], [7, 7], [6, 6], [4, 3], [5, 10], [3, 7], [8, 2], [4, 7], [1, 1], [2, 8], [9, 3]]). Parts arrive sequentially and each must be processed immediately without knowledge of future part sizes. The challenge is to maximize steel plate usage by carefully arranging parts based solely on their length and width specifications.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    10,
                    4
                ],
                [
                    1,
                    8
                ],
                [
                    2,
                    1
                ],
                [
                    7,
                    7
                ],
                [
                    3,
                    10
                ],
                [
                    7,
                    10
                ],
                [
                    7,
                    2
                ],
                [
                    9,
                    4
                ],
                [
                    3,
                    8
                ],
                [
                    6,
                    1
                ],
                [
                    7,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    4,
                    3
                ],
                [
                    5,
                    10
                ],
                [
                    3,
                    7
                ],
                [
                    8,
                    2
                ],
                [
                    4,
                    7
                ],
                [
                    1,
                    1
                ],
                [
                    2,
                    8
                ],
                [
                    9,
                    3
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 45
    },
    {
        "title": "Furniture Industry Plywood Panel Cutting",
        "desc_split": "Plywood sheets (<bin_size>) are used to cut rectangular panels (<items_size>) for furniture assembly. Each panel request arrives one by one and must be placed immediately without knowledge of future panel requirements, optimizing plywood usage by considering only length and width dimensions of sheets and parts.",
        "desc_merge": "Plywood sheets ([10, 10]) are used to cut rectangular panels ([[8, 2], [2, 7], [5, 8], [4, 6], [2, 4], [10, 6], [3, 6], [3, 5], [4, 7], [1, 3], [2, 2], [10, 8], [10, 9], [10, 4], [8, 4], [5, 8], [9, 1], [4, 1], [1, 6], [7, 8], [3, 9], [10, 3], [8, 4], [9, 1], [7, 2]]) for furniture assembly. Each panel request arrives one by one and must be placed immediately without knowledge of future panel requirements, optimizing plywood usage by considering only length and width dimensions of sheets and parts.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    8,
                    2
                ],
                [
                    2,
                    7
                ],
                [
                    5,
                    8
                ],
                [
                    4,
                    6
                ],
                [
                    2,
                    4
                ],
                [
                    10,
                    6
                ],
                [
                    3,
                    6
                ],
                [
                    3,
                    5
                ],
                [
                    4,
                    7
                ],
                [
                    1,
                    3
                ],
                [
                    2,
                    2
                ],
                [
                    10,
                    8
                ],
                [
                    10,
                    9
                ],
                [
                    10,
                    4
                ],
                [
                    8,
                    4
                ],
                [
                    5,
                    8
                ],
                [
                    9,
                    1
                ],
                [
                    4,
                    1
                ],
                [
                    1,
                    6
                ],
                [
                    7,
                    8
                ],
                [
                    3,
                    9
                ],
                [
                    10,
                    3
                ],
                [
                    8,
                    4
                ],
                [
                    9,
                    1
                ],
                [
                    7,
                    2
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 46
    },
    {
        "title": "Shipping Industry Container Loading",
        "desc_split": "Shipping containers (<bin_size>) are loaded with rectangular cargo packages (<items_size>) that arrive sequentially without pre-planning. Each package must be placed inside the container immediately while maximizing space utilization based purely on cargo length and width, with no prior knowledge of upcoming shipments.",
        "desc_merge": "Shipping containers ([10, 10]) are loaded with rectangular cargo packages ([[2, 7], [1, 10], [9, 1], [3, 6], [3, 3], [3, 10], [2, 3], [2, 5], [8, 7], [8, 4], [9, 7], [4, 9], [10, 10], [9, 10], [7, 2], [10, 9], [4, 6], [2, 1], [3, 7], [7, 7], [8, 5]]) that arrive sequentially without pre-planning. Each package must be placed inside the container immediately while maximizing space utilization based purely on cargo length and width, with no prior knowledge of upcoming shipments.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    2,
                    7
                ],
                [
                    1,
                    10
                ],
                [
                    9,
                    1
                ],
                [
                    3,
                    6
                ],
                [
                    3,
                    3
                ],
                [
                    3,
                    10
                ],
                [
                    2,
                    3
                ],
                [
                    2,
                    5
                ],
                [
                    8,
                    7
                ],
                [
                    8,
                    4
                ],
                [
                    9,
                    7
                ],
                [
                    4,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    9,
                    10
                ],
                [
                    7,
                    2
                ],
                [
                    10,
                    9
                ],
                [
                    4,
                    6
                ],
                [
                    2,
                    1
                ],
                [
                    3,
                    7
                ],
                [
                    7,
                    7
                ],
                [
                    8,
                    5
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 47
    },
    {
        "title": "Fashion Industry Leather Hide Utilization",
        "desc_split": "Animal hides (<bin_size>) are cut into rectangular fashion accessory pieces (<items_size>) like belts and bag components. As orders arrive unpredictably, each piece must be cut from the hide immediately without knowing future piece dimensions, necessitating real-time optimization based solely on length and width measurements.",
        "desc_merge": "Animal hides ([10, 10]) are cut into rectangular fashion accessory pieces ([[6, 3], [4, 4], [3, 5], [9, 3], [2, 1], [5, 9], [7, 3], [3, 10], [5, 3], [9, 9], [2, 1], [9, 1], [4, 10], [4, 2], [10, 9], [2, 7], [3, 3], [5, 7], [1, 4], [1, 2], [8, 3], [5, 9]]) like belts and bag components. As orders arrive unpredictably, each piece must be cut from the hide immediately without knowing future piece dimensions, necessitating real-time optimization based solely on length and width measurements.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    6,
                    3
                ],
                [
                    4,
                    4
                ],
                [
                    3,
                    5
                ],
                [
                    9,
                    3
                ],
                [
                    2,
                    1
                ],
                [
                    5,
                    9
                ],
                [
                    7,
                    3
                ],
                [
                    3,
                    10
                ],
                [
                    5,
                    3
                ],
                [
                    9,
                    9
                ],
                [
                    2,
                    1
                ],
                [
                    9,
                    1
                ],
                [
                    4,
                    10
                ],
                [
                    4,
                    2
                ],
                [
                    10,
                    9
                ],
                [
                    2,
                    7
                ],
                [
                    3,
                    3
                ],
                [
                    5,
                    7
                ],
                [
                    1,
                    4
                ],
                [
                    1,
                    2
                ],
                [
                    8,
                    3
                ],
                [
                    5,
                    9
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 48
    },
    {
        "title": "Semiconductor Industry Silicon Wafer Dicing",
        "desc_split": "Pure silicon wafers (<bin_size>) contain multiple rectangular microchip dies (<items_size>) that must be arranged as they're fabricated with no prior information about subsequent die dimensions. The challenge is to maximize wafer yield by carefully placing each die based exclusively on their length and width measurements.",
        "desc_merge": "Pure silicon wafers ([10, 10]) contain multiple rectangular microchip dies ([[6, 9], [9, 7], [1, 4], [9, 5], [6, 9], [10, 8], [10, 4], [8, 8], [6, 7], [3, 1], [8, 2], [2, 2], [1, 5], [4, 9], [5, 10], [6, 7], [1, 9], [5, 6], [5, 6], [4, 4], [6, 5]]) that must be arranged as they're fabricated with no prior information about subsequent die dimensions. The challenge is to maximize wafer yield by carefully placing each die based exclusively on their length and width measurements.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    6,
                    9
                ],
                [
                    9,
                    7
                ],
                [
                    1,
                    4
                ],
                [
                    9,
                    5
                ],
                [
                    6,
                    9
                ],
                [
                    10,
                    8
                ],
                [
                    10,
                    4
                ],
                [
                    8,
                    8
                ],
                [
                    6,
                    7
                ],
                [
                    3,
                    1
                ],
                [
                    8,
                    2
                ],
                [
                    2,
                    2
                ],
                [
                    1,
                    5
                ],
                [
                    4,
                    9
                ],
                [
                    5,
                    10
                ],
                [
                    6,
                    7
                ],
                [
                    1,
                    9
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    6,
                    5
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 49
    },
    {
        "title": "Printing Industry Paper Sheet Layout",
        "desc_split": "Printing presses arrange rectangular documents (<items_size>) on standard paper sheets (<bin_size>) one at a time without knowing which documents will follow. The system must optimize paper usage by arranging each document immediately upon arrival, considering only length and width parameters of both documents and sheets.",
        "desc_merge": "Printing presses arrange rectangular documents ([[2, 2], [7, 3], [6, 1], [2, 2], [4, 1], [4, 2], [4, 1], [7, 9], [2, 10], [7, 4], [1, 8], [4, 8], [8, 1], [4, 5], [5, 9], [9, 1], [4, 9], [4, 10], [9, 7], [6, 9], [3, 3], [7, 9]]) on standard paper sheets ([10, 10]) one at a time without knowing which documents will follow. The system must optimize paper usage by arranging each document immediately upon arrival, considering only length and width parameters of both documents and sheets.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    2,
                    2
                ],
                [
                    7,
                    3
                ],
                [
                    6,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    4,
                    1
                ],
                [
                    4,
                    2
                ],
                [
                    4,
                    1
                ],
                [
                    7,
                    9
                ],
                [
                    2,
                    10
                ],
                [
                    7,
                    4
                ],
                [
                    1,
                    8
                ],
                [
                    4,
                    8
                ],
                [
                    8,
                    1
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    9
                ],
                [
                    9,
                    1
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    10
                ],
                [
                    9,
                    7
                ],
                [
                    6,
                    9
                ],
                [
                    3,
                    3
                ],
                [
                    7,
                    9
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 50
    },
    {
        "title": "Construction Industry Tile Floor Installation",
        "desc_split": "Whole floor tiles (<bin_size>) are cut into rectangular smaller tiles (<items_size>) as per real-time installation requirements without blueprint knowledge. Each cut must be made instantly based solely on current length and width needs while preserving maximum uncut tile area for future unknown cuts.",
        "desc_merge": "Whole floor tiles ([10, 10]) are cut into rectangular smaller tiles ([[10, 5], [1, 8], [1, 10], [1, 1], [6, 7], [10, 9], [10, 1], [4, 8], [3, 4], [10, 9], [9, 5], [10, 1], [8, 8], [2, 3], [5, 1], [1, 9], [8, 1], [7, 3], [7, 1], [1, 10], [9, 2]]) as per real-time installation requirements without blueprint knowledge. Each cut must be made instantly based solely on current length and width needs while preserving maximum uncut tile area for future unknown cuts.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    10,
                    5
                ],
                [
                    1,
                    8
                ],
                [
                    1,
                    10
                ],
                [
                    1,
                    1
                ],
                [
                    6,
                    7
                ],
                [
                    10,
                    9
                ],
                [
                    10,
                    1
                ],
                [
                    4,
                    8
                ],
                [
                    3,
                    4
                ],
                [
                    10,
                    9
                ],
                [
                    9,
                    5
                ],
                [
                    10,
                    1
                ],
                [
                    8,
                    8
                ],
                [
                    2,
                    3
                ],
                [
                    5,
                    1
                ],
                [
                    1,
                    9
                ],
                [
                    8,
                    1
                ],
                [
                    7,
                    3
                ],
                [
                    7,
                    1
                ],
                [
                    1,
                    10
                ],
                [
                    9,
                    2
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 51
    },
    {
        "title": "Aerospace Industry Composite Material Utilization",
        "desc_split": "Large aerospace composite panels (<bin_size>) receive rectangular cutouts (<items_size>) for aircraft components with orders arriving unpredictably during manufacturing. Each component must be placed immediately while maximizing original panel usage based purely on real-time length and width requirements.",
        "desc_merge": "Large aerospace composite panels ([10, 10]) receive rectangular cutouts ([[2, 2], [1, 5], [5, 8], [1, 6], [6, 4], [2, 2], [5, 4], [4, 1], [8, 2], [3, 8], [10, 9], [6, 2], [6, 6], [3, 2], [4, 9], [1, 4], [5, 4], [4, 9], [5, 7], [4, 5], [2, 3], [9, 6], [4, 2]]) for aircraft components with orders arriving unpredictably during manufacturing. Each component must be placed immediately while maximizing original panel usage based purely on real-time length and width requirements.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    2,
                    2
                ],
                [
                    1,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    1,
                    6
                ],
                [
                    6,
                    4
                ],
                [
                    2,
                    2
                ],
                [
                    5,
                    4
                ],
                [
                    4,
                    1
                ],
                [
                    8,
                    2
                ],
                [
                    3,
                    8
                ],
                [
                    10,
                    9
                ],
                [
                    6,
                    2
                ],
                [
                    6,
                    6
                ],
                [
                    3,
                    2
                ],
                [
                    4,
                    9
                ],
                [
                    1,
                    4
                ],
                [
                    5,
                    4
                ],
                [
                    4,
                    9
                ],
                [
                    5,
                    7
                ],
                [
                    4,
                    5
                ],
                [
                    2,
                    3
                ],
                [
                    9,
                    6
                ],
                [
                    4,
                    2
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 52
    },
    {
        "title": "Solar Industry Photovoltaic Panel Production",
        "desc_split": "Solar panel substrates (<bin_size>) incorporate rectangular solar cells (<items_size>) placed sequentially during assembly with uncertain future cell dimensions. Production lines must optimize space efficiency by positioning each cell based solely on its own length and width specifications immediately upon arrival.",
        "desc_merge": "Solar panel substrates ([10, 10]) incorporate rectangular solar cells ([[7, 10], [6, 2], [2, 10], [10, 1], [1, 1], [5, 7], [7, 4], [5, 3], [8, 6], [7, 8], [7, 1], [3, 1], [3, 4], [6, 5], [1, 3], [6, 10], [3, 5], [7, 6], [4, 5], [3, 9], [5, 2], [9, 7], [3, 3], [1, 1], [3, 8]]) placed sequentially during assembly with uncertain future cell dimensions. Production lines must optimize space efficiency by positioning each cell based solely on its own length and width specifications immediately upon arrival.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    7,
                    10
                ],
                [
                    6,
                    2
                ],
                [
                    2,
                    10
                ],
                [
                    10,
                    1
                ],
                [
                    1,
                    1
                ],
                [
                    5,
                    7
                ],
                [
                    7,
                    4
                ],
                [
                    5,
                    3
                ],
                [
                    8,
                    6
                ],
                [
                    7,
                    8
                ],
                [
                    7,
                    1
                ],
                [
                    3,
                    1
                ],
                [
                    3,
                    4
                ],
                [
                    6,
                    5
                ],
                [
                    1,
                    3
                ],
                [
                    6,
                    10
                ],
                [
                    3,
                    5
                ],
                [
                    7,
                    6
                ],
                [
                    4,
                    5
                ],
                [
                    3,
                    9
                ],
                [
                    5,
                    2
                ],
                [
                    9,
                    7
                ],
                [
                    3,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    3,
                    8
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 53
    },
    {
        "title": "Industrial Packaging Protective Foam Cutting",
        "desc_split": "Large protective foam blocks (<bin_size>) are cut to create rectangular cavities (<items_size>) for product protection. As products of different sizes arrive on the packaging line randomly, each cavity cut must be made instantly based on current item dimensions (length and width only) while preserving maximum remaining block material for future unknown requirements.",
        "desc_merge": "Large protective foam blocks ([10, 10]) are cut to create rectangular cavities ([[7, 10], [2, 8], [2, 7], [4, 3], [3, 6], [1, 9], [8, 3], [8, 6], [6, 2], [9, 6], [8, 6], [1, 8], [10, 4], [8, 5], [7, 9], [9, 8], [8, 1], [4, 4], [9, 10], [9, 4], [5, 9], [3, 9], [3, 3], [1, 2]]) for product protection. As products of different sizes arrive on the packaging line randomly, each cavity cut must be made instantly based on current item dimensions (length and width only) while preserving maximum remaining block material for future unknown requirements.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    7,
                    10
                ],
                [
                    2,
                    8
                ],
                [
                    2,
                    7
                ],
                [
                    4,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    1,
                    9
                ],
                [
                    8,
                    3
                ],
                [
                    8,
                    6
                ],
                [
                    6,
                    2
                ],
                [
                    9,
                    6
                ],
                [
                    8,
                    6
                ],
                [
                    1,
                    8
                ],
                [
                    10,
                    4
                ],
                [
                    8,
                    5
                ],
                [
                    7,
                    9
                ],
                [
                    9,
                    8
                ],
                [
                    8,
                    1
                ],
                [
                    4,
                    4
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    3,
                    9
                ],
                [
                    3,
                    3
                ],
                [
                    1,
                    2
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 54
    },
    {
        "title": "Textile Industry Fabric Cutting",
        "desc_split": "Fabric rolls (<bin_size>) are used to cut rectangular pieces (<items_size>) for clothing production. Pieces are ordered sequentially and must be cut immediately without prior knowledge of future piece dimensions, aiming to minimize fabric waste by optimizing placement based solely on length and width.",
        "desc_merge": "Fabric rolls ([10, 10]) are used to cut rectangular pieces ([[1, 7], [7, 2], [4, 9], [7, 2], [6, 10], [7, 6], [4, 8], [10, 5], [6, 2], [8, 10], [7, 8], [9, 5], [7, 6], [6, 6], [4, 4], [1, 5], [4, 1], [2, 1], [6, 8], [2, 7], [8, 2], [2, 5], [1, 4]]) for clothing production. Pieces are ordered sequentially and must be cut immediately without prior knowledge of future piece dimensions, aiming to minimize fabric waste by optimizing placement based solely on length and width.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    1,
                    7
                ],
                [
                    7,
                    2
                ],
                [
                    4,
                    9
                ],
                [
                    7,
                    2
                ],
                [
                    6,
                    10
                ],
                [
                    7,
                    6
                ],
                [
                    4,
                    8
                ],
                [
                    10,
                    5
                ],
                [
                    6,
                    2
                ],
                [
                    8,
                    10
                ],
                [
                    7,
                    8
                ],
                [
                    9,
                    5
                ],
                [
                    7,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    1,
                    5
                ],
                [
                    4,
                    1
                ],
                [
                    2,
                    1
                ],
                [
                    6,
                    8
                ],
                [
                    2,
                    7
                ],
                [
                    8,
                    2
                ],
                [
                    2,
                    5
                ],
                [
                    1,
                    4
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 55
    },
    {
        "title": "Furniture Manufacturing Wood Panel Assembly",
        "desc_split": "Large wooden panels (<bin_size>) are cut into smaller rectangular components (<items_size>) for furniture. Components arrive one by one, and each must be placed on the panel without delay, striving to reduce raw material usage by only considering length and width dimensions.",
        "desc_merge": "Large wooden panels ([10, 10]) are cut into smaller rectangular components ([[9, 3], [9, 10], [8, 6], [7, 3], [3, 1], [7, 7], [10, 6], [5, 1], [6, 4], [3, 7], [1, 2], [3, 10], [4, 10], [10, 9], [5, 2], [8, 3], [2, 5], [5, 2], [7, 6], [5, 7], [5, 6], [6, 10], [5, 8]]) for furniture. Components arrive one by one, and each must be placed on the panel without delay, striving to reduce raw material usage by only considering length and width dimensions.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    9,
                    3
                ],
                [
                    9,
                    10
                ],
                [
                    8,
                    6
                ],
                [
                    7,
                    3
                ],
                [
                    3,
                    1
                ],
                [
                    7,
                    7
                ],
                [
                    10,
                    6
                ],
                [
                    5,
                    1
                ],
                [
                    6,
                    4
                ],
                [
                    3,
                    7
                ],
                [
                    1,
                    2
                ],
                [
                    3,
                    10
                ],
                [
                    4,
                    10
                ],
                [
                    10,
                    9
                ],
                [
                    5,
                    2
                ],
                [
                    8,
                    3
                ],
                [
                    2,
                    5
                ],
                [
                    5,
                    2
                ],
                [
                    7,
                    6
                ],
                [
                    5,
                    7
                ],
                [
                    5,
                    6
                ],
                [
                    6,
                    10
                ],
                [
                    5,
                    8
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 56
    },
    {
        "title": "Electronics PCB Component Placement",
        "desc_split": "Printed circuit boards (<bin_size>) must accommodate incoming rectangular electronic components (<items_size>) in real-time, with no foresight into future component sizes. The challenge is to maximize board space utilization while placing components solely based on their length and width.",
        "desc_merge": "Printed circuit boards ([10, 10]) must accommodate incoming rectangular electronic components ([[2, 5], [4, 3], [3, 1], [4, 3], [2, 4], [5, 10], [9, 3], [2, 10], [8, 1], [10, 9], [8, 1], [1, 5], [1, 7], [2, 2], [3, 8], [7, 6], [7, 1], [1, 5], [6, 8], [7, 5]]) in real-time, with no foresight into future component sizes. The challenge is to maximize board space utilization while placing components solely based on their length and width.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    2,
                    5
                ],
                [
                    4,
                    3
                ],
                [
                    3,
                    1
                ],
                [
                    4,
                    3
                ],
                [
                    2,
                    4
                ],
                [
                    5,
                    10
                ],
                [
                    9,
                    3
                ],
                [
                    2,
                    10
                ],
                [
                    8,
                    1
                ],
                [
                    10,
                    9
                ],
                [
                    8,
                    1
                ],
                [
                    1,
                    5
                ],
                [
                    1,
                    7
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    8
                ],
                [
                    7,
                    6
                ],
                [
                    7,
                    1
                ],
                [
                    1,
                    5
                ],
                [
                    6,
                    8
                ],
                [
                    7,
                    5
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 57
    },
    {
        "title": "Shipping Industry Pallet Loading",
        "desc_split": "Packages (<items_size>) with rectangular shapes are loaded onto pallets (<bin_size>) as they arrive at a warehouse. Workers must place each package immediately without knowing upcoming package dimensions, aiming to fit all packages on the fewest pallets possible using only length and width measurements.",
        "desc_merge": "Packages ([[8, 4], [5, 6], [4, 3], [5, 2], [6, 7], [1, 7], [2, 7], [2, 10], [2, 8], [6, 3], [6, 4], [4, 9], [10, 4], [9, 2], [3, 4], [8, 8], [4, 8], [6, 1], [10, 2], [4, 3], [4, 4]]) with rectangular shapes are loaded onto pallets ([10, 10]) as they arrive at a warehouse. Workers must place each package immediately without knowing upcoming package dimensions, aiming to fit all packages on the fewest pallets possible using only length and width measurements.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    8,
                    4
                ],
                [
                    5,
                    6
                ],
                [
                    4,
                    3
                ],
                [
                    5,
                    2
                ],
                [
                    6,
                    7
                ],
                [
                    1,
                    7
                ],
                [
                    2,
                    7
                ],
                [
                    2,
                    10
                ],
                [
                    2,
                    8
                ],
                [
                    6,
                    3
                ],
                [
                    6,
                    4
                ],
                [
                    4,
                    9
                ],
                [
                    10,
                    4
                ],
                [
                    9,
                    2
                ],
                [
                    3,
                    4
                ],
                [
                    8,
                    8
                ],
                [
                    4,
                    8
                ],
                [
                    6,
                    1
                ],
                [
                    10,
                    2
                ],
                [
                    4,
                    3
                ],
                [
                    4,
                    4
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 58
    },
    {
        "title": "Construction Steel Beam Cutting",
        "desc_split": "Steel beams (<bin_size>) are cut into smaller rectangular segments (<items_size>) for building frames. Orders arrive dynamically, and each segment must be cut at once, requiring real-time optimization of beam usage by considering only length and width to minimize waste.",
        "desc_merge": "Steel beams ([10, 10]) are cut into smaller rectangular segments ([[3, 9], [3, 9], [3, 5], [3, 7], [7, 10], [7, 1], [2, 4], [5, 8], [4, 1], [8, 8], [8, 7], [4, 2], [4, 10], [7, 5], [2, 6], [6, 7], [8, 7], [9, 7], [10, 6], [9, 9], [9, 3]]) for building frames. Orders arrive dynamically, and each segment must be cut at once, requiring real-time optimization of beam usage by considering only length and width to minimize waste.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    3,
                    9
                ],
                [
                    3,
                    9
                ],
                [
                    3,
                    5
                ],
                [
                    3,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    7,
                    1
                ],
                [
                    2,
                    4
                ],
                [
                    5,
                    8
                ],
                [
                    4,
                    1
                ],
                [
                    8,
                    8
                ],
                [
                    8,
                    7
                ],
                [
                    4,
                    2
                ],
                [
                    4,
                    10
                ],
                [
                    7,
                    5
                ],
                [
                    2,
                    6
                ],
                [
                    6,
                    7
                ],
                [
                    8,
                    7
                ],
                [
                    9,
                    7
                ],
                [
                    10,
                    6
                ],
                [
                    9,
                    9
                ],
                [
                    9,
                    3
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 59
    },
    {
        "title": "Printing Industry Magazine Layout",
        "desc_split": "Magazine pages (<bin_size>) must incorporate rectangular images and text blocks (<items_size>) as they are submitted by editors. Each element must be placed as soon as it arrives, with no knowledge of future content, optimizing page space based solely on length and width.",
        "desc_merge": "Magazine pages ([10, 10]) must incorporate rectangular images and text blocks ([[5, 9], [9, 1], [2, 2], [8, 4], [8, 9], [3, 5], [2, 2], [10, 4], [8, 5], [6, 8], [9, 7], [9, 1], [8, 6], [10, 1], [8, 4], [8, 8], [2, 10], [4, 8], [9, 6], [10, 9], [5, 7], [4, 10], [6, 2], [9, 7]]) as they are submitted by editors. Each element must be placed as soon as it arrives, with no knowledge of future content, optimizing page space based solely on length and width.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    5,
                    9
                ],
                [
                    9,
                    1
                ],
                [
                    2,
                    2
                ],
                [
                    8,
                    4
                ],
                [
                    8,
                    9
                ],
                [
                    3,
                    5
                ],
                [
                    2,
                    2
                ],
                [
                    10,
                    4
                ],
                [
                    8,
                    5
                ],
                [
                    6,
                    8
                ],
                [
                    9,
                    7
                ],
                [
                    9,
                    1
                ],
                [
                    8,
                    6
                ],
                [
                    10,
                    1
                ],
                [
                    8,
                    4
                ],
                [
                    8,
                    8
                ],
                [
                    2,
                    10
                ],
                [
                    4,
                    8
                ],
                [
                    9,
                    6
                ],
                [
                    10,
                    9
                ],
                [
                    5,
                    7
                ],
                [
                    4,
                    10
                ],
                [
                    6,
                    2
                ],
                [
                    9,
                    7
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 60
    },
    {
        "title": "Aerospace Composite Material Trimming",
        "desc_split": "Composite sheets (<bin_size>) are trimmed into rectangular aerospace components (<items_size>) as orders come in. Each cut must be made immediately without future component information, aiming to reduce material costs by optimizing based only on length and width dimensions.",
        "desc_merge": "Composite sheets ([10, 10]) are trimmed into rectangular aerospace components ([[4, 6], [4, 9], [9, 6], [8, 4], [1, 5], [5, 8], [2, 1], [3, 10], [3, 5], [3, 2], [4, 4], [3, 5], [2, 8], [8, 6], [4, 4], [4, 1], [7, 1], [4, 9], [2, 9], [10, 5], [5, 9], [4, 8], [9, 1]]) as orders come in. Each cut must be made immediately without future component information, aiming to reduce material costs by optimizing based only on length and width dimensions.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    4,
                    6
                ],
                [
                    4,
                    9
                ],
                [
                    9,
                    6
                ],
                [
                    8,
                    4
                ],
                [
                    1,
                    5
                ],
                [
                    5,
                    8
                ],
                [
                    2,
                    1
                ],
                [
                    3,
                    10
                ],
                [
                    3,
                    5
                ],
                [
                    3,
                    2
                ],
                [
                    4,
                    4
                ],
                [
                    3,
                    5
                ],
                [
                    2,
                    8
                ],
                [
                    8,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    4,
                    1
                ],
                [
                    7,
                    1
                ],
                [
                    4,
                    9
                ],
                [
                    2,
                    9
                ],
                [
                    10,
                    5
                ],
                [
                    5,
                    9
                ],
                [
                    4,
                    8
                ],
                [
                    9,
                    1
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 61
    },
    {
        "title": "Food Industry Cookie Dough Cutting",
        "desc_split": "Large dough sheets (<bin_size>) are cut into rectangular cookies (<items_size>) on a production line. Cookies are stamped sequentially, forcing immediate placement without knowing future shapes, ensuring maximum dough yield by considering only length and width.",
        "desc_merge": "Large dough sheets ([10, 10]) are cut into rectangular cookies ([[10, 7], [3, 10], [8, 8], [2, 7], [6, 4], [1, 5], [3, 10], [8, 10], [3, 7], [10, 10], [9, 4], [5, 10], [4, 6], [2, 3], [2, 8], [9, 8], [7, 7], [3, 3], [4, 8], [6, 7]]) on a production line. Cookies are stamped sequentially, forcing immediate placement without knowing future shapes, ensuring maximum dough yield by considering only length and width.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    10,
                    7
                ],
                [
                    3,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    2,
                    7
                ],
                [
                    6,
                    4
                ],
                [
                    1,
                    5
                ],
                [
                    3,
                    10
                ],
                [
                    8,
                    10
                ],
                [
                    3,
                    7
                ],
                [
                    10,
                    10
                ],
                [
                    9,
                    4
                ],
                [
                    5,
                    10
                ],
                [
                    4,
                    6
                ],
                [
                    2,
                    3
                ],
                [
                    2,
                    8
                ],
                [
                    9,
                    8
                ],
                [
                    7,
                    7
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    8
                ],
                [
                    6,
                    7
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 62
    },
    {
        "title": "Retail Industry Shelf Space Optimization",
        "desc_split": "Store shelves (<bin_size>) must dynamically display rectangular product packages (<items_size>) as they arrive from suppliers. Products are placed without foresight into incoming stock, requiring efficient shelf usage based purely on length and width to maximize display capacity.",
        "desc_merge": "Store shelves ([10, 10]) must dynamically display rectangular product packages ([[2, 7], [6, 1], [3, 7], [10, 5], [7, 8], [9, 7], [2, 2], [5, 3], [4, 2], [9, 10], [6, 1], [10, 4], [5, 4], [3, 2], [8, 8], [7, 2], [5, 2], [7, 5], [2, 7], [2, 1]]) as they arrive from suppliers. Products are placed without foresight into incoming stock, requiring efficient shelf usage based purely on length and width to maximize display capacity.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    2,
                    7
                ],
                [
                    6,
                    1
                ],
                [
                    3,
                    7
                ],
                [
                    10,
                    5
                ],
                [
                    7,
                    8
                ],
                [
                    9,
                    7
                ],
                [
                    2,
                    2
                ],
                [
                    5,
                    3
                ],
                [
                    4,
                    2
                ],
                [
                    9,
                    10
                ],
                [
                    6,
                    1
                ],
                [
                    10,
                    4
                ],
                [
                    5,
                    4
                ],
                [
                    3,
                    2
                ],
                [
                    8,
                    8
                ],
                [
                    7,
                    2
                ],
                [
                    5,
                    2
                ],
                [
                    7,
                    5
                ],
                [
                    2,
                    7
                ],
                [
                    2,
                    1
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 63
    },
    {
        "title": "Solar Panel Manufacturing Silicone Wafer Allocation",
        "desc_split": "Rectangular solar cells (<items_size>) are arranged on silicone wafers (<bin_size>) in a continuous production process. Each cell placement is immediate and uninformed of future cell sizes, demanding optimal wafer use through length and width-based positioning.",
        "desc_merge": "Rectangular solar cells ([[1, 4], [5, 3], [4, 7], [3, 10], [1, 5], [7, 4], [5, 5], [1, 9], [6, 10], [6, 8], [2, 8], [10, 3], [8, 6], [3, 8], [10, 6], [1, 5], [1, 1], [5, 3], [4, 6], [7, 9], [4, 3], [3, 6], [7, 2]]) are arranged on silicone wafers ([10, 10]) in a continuous production process. Each cell placement is immediate and uninformed of future cell sizes, demanding optimal wafer use through length and width-based positioning.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    1,
                    4
                ],
                [
                    5,
                    3
                ],
                [
                    4,
                    7
                ],
                [
                    3,
                    10
                ],
                [
                    1,
                    5
                ],
                [
                    7,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    1,
                    9
                ],
                [
                    6,
                    10
                ],
                [
                    6,
                    8
                ],
                [
                    2,
                    8
                ],
                [
                    10,
                    3
                ],
                [
                    8,
                    6
                ],
                [
                    3,
                    8
                ],
                [
                    10,
                    6
                ],
                [
                    1,
                    5
                ],
                [
                    1,
                    1
                ],
                [
                    5,
                    3
                ],
                [
                    4,
                    6
                ],
                [
                    7,
                    9
                ],
                [
                    4,
                    3
                ],
                [
                    3,
                    6
                ],
                [
                    7,
                    2
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 64
    },
    {
        "title": "Furniture Manufacturing Wood Panel Optimization",
        "desc_split": "Rectangular wooden panels (<bin_size>) are used to cut out smaller components (<items_size>) for furniture assembly. Each component must be cut as soon as it is ordered, and no future component dimensions are available beforehand. The challenge is to arrange these pieces on the panel to minimize waste, considering only the length and width.",
        "desc_merge": "Rectangular wooden panels ([10, 10]) are used to cut out smaller components ([[3, 9], [3, 7], [3, 9], [9, 4], [4, 8], [5, 9], [7, 3], [10, 2], [8, 3], [3, 7], [9, 3], [6, 3], [4, 6], [1, 9], [1, 9], [5, 3], [6, 1], [3, 5], [5, 5], [4, 6], [3, 6], [5, 2], [9, 9], [10, 2]]) for furniture assembly. Each component must be cut as soon as it is ordered, and no future component dimensions are available beforehand. The challenge is to arrange these pieces on the panel to minimize waste, considering only the length and width.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    3,
                    9
                ],
                [
                    3,
                    7
                ],
                [
                    3,
                    9
                ],
                [
                    9,
                    4
                ],
                [
                    4,
                    8
                ],
                [
                    5,
                    9
                ],
                [
                    7,
                    3
                ],
                [
                    10,
                    2
                ],
                [
                    8,
                    3
                ],
                [
                    3,
                    7
                ],
                [
                    9,
                    3
                ],
                [
                    6,
                    3
                ],
                [
                    4,
                    6
                ],
                [
                    1,
                    9
                ],
                [
                    1,
                    9
                ],
                [
                    5,
                    3
                ],
                [
                    6,
                    1
                ],
                [
                    3,
                    5
                ],
                [
                    5,
                    5
                ],
                [
                    4,
                    6
                ],
                [
                    3,
                    6
                ],
                [
                    5,
                    2
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    2
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 65
    },
    {
        "title": "Shipping Industry Pallet Loading",
        "desc_split": "Rectangular packages (<items_size>) are loaded onto pallets (<bin_size>) for transportation. Packages arrive in real-time, and each must be placed immediately without knowledge of upcoming package sizes. The goal is to maximize pallet utilization with only the length and width of the packages and pallet dimensions known.",
        "desc_merge": "Rectangular packages ([[3, 3], [1, 7], [3, 1], [3, 6], [5, 2], [9, 9], [6, 3], [5, 4], [4, 5], [1, 10], [1, 9], [5, 2], [9, 10], [10, 6], [8, 5], [6, 5], [10, 10], [8, 8], [9, 10], [6, 6], [10, 1], [7, 9], [8, 8]]) are loaded onto pallets ([10, 10]) for transportation. Packages arrive in real-time, and each must be placed immediately without knowledge of upcoming package sizes. The goal is to maximize pallet utilization with only the length and width of the packages and pallet dimensions known.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    3,
                    3
                ],
                [
                    1,
                    7
                ],
                [
                    3,
                    1
                ],
                [
                    3,
                    6
                ],
                [
                    5,
                    2
                ],
                [
                    9,
                    9
                ],
                [
                    6,
                    3
                ],
                [
                    5,
                    4
                ],
                [
                    4,
                    5
                ],
                [
                    1,
                    10
                ],
                [
                    1,
                    9
                ],
                [
                    5,
                    2
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    6
                ],
                [
                    8,
                    5
                ],
                [
                    6,
                    5
                ],
                [
                    10,
                    10
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    10
                ],
                [
                    6,
                    6
                ],
                [
                    10,
                    1
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    8
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 66
    },
    {
        "title": "#Pharmaceutical Industry Blister Pack Arrangement",
        "desc_split": "# Blister pockets (<items_size>) are arranged on rectangular sheets (<bin_size>) for medication packaging. Each pocket must be placed on the sheet sequentially, without knowing subsequent pocket dimensions, while optimizing space to fit as many as possible within the sheet's length and width.",
        "desc_merge": "# Blister pockets ([[2, 1], [5, 9], [10, 2], [5, 8], [6, 4], [7, 8], [6, 10], [2, 8], [3, 5], [10, 5], [6, 4], [4, 4], [2, 4], [6, 2], [3, 5], [2, 5], [8, 5], [2, 5], [6, 6], [10, 5]]) are arranged on rectangular sheets ([10, 10]) for medication packaging. Each pocket must be placed on the sheet sequentially, without knowing subsequent pocket dimensions, while optimizing space to fit as many as possible within the sheet's length and width.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    2,
                    1
                ],
                [
                    5,
                    9
                ],
                [
                    10,
                    2
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    4
                ],
                [
                    7,
                    8
                ],
                [
                    6,
                    10
                ],
                [
                    2,
                    8
                ],
                [
                    3,
                    5
                ],
                [
                    10,
                    5
                ],
                [
                    6,
                    4
                ],
                [
                    4,
                    4
                ],
                [
                    2,
                    4
                ],
                [
                    6,
                    2
                ],
                [
                    3,
                    5
                ],
                [
                    2,
                    5
                ],
                [
                    8,
                    5
                ],
                [
                    2,
                    5
                ],
                [
                    6,
                    6
                ],
                [
                    10,
                    5
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 67
    },
    {
        "title": "Electronics Industry Circuit Board Component Placement",
        "desc_split": "Rectangular electronic components (<items_size>) are mounted onto circuit boards (<bin_size>). Components arrive one by one and must be placed immediately without foresight into future components' sizes. The goal is to maximize board utilization using only length and width constraints.",
        "desc_merge": "Rectangular electronic components ([[1, 1], [6, 4], [9, 6], [3, 9], [2, 3], [1, 1], [6, 7], [7, 8], [5, 2], [5, 5], [3, 9], [7, 10], [8, 2], [9, 10], [8, 5], [1, 6], [4, 2], [3, 7], [2, 7], [2, 7], [10, 3], [10, 9], [5, 6], [5, 1]]) are mounted onto circuit boards ([10, 10]). Components arrive one by one and must be placed immediately without foresight into future components' sizes. The goal is to maximize board utilization using only length and width constraints.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    1,
                    1
                ],
                [
                    6,
                    4
                ],
                [
                    9,
                    6
                ],
                [
                    3,
                    9
                ],
                [
                    2,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    6,
                    7
                ],
                [
                    7,
                    8
                ],
                [
                    5,
                    2
                ],
                [
                    5,
                    5
                ],
                [
                    3,
                    9
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    2
                ],
                [
                    9,
                    10
                ],
                [
                    8,
                    5
                ],
                [
                    1,
                    6
                ],
                [
                    4,
                    2
                ],
                [
                    3,
                    7
                ],
                [
                    2,
                    7
                ],
                [
                    2,
                    7
                ],
                [
                    10,
                    3
                ],
                [
                    10,
                    9
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    1
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 68
    },
    {
        "title": "Textile Industry Leather Cutting",
        "desc_split": "Animal hides (<bin_size>) are cut into smaller rectangular patches (<items_size>) for leather goods. Each patch must be cut upon its arrival, with no knowledge of future patch sizes. The objective is to minimize material waste with only length and width dimensions considered.",
        "desc_merge": "Animal hides ([10, 10]) are cut into smaller rectangular patches ([[7, 3], [7, 5], [1, 8], [9, 5], [8, 7], [8, 1], [10, 6], [7, 9], [3, 8], [7, 8], [7, 2], [1, 10], [10, 10], [9, 3], [5, 4], [3, 5], [2, 9], [8, 7], [10, 7], [3, 3], [7, 4], [1, 2]]) for leather goods. Each patch must be cut upon its arrival, with no knowledge of future patch sizes. The objective is to minimize material waste with only length and width dimensions considered.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    7,
                    3
                ],
                [
                    7,
                    5
                ],
                [
                    1,
                    8
                ],
                [
                    9,
                    5
                ],
                [
                    8,
                    7
                ],
                [
                    8,
                    1
                ],
                [
                    10,
                    6
                ],
                [
                    7,
                    9
                ],
                [
                    3,
                    8
                ],
                [
                    7,
                    8
                ],
                [
                    7,
                    2
                ],
                [
                    1,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    9,
                    3
                ],
                [
                    5,
                    4
                ],
                [
                    3,
                    5
                ],
                [
                    2,
                    9
                ],
                [
                    8,
                    7
                ],
                [
                    10,
                    7
                ],
                [
                    3,
                    3
                ],
                [
                    7,
                    4
                ],
                [
                    1,
                    2
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 69
    },
    {
        "title": "Food Industry Chocolate Bar Packaging",
        "desc_split": "Rectangular chocolate bars (<items_size>) are placed into flat rectangular packaging trays (<bin_size>) for retail. Each bar must be arranged individually without prior knowledge of subsequent bars' sizes. The challenge is to maximize the number of bars per tray utilizing only length and width constraints.",
        "desc_merge": "Rectangular chocolate bars ([[4, 4], [1, 6], [3, 8], [10, 6], [10, 2], [5, 8], [6, 1], [5, 8], [9, 5], [3, 7], [9, 8], [10, 6], [4, 5], [10, 3], [8, 6], [1, 9], [1, 3], [3, 8], [5, 2], [4, 5], [1, 2], [10, 2], [10, 5], [9, 7], [6, 4]]) are placed into flat rectangular packaging trays ([10, 10]) for retail. Each bar must be arranged individually without prior knowledge of subsequent bars' sizes. The challenge is to maximize the number of bars per tray utilizing only length and width constraints.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    4,
                    4
                ],
                [
                    1,
                    6
                ],
                [
                    3,
                    8
                ],
                [
                    10,
                    6
                ],
                [
                    10,
                    2
                ],
                [
                    5,
                    8
                ],
                [
                    6,
                    1
                ],
                [
                    5,
                    8
                ],
                [
                    9,
                    5
                ],
                [
                    3,
                    7
                ],
                [
                    9,
                    8
                ],
                [
                    10,
                    6
                ],
                [
                    4,
                    5
                ],
                [
                    10,
                    3
                ],
                [
                    8,
                    6
                ],
                [
                    1,
                    9
                ],
                [
                    1,
                    3
                ],
                [
                    3,
                    8
                ],
                [
                    5,
                    2
                ],
                [
                    4,
                    5
                ],
                [
                    1,
                    2
                ],
                [
                    10,
                    2
                ],
                [
                    10,
                    5
                ],
                [
                    9,
                    7
                ],
                [
                    6,
                    4
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 70
    },
    {
        "title": "Aerospace Industry Composite Material Layup",
        "desc_split": "Composite material sheets (<bin_size>) are cut into rectangular parts (<items_size>) for aircraft construction. The cutting must occur in an online fashion without prior awareness of upcoming part dimensions, aiming to maximize sheet utilization based only on length and width.",
        "desc_merge": "Composite material sheets ([10, 10]) are cut into rectangular parts ([[5, 8], [8, 3], [1, 1], [5, 4], [9, 2], [10, 1], [10, 9], [10, 3], [6, 1], [1, 9], [5, 8], [2, 2], [2, 8], [2, 6], [1, 1], [4, 8], [10, 7], [7, 4], [7, 2], [3, 10], [1, 3], [4, 9], [4, 5], [4, 5], [9, 10]]) for aircraft construction. The cutting must occur in an online fashion without prior awareness of upcoming part dimensions, aiming to maximize sheet utilization based only on length and width.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    5,
                    8
                ],
                [
                    8,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    5,
                    4
                ],
                [
                    9,
                    2
                ],
                [
                    10,
                    1
                ],
                [
                    10,
                    9
                ],
                [
                    10,
                    3
                ],
                [
                    6,
                    1
                ],
                [
                    1,
                    9
                ],
                [
                    5,
                    8
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    8
                ],
                [
                    2,
                    6
                ],
                [
                    1,
                    1
                ],
                [
                    4,
                    8
                ],
                [
                    10,
                    7
                ],
                [
                    7,
                    4
                ],
                [
                    7,
                    2
                ],
                [
                    3,
                    10
                ],
                [
                    1,
                    3
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    5
                ],
                [
                    9,
                    10
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 71
    },
    {
        "title": "Retail Industry Shelving Product Display",
        "desc_split": "Rectangular retail products (<items_size>) are placed on store shelves (<bin_size>) where each must be arranged upon arrival without knowing subsequent product sizes. The goal is to fit all products efficiently using only length and width measurements.",
        "desc_merge": "Rectangular retail products ([[4, 3], [7, 9], [8, 10], [8, 3], [8, 7], [9, 1], [8, 8], [4, 5], [2, 2], [5, 9], [7, 8], [10, 9], [4, 4], [5, 5], [7, 3], [4, 2], [1, 4], [9, 10], [10, 3], [4, 5], [6, 10]]) are placed on store shelves ([10, 10]) where each must be arranged upon arrival without knowing subsequent product sizes. The goal is to fit all products efficiently using only length and width measurements.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    4,
                    3
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    10
                ],
                [
                    8,
                    3
                ],
                [
                    8,
                    7
                ],
                [
                    9,
                    1
                ],
                [
                    8,
                    8
                ],
                [
                    4,
                    5
                ],
                [
                    2,
                    2
                ],
                [
                    5,
                    9
                ],
                [
                    7,
                    8
                ],
                [
                    10,
                    9
                ],
                [
                    4,
                    4
                ],
                [
                    5,
                    5
                ],
                [
                    7,
                    3
                ],
                [
                    4,
                    2
                ],
                [
                    1,
                    4
                ],
                [
                    9,
                    10
                ],
                [
                    10,
                    3
                ],
                [
                    4,
                    5
                ],
                [
                    6,
                    10
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 72
    },
    {
        "title": "Construction Industry Tile Flooring Arrangement",
        "desc_split": "Rectangular floor tiles (<items_size>) are laid out on a rectangular base (<bin_size>) in real-time. Each tile must be set without future tile dimension knowledge, maximizing coverage with only length and width constraints.",
        "desc_merge": "Rectangular floor tiles ([[4, 2], [9, 7], [10, 2], [8, 2], [2, 3], [8, 8], [1, 6], [3, 8], [5, 1], [3, 10], [4, 5], [5, 2], [4, 7], [2, 7], [1, 1], [9, 10], [7, 1], [8, 2], [4, 1], [1, 3], [5, 2]]) are laid out on a rectangular base ([10, 10]) in real-time. Each tile must be set without future tile dimension knowledge, maximizing coverage with only length and width constraints.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    4,
                    2
                ],
                [
                    9,
                    7
                ],
                [
                    10,
                    2
                ],
                [
                    8,
                    2
                ],
                [
                    2,
                    3
                ],
                [
                    8,
                    8
                ],
                [
                    1,
                    6
                ],
                [
                    3,
                    8
                ],
                [
                    5,
                    1
                ],
                [
                    3,
                    10
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    2
                ],
                [
                    4,
                    7
                ],
                [
                    2,
                    7
                ],
                [
                    1,
                    1
                ],
                [
                    9,
                    10
                ],
                [
                    7,
                    1
                ],
                [
                    8,
                    2
                ],
                [
                    4,
                    1
                ],
                [
                    1,
                    3
                ],
                [
                    5,
                    2
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 73
    },
    {
        "title": "Furniture Industry Wood Panel Cutting",
        "desc_split": "Large wooden panels (<bin_size>) are used to produce rectangular furniture components (<items_size>) like shelves and table tops. Orders arrive one by one, and each component must be cut immediately without knowledge of future component dimensions. The challenge is to minimize wood waste by optimizing panel utilization, considering only the length and width of components and panels.",
        "desc_merge": "Large wooden panels ([10, 10]) are used to produce rectangular furniture components ([[4, 3], [1, 1], [9, 3], [9, 10], [7, 4], [9, 5], [4, 1], [7, 1], [4, 5], [5, 1], [2, 7], [8, 3], [6, 1], [1, 3], [5, 8], [4, 6], [4, 5], [4, 10], [6, 8], [6, 6], [3, 4], [2, 1]]) like shelves and table tops. Orders arrive one by one, and each component must be cut immediately without knowledge of future component dimensions. The challenge is to minimize wood waste by optimizing panel utilization, considering only the length and width of components and panels.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    4,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    9,
                    3
                ],
                [
                    9,
                    10
                ],
                [
                    7,
                    4
                ],
                [
                    9,
                    5
                ],
                [
                    4,
                    1
                ],
                [
                    7,
                    1
                ],
                [
                    4,
                    5
                ],
                [
                    5,
                    1
                ],
                [
                    2,
                    7
                ],
                [
                    8,
                    3
                ],
                [
                    6,
                    1
                ],
                [
                    1,
                    3
                ],
                [
                    5,
                    8
                ],
                [
                    4,
                    6
                ],
                [
                    4,
                    5
                ],
                [
                    4,
                    10
                ],
                [
                    6,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    3,
                    4
                ],
                [
                    2,
                    1
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 74
    },
    {
        "title": "Electronics Industry Circuit Board Component Placement",
        "desc_split": "Printed circuit boards (<bin_size>) must accommodate rectangular electronic components (<items_size>) such as resistors and capacitors as they arrive sequentially from the assembly line. Each component must be placed instantly without future component dimensions, aiming to pack all components efficiently using only length and width constraints.",
        "desc_merge": "Printed circuit boards ([10, 10]) must accommodate rectangular electronic components ([[4, 3], [1, 5], [8, 10], [7, 1], [1, 7], [6, 1], [4, 9], [4, 6], [1, 1], [10, 5], [6, 8], [8, 6], [1, 7], [2, 6], [8, 8], [8, 9], [8, 6], [9, 7], [9, 4], [4, 2], [6, 7], [10, 6], [2, 5], [4, 9], [3, 10]]) such as resistors and capacitors as they arrive sequentially from the assembly line. Each component must be placed instantly without future component dimensions, aiming to pack all components efficiently using only length and width constraints.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    4,
                    3
                ],
                [
                    1,
                    5
                ],
                [
                    8,
                    10
                ],
                [
                    7,
                    1
                ],
                [
                    1,
                    7
                ],
                [
                    6,
                    1
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    6
                ],
                [
                    1,
                    1
                ],
                [
                    10,
                    5
                ],
                [
                    6,
                    8
                ],
                [
                    8,
                    6
                ],
                [
                    1,
                    7
                ],
                [
                    2,
                    6
                ],
                [
                    8,
                    8
                ],
                [
                    8,
                    9
                ],
                [
                    8,
                    6
                ],
                [
                    9,
                    7
                ],
                [
                    9,
                    4
                ],
                [
                    4,
                    2
                ],
                [
                    6,
                    7
                ],
                [
                    10,
                    6
                ],
                [
                    2,
                    5
                ],
                [
                    4,
                    9
                ],
                [
                    3,
                    10
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 75
    },
    {
        "title": "Shipping Industry Pallet Loading",
        "desc_split": "Standard shipping pallets (<bin_size>) hold rectangular boxes (<items_size>) for transport. Packages arrive unpredictably, and each box must be loaded immediately without knowing the next box's size. The goal is to fit all boxes onto pallets while maximizing space usage, considering only their length and width.",
        "desc_merge": "Standard shipping pallets ([10, 10]) hold rectangular boxes ([[6, 1], [9, 6], [1, 4], [5, 9], [6, 1], [3, 10], [7, 5], [8, 9], [2, 6], [3, 7], [10, 4], [3, 7], [6, 1], [3, 5], [2, 5], [8, 5], [2, 2], [3, 7], [7, 5], [5, 3], [6, 4], [5, 8]]) for transport. Packages arrive unpredictably, and each box must be loaded immediately without knowing the next box's size. The goal is to fit all boxes onto pallets while maximizing space usage, considering only their length and width.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    6,
                    1
                ],
                [
                    9,
                    6
                ],
                [
                    1,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    6,
                    1
                ],
                [
                    3,
                    10
                ],
                [
                    7,
                    5
                ],
                [
                    8,
                    9
                ],
                [
                    2,
                    6
                ],
                [
                    3,
                    7
                ],
                [
                    10,
                    4
                ],
                [
                    3,
                    7
                ],
                [
                    6,
                    1
                ],
                [
                    3,
                    5
                ],
                [
                    2,
                    5
                ],
                [
                    8,
                    5
                ],
                [
                    2,
                    2
                ],
                [
                    3,
                    7
                ],
                [
                    7,
                    5
                ],
                [
                    5,
                    3
                ],
                [
                    6,
                    4
                ],
                [
                    5,
                    8
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 76
    },
    {
        "title": "Aerospace Industry Composite Material Cutting",
        "desc_split": "Aircraft manufacturers cut large rectangular composite sheets (<bin_size>) into smaller parts (<items_size>) for wing and fuselage assemblies. Parts arrive continuously, and each must be placed without knowing subsequent part dimensions, minimizing sheet waste by optimizing the layout using only length and width attributes.",
        "desc_merge": "Aircraft manufacturers cut large rectangular composite sheets ([10, 10]) into smaller parts ([[9, 10], [6, 2], [3, 1], [5, 4], [6, 10], [10, 10], [7, 3], [2, 6], [9, 6], [7, 5], [10, 4], [8, 9], [1, 3], [10, 2], [9, 7], [9, 4], [1, 3], [4, 3], [4, 6], [6, 6], [3, 1], [7, 10], [1, 3]]) for wing and fuselage assemblies. Parts arrive continuously, and each must be placed without knowing subsequent part dimensions, minimizing sheet waste by optimizing the layout using only length and width attributes.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    9,
                    10
                ],
                [
                    6,
                    2
                ],
                [
                    3,
                    1
                ],
                [
                    5,
                    4
                ],
                [
                    6,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    7,
                    3
                ],
                [
                    2,
                    6
                ],
                [
                    9,
                    6
                ],
                [
                    7,
                    5
                ],
                [
                    10,
                    4
                ],
                [
                    8,
                    9
                ],
                [
                    1,
                    3
                ],
                [
                    10,
                    2
                ],
                [
                    9,
                    7
                ],
                [
                    9,
                    4
                ],
                [
                    1,
                    3
                ],
                [
                    4,
                    3
                ],
                [
                    4,
                    6
                ],
                [
                    6,
                    6
                ],
                [
                    3,
                    1
                ],
                [
                    7,
                    10
                ],
                [
                    1,
                    3
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 77
    },
    {
        "title": "Textile Industry Fabric Stitching",
        "desc_split": "Fabric rolls (<bin_size>) are stitched to create rectangular pieces (<items_size>) for garments like shirts or trousers. Orders are processed one by one, and each piece must be laid out without future piece dimensions, aiming to maximize fabric usage based solely on length and width.",
        "desc_merge": "Fabric rolls ([10, 10]) are stitched to create rectangular pieces ([[9, 10], [2, 7], [1, 10], [10, 5], [7, 4], [6, 6], [5, 6], [4, 1], [3, 5], [8, 6], [4, 10], [7, 9], [5, 2], [10, 4], [8, 1], [1, 7], [4, 1], [7, 6], [1, 5], [3, 8], [3, 10], [5, 3], [5, 2]]) for garments like shirts or trousers. Orders are processed one by one, and each piece must be laid out without future piece dimensions, aiming to maximize fabric usage based solely on length and width.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    9,
                    10
                ],
                [
                    2,
                    7
                ],
                [
                    1,
                    10
                ],
                [
                    10,
                    5
                ],
                [
                    7,
                    4
                ],
                [
                    6,
                    6
                ],
                [
                    5,
                    6
                ],
                [
                    4,
                    1
                ],
                [
                    3,
                    5
                ],
                [
                    8,
                    6
                ],
                [
                    4,
                    10
                ],
                [
                    7,
                    9
                ],
                [
                    5,
                    2
                ],
                [
                    10,
                    4
                ],
                [
                    8,
                    1
                ],
                [
                    1,
                    7
                ],
                [
                    4,
                    1
                ],
                [
                    7,
                    6
                ],
                [
                    1,
                    5
                ],
                [
                    3,
                    8
                ],
                [
                    3,
                    10
                ],
                [
                    5,
                    3
                ],
                [
                    5,
                    2
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 78
    },
    {
        "title": "Printing Industry Magazine Page Layout",
        "desc_split": "Print sheets (<bin_size>) are divided into rectangular advertising spaces (<items_size>) for magazines. Ads are submitted sequentially and must be arranged immediately without knowing future ad dimensions, maximizing sheet utilization by optimizing placement based only on length and width.",
        "desc_merge": "Print sheets ([10, 10]) are divided into rectangular advertising spaces ([[6, 5], [5, 1], [8, 9], [7, 2], [1, 5], [6, 7], [10, 1], [5, 1], [10, 7], [8, 10], [6, 7], [6, 8], [10, 7], [7, 10], [8, 3], [6, 5], [1, 5], [3, 3], [9, 6], [3, 5]]) for magazines. Ads are submitted sequentially and must be arranged immediately without knowing future ad dimensions, maximizing sheet utilization by optimizing placement based only on length and width.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    6,
                    5
                ],
                [
                    5,
                    1
                ],
                [
                    8,
                    9
                ],
                [
                    7,
                    2
                ],
                [
                    1,
                    5
                ],
                [
                    6,
                    7
                ],
                [
                    10,
                    1
                ],
                [
                    5,
                    1
                ],
                [
                    10,
                    7
                ],
                [
                    8,
                    10
                ],
                [
                    6,
                    7
                ],
                [
                    6,
                    8
                ],
                [
                    10,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    3
                ],
                [
                    6,
                    5
                ],
                [
                    1,
                    5
                ],
                [
                    3,
                    3
                ],
                [
                    9,
                    6
                ],
                [
                    3,
                    5
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 79
    },
    {
        "title": "Masonry Industry Tile Flooring Installation",
        "desc_split": "Large rectangular floor areas (<bin_size>) are tiled using small rectangular tiles (<items_size>). Tiles arrive in batches, and each batch must be positioned immediately without knowing subsequent tile dimensions. The installer must maximize coverage while considering only the length and width of tiles and floor sections.",
        "desc_merge": "Large rectangular floor areas ([10, 10]) are tiled using small rectangular tiles ([[10, 9], [1, 4], [1, 4], [6, 4], [3, 1], [8, 3], [7, 7], [7, 6], [2, 10], [2, 3], [10, 6], [4, 10], [5, 3], [1, 9], [5, 10], [5, 8], [9, 1], [9, 10], [5, 4], [7, 6], [6, 1], [6, 10], [1, 2], [10, 5]]). Tiles arrive in batches, and each batch must be positioned immediately without knowing subsequent tile dimensions. The installer must maximize coverage while considering only the length and width of tiles and floor sections.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    10,
                    9
                ],
                [
                    1,
                    4
                ],
                [
                    1,
                    4
                ],
                [
                    6,
                    4
                ],
                [
                    3,
                    1
                ],
                [
                    8,
                    3
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    6
                ],
                [
                    2,
                    10
                ],
                [
                    2,
                    3
                ],
                [
                    10,
                    6
                ],
                [
                    4,
                    10
                ],
                [
                    5,
                    3
                ],
                [
                    1,
                    9
                ],
                [
                    5,
                    10
                ],
                [
                    5,
                    8
                ],
                [
                    9,
                    1
                ],
                [
                    9,
                    10
                ],
                [
                    5,
                    4
                ],
                [
                    7,
                    6
                ],
                [
                    6,
                    1
                ],
                [
                    6,
                    10
                ],
                [
                    1,
                    2
                ],
                [
                    10,
                    5
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 80
    },
    {
        "title": "Furniture Manufacturing Wood Panel Cutting",
        "desc_split": "Large wooden boards (<bin_size>) are cut into smaller rectangular panels (<items_size>) for furniture production. Each panel must be cut as soon as its dimensions are received, without knowing future panel sizes. The goal is to minimize waste by utilizing each wooden board as efficiently as possible, considering only the length and width of the panels and boards.",
        "desc_merge": "Large wooden boards ([10, 10]) are cut into smaller rectangular panels ([[3, 9], [7, 2], [10, 6], [6, 10], [10, 2], [1, 3], [10, 9], [5, 1], [10, 9], [2, 1], [1, 9], [5, 8], [8, 6], [4, 8], [1, 7], [9, 1], [3, 2], [5, 10], [3, 2], [7, 10], [1, 6], [8, 3], [4, 1], [1, 9]]) for furniture production. Each panel must be cut as soon as its dimensions are received, without knowing future panel sizes. The goal is to minimize waste by utilizing each wooden board as efficiently as possible, considering only the length and width of the panels and boards.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    3,
                    9
                ],
                [
                    7,
                    2
                ],
                [
                    10,
                    6
                ],
                [
                    6,
                    10
                ],
                [
                    10,
                    2
                ],
                [
                    1,
                    3
                ],
                [
                    10,
                    9
                ],
                [
                    5,
                    1
                ],
                [
                    10,
                    9
                ],
                [
                    2,
                    1
                ],
                [
                    1,
                    9
                ],
                [
                    5,
                    8
                ],
                [
                    8,
                    6
                ],
                [
                    4,
                    8
                ],
                [
                    1,
                    7
                ],
                [
                    9,
                    1
                ],
                [
                    3,
                    2
                ],
                [
                    5,
                    10
                ],
                [
                    3,
                    2
                ],
                [
                    7,
                    10
                ],
                [
                    1,
                    6
                ],
                [
                    8,
                    3
                ],
                [
                    4,
                    1
                ],
                [
                    1,
                    9
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 81
    },
    {
        "title": "Electronics Industry PCB Component Placement",
        "desc_split": "Circuit boards (<bin_size>) must accommodate various rectangular electronic components (<items_size>) that arrive on a conveyor belt one by one. Components must be placed immediately without knowing the sizes of incoming ones, aiming to fit all components onto the board while optimizing space usage, considering only the length and width of the components and board.",
        "desc_merge": "Circuit boards ([10, 10]) must accommodate various rectangular electronic components ([[6, 7], [4, 3], [4, 9], [4, 3], [7, 4], [9, 6], [9, 8], [4, 3], [1, 4], [9, 1], [3, 4], [9, 5], [7, 4], [4, 1], [3, 10], [7, 4], [9, 3], [2, 3], [8, 5], [2, 9], [7, 6], [2, 9], [7, 9], [5, 7]]) that arrive on a conveyor belt one by one. Components must be placed immediately without knowing the sizes of incoming ones, aiming to fit all components onto the board while optimizing space usage, considering only the length and width of the components and board.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    6,
                    7
                ],
                [
                    4,
                    3
                ],
                [
                    4,
                    9
                ],
                [
                    4,
                    3
                ],
                [
                    7,
                    4
                ],
                [
                    9,
                    6
                ],
                [
                    9,
                    8
                ],
                [
                    4,
                    3
                ],
                [
                    1,
                    4
                ],
                [
                    9,
                    1
                ],
                [
                    3,
                    4
                ],
                [
                    9,
                    5
                ],
                [
                    7,
                    4
                ],
                [
                    4,
                    1
                ],
                [
                    3,
                    10
                ],
                [
                    7,
                    4
                ],
                [
                    9,
                    3
                ],
                [
                    2,
                    3
                ],
                [
                    8,
                    5
                ],
                [
                    2,
                    9
                ],
                [
                    7,
                    6
                ],
                [
                    2,
                    9
                ],
                [
                    7,
                    9
                ],
                [
                    5,
                    7
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 82
    },
    {
        "title": "Shipping Industry Container Loading",
        "desc_split": "Cargo containers (<bin_size>) are packed with rectangular packages (<items_size>) that arrive sequentially. Each package must be loaded immediately without knowledge of future packages' dimensions, and the challenge is to minimize the number of containers used by maximizing the utilization of each one, based solely on the length and width of the packages and containers.",
        "desc_merge": "Cargo containers ([10, 10]) are packed with rectangular packages ([[2, 2], [3, 1], [6, 4], [5, 6], [4, 1], [10, 6], [10, 4], [10, 4], [4, 7], [5, 9], [6, 5], [8, 7], [3, 3], [1, 4], [3, 10], [3, 3], [4, 1], [4, 3], [10, 1], [1, 7], [6, 6], [5, 8], [5, 5], [1, 5]]) that arrive sequentially. Each package must be loaded immediately without knowledge of future packages' dimensions, and the challenge is to minimize the number of containers used by maximizing the utilization of each one, based solely on the length and width of the packages and containers.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    2,
                    2
                ],
                [
                    3,
                    1
                ],
                [
                    6,
                    4
                ],
                [
                    5,
                    6
                ],
                [
                    4,
                    1
                ],
                [
                    10,
                    6
                ],
                [
                    10,
                    4
                ],
                [
                    10,
                    4
                ],
                [
                    4,
                    7
                ],
                [
                    5,
                    9
                ],
                [
                    6,
                    5
                ],
                [
                    8,
                    7
                ],
                [
                    3,
                    3
                ],
                [
                    1,
                    4
                ],
                [
                    3,
                    10
                ],
                [
                    3,
                    3
                ],
                [
                    4,
                    1
                ],
                [
                    4,
                    3
                ],
                [
                    10,
                    1
                ],
                [
                    1,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    5,
                    8
                ],
                [
                    5,
                    5
                ],
                [
                    1,
                    5
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 83
    },
    {
        "title": "Printing Industry Paper Layout Design",
        "desc_split": "Printers arrange rectangular images or text blocks (<items_size>) on large paper sheets (<bin_size>). Each element must be placed in real time without knowing future elements' sizes, striving to fit as many as possible onto a sheet while minimizing paper waste, considering only the length and width of the elements and sheets.",
        "desc_merge": "Printers arrange rectangular images or text blocks ([[4, 1], [3, 1], [10, 3], [4, 9], [10, 2], [8, 3], [2, 3], [7, 5], [3, 4], [8, 6], [6, 2], [2, 5], [7, 10], [2, 7], [10, 8], [5, 2], [1, 4], [3, 6], [7, 2], [6, 3], [6, 5], [8, 8], [9, 6], [1, 2]]) on large paper sheets ([10, 10]). Each element must be placed in real time without knowing future elements' sizes, striving to fit as many as possible onto a sheet while minimizing paper waste, considering only the length and width of the elements and sheets.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    4,
                    1
                ],
                [
                    3,
                    1
                ],
                [
                    10,
                    3
                ],
                [
                    4,
                    9
                ],
                [
                    10,
                    2
                ],
                [
                    8,
                    3
                ],
                [
                    2,
                    3
                ],
                [
                    7,
                    5
                ],
                [
                    3,
                    4
                ],
                [
                    8,
                    6
                ],
                [
                    6,
                    2
                ],
                [
                    2,
                    5
                ],
                [
                    7,
                    10
                ],
                [
                    2,
                    7
                ],
                [
                    10,
                    8
                ],
                [
                    5,
                    2
                ],
                [
                    1,
                    4
                ],
                [
                    3,
                    6
                ],
                [
                    7,
                    2
                ],
                [
                    6,
                    3
                ],
                [
                    6,
                    5
                ],
                [
                    8,
                    8
                ],
                [
                    9,
                    6
                ],
                [
                    1,
                    2
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 84
    },
    {
        "title": "Aerospace Industry Composite Material Cutting",
        "desc_split": "Large composite sheets (<bin_size>) are cut into rectangular parts (<items_size>) for aircraft manufacturing. Parts arrive in an online sequence and must be cut immediately, with no future part dimensions known. The aim is to maximize material utilization by optimizing the arrangement of parts, considering only their length and width.",
        "desc_merge": "Large composite sheets ([10, 10]) are cut into rectangular parts ([[1, 2], [7, 8], [8, 3], [7, 1], [5, 6], [5, 1], [9, 9], [8, 2], [9, 3], [6, 2], [6, 6], [6, 5], [4, 4], [9, 4], [2, 10], [3, 7], [3, 4], [8, 1], [3, 4], [7, 2], [6, 1], [7, 7], [9, 2], [10, 2], [6, 8]]) for aircraft manufacturing. Parts arrive in an online sequence and must be cut immediately, with no future part dimensions known. The aim is to maximize material utilization by optimizing the arrangement of parts, considering only their length and width.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    1,
                    2
                ],
                [
                    7,
                    8
                ],
                [
                    8,
                    3
                ],
                [
                    7,
                    1
                ],
                [
                    5,
                    6
                ],
                [
                    5,
                    1
                ],
                [
                    9,
                    9
                ],
                [
                    8,
                    2
                ],
                [
                    9,
                    3
                ],
                [
                    6,
                    2
                ],
                [
                    6,
                    6
                ],
                [
                    6,
                    5
                ],
                [
                    4,
                    4
                ],
                [
                    9,
                    4
                ],
                [
                    2,
                    10
                ],
                [
                    3,
                    7
                ],
                [
                    3,
                    4
                ],
                [
                    8,
                    1
                ],
                [
                    3,
                    4
                ],
                [
                    7,
                    2
                ],
                [
                    6,
                    1
                ],
                [
                    7,
                    7
                ],
                [
                    9,
                    2
                ],
                [
                    10,
                    2
                ],
                [
                    6,
                    8
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 85
    },
    {
        "title": "Warehouse Management Pallet Stacking",
        "desc_split": "Pallets (<bin_size>) are loaded with rectangular boxes (<items_size>) that arrive in real time. Each box must be stacked immediately without knowing subsequent box sizes, and the target is to minimize the number of pallets used by stacking boxes as tightly as possible, based only on the length and width of the boxes and pallets.",
        "desc_merge": "Pallets ([10, 10]) are loaded with rectangular boxes ([[6, 6], [10, 4], [3, 10], [10, 9], [9, 6], [9, 7], [4, 1], [4, 7], [8, 7], [7, 6], [4, 5], [1, 3], [7, 5], [5, 1], [2, 9], [10, 10], [9, 3], [3, 10], [2, 8], [6, 2]]) that arrive in real time. Each box must be stacked immediately without knowing subsequent box sizes, and the target is to minimize the number of pallets used by stacking boxes as tightly as possible, based only on the length and width of the boxes and pallets.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    6,
                    6
                ],
                [
                    10,
                    4
                ],
                [
                    3,
                    10
                ],
                [
                    10,
                    9
                ],
                [
                    9,
                    6
                ],
                [
                    9,
                    7
                ],
                [
                    4,
                    1
                ],
                [
                    4,
                    7
                ],
                [
                    8,
                    7
                ],
                [
                    7,
                    6
                ],
                [
                    4,
                    5
                ],
                [
                    1,
                    3
                ],
                [
                    7,
                    5
                ],
                [
                    5,
                    1
                ],
                [
                    2,
                    9
                ],
                [
                    10,
                    10
                ],
                [
                    9,
                    3
                ],
                [
                    3,
                    10
                ],
                [
                    2,
                    8
                ],
                [
                    6,
                    2
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 86
    },
    {
        "title": "Clothing Industry Leather Sheet Cutting",
        "desc_split": "Leather hides (<bin_size>) are cut into rectangular pieces (<items_size>) for shoes or bags. Each piece must be cut upon arrival, with no future piece sizes known, and the objective is to maximize the utilization of each hide by optimally arranging the pieces, considering only the length and width of the pieces and hides.",
        "desc_merge": "Leather hides ([10, 10]) are cut into rectangular pieces ([[4, 4], [6, 8], [3, 10], [10, 10], [1, 4], [4, 10], [9, 3], [10, 2], [5, 9], [3, 5], [9, 7], [7, 4], [2, 4], [1, 2], [5, 8], [2, 8], [3, 7], [7, 2], [9, 3], [8, 3], [8, 5]]) for shoes or bags. Each piece must be cut upon arrival, with no future piece sizes known, and the objective is to maximize the utilization of each hide by optimally arranging the pieces, considering only the length and width of the pieces and hides.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    4,
                    4
                ],
                [
                    6,
                    8
                ],
                [
                    3,
                    10
                ],
                [
                    10,
                    10
                ],
                [
                    1,
                    4
                ],
                [
                    4,
                    10
                ],
                [
                    9,
                    3
                ],
                [
                    10,
                    2
                ],
                [
                    5,
                    9
                ],
                [
                    3,
                    5
                ],
                [
                    9,
                    7
                ],
                [
                    7,
                    4
                ],
                [
                    2,
                    4
                ],
                [
                    1,
                    2
                ],
                [
                    5,
                    8
                ],
                [
                    2,
                    8
                ],
                [
                    3,
                    7
                ],
                [
                    7,
                    2
                ],
                [
                    9,
                    3
                ],
                [
                    8,
                    3
                ],
                [
                    8,
                    5
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 87
    },
    {
        "title": "Construction Industry Tile Flooring Installation",
        "desc_split": "Floor areas (<bin_size>) are tiled using rectangular ceramic tiles (<items_size>) that are delivered in sequence. Each tile must be laid immediately without knowing the dimensions of upcoming tiles, and the goal is to fit all tiles into the floor space with minimal waste, considering only the length and width of the tiles and floor area.",
        "desc_merge": "Floor areas ([10, 10]) are tiled using rectangular ceramic tiles ([[1, 6], [2, 7], [9, 5], [3, 9], [9, 7], [5, 3], [6, 3], [4, 9], [1, 7], [9, 10], [9, 2], [9, 4], [3, 7], [5, 5], [5, 6], [1, 8], [10, 5], [8, 4], [2, 5], [1, 8], [9, 1], [3, 9]]) that are delivered in sequence. Each tile must be laid immediately without knowing the dimensions of upcoming tiles, and the goal is to fit all tiles into the floor space with minimal waste, considering only the length and width of the tiles and floor area.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    1,
                    6
                ],
                [
                    2,
                    7
                ],
                [
                    9,
                    5
                ],
                [
                    3,
                    9
                ],
                [
                    9,
                    7
                ],
                [
                    5,
                    3
                ],
                [
                    6,
                    3
                ],
                [
                    4,
                    9
                ],
                [
                    1,
                    7
                ],
                [
                    9,
                    10
                ],
                [
                    9,
                    2
                ],
                [
                    9,
                    4
                ],
                [
                    3,
                    7
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    6
                ],
                [
                    1,
                    8
                ],
                [
                    10,
                    5
                ],
                [
                    8,
                    4
                ],
                [
                    2,
                    5
                ],
                [
                    1,
                    8
                ],
                [
                    9,
                    1
                ],
                [
                    3,
                    9
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 88
    },
    {
        "title": "Solar Industry Panel Silicon Wafer Cutting",
        "desc_split": "Silicon wafers (<bin_size>) are cut into rectangular solar cells (<items_size>) as they appear on an assembly line. Cells must be processed instantly without knowing future cell dimensions, and the challenge is to maximize wafer utilization by efficiently arranging the cells, considering only the length and width of the cells and wafers.",
        "desc_merge": "Silicon wafers ([10, 10]) are cut into rectangular solar cells ([[9, 5], [5, 2], [9, 8], [7, 8], [3, 4], [3, 6], [3, 6], [7, 2], [6, 8], [8, 5], [3, 3], [10, 1], [10, 9], [9, 9], [5, 9], [7, 1], [6, 8], [9, 8], [8, 1], [10, 1]]) as they appear on an assembly line. Cells must be processed instantly without knowing future cell dimensions, and the challenge is to maximize wafer utilization by efficiently arranging the cells, considering only the length and width of the cells and wafers.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    9,
                    5
                ],
                [
                    5,
                    2
                ],
                [
                    9,
                    8
                ],
                [
                    7,
                    8
                ],
                [
                    3,
                    4
                ],
                [
                    3,
                    6
                ],
                [
                    3,
                    6
                ],
                [
                    7,
                    2
                ],
                [
                    6,
                    8
                ],
                [
                    8,
                    5
                ],
                [
                    3,
                    3
                ],
                [
                    10,
                    1
                ],
                [
                    10,
                    9
                ],
                [
                    9,
                    9
                ],
                [
                    5,
                    9
                ],
                [
                    7,
                    1
                ],
                [
                    6,
                    8
                ],
                [
                    9,
                    8
                ],
                [
                    8,
                    1
                ],
                [
                    10,
                    1
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 89
    },
    {
        "title": "Glass Manufacturing Window Pane Cutting",
        "desc_split": "Glass sheets (<bin_size>) are cut into smaller rectangular panes (<items_size>) for windows. The panes are ordered one at a time, and each must be cut from the sheet immediately without knowing future pane dimensions. The challenge is to maximize the utilization of each glass sheet, considering only the length and width of the panes and sheets.",
        "desc_merge": "Glass sheets ([10, 10]) are cut into smaller rectangular panes ([[4, 9], [5, 1], [9, 8], [7, 1], [3, 4], [6, 4], [10, 8], [5, 10], [10, 2], [7, 9], [10, 7], [2, 10], [7, 1], [2, 3], [4, 9], [2, 2], [9, 7], [6, 6], [9, 3], [10, 1], [8, 9], [3, 2], [10, 3], [8, 8], [1, 7]]) for windows. The panes are ordered one at a time, and each must be cut from the sheet immediately without knowing future pane dimensions. The challenge is to maximize the utilization of each glass sheet, considering only the length and width of the panes and sheets.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    4,
                    9
                ],
                [
                    5,
                    1
                ],
                [
                    9,
                    8
                ],
                [
                    7,
                    1
                ],
                [
                    3,
                    4
                ],
                [
                    6,
                    4
                ],
                [
                    10,
                    8
                ],
                [
                    5,
                    10
                ],
                [
                    10,
                    2
                ],
                [
                    7,
                    9
                ],
                [
                    10,
                    7
                ],
                [
                    2,
                    10
                ],
                [
                    7,
                    1
                ],
                [
                    2,
                    3
                ],
                [
                    4,
                    9
                ],
                [
                    2,
                    2
                ],
                [
                    9,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    9,
                    3
                ],
                [
                    10,
                    1
                ],
                [
                    8,
                    9
                ],
                [
                    3,
                    2
                ],
                [
                    10,
                    3
                ],
                [
                    8,
                    8
                ],
                [
                    1,
                    7
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 90
    },
    {
        "title": "Advertising Industry Billboard Ad Placement",
        "desc_split": "Billboards (<bin_size>) display multiple rectangular advertisements (<items_size>) that arrive sequentially. Each ad must be placed on the billboard without knowledge of future ads' dimensions, and the goal is to fit all ads onto the billboard while maximizing space usage, considering only the length and width of the ads and the billboard.",
        "desc_merge": "Billboards ([10, 10]) display multiple rectangular advertisements ([[1, 4], [4, 6], [10, 4], [5, 10], [9, 10], [5, 5], [7, 9], [8, 2], [6, 3], [3, 5], [1, 5], [10, 5], [9, 2], [1, 9], [9, 7], [7, 10], [8, 3], [2, 10], [9, 1], [9, 1], [10, 10], [2, 1], [5, 5]]) that arrive sequentially. Each ad must be placed on the billboard without knowledge of future ads' dimensions, and the goal is to fit all ads onto the billboard while maximizing space usage, considering only the length and width of the ads and the billboard.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    1,
                    4
                ],
                [
                    4,
                    6
                ],
                [
                    10,
                    4
                ],
                [
                    5,
                    10
                ],
                [
                    9,
                    10
                ],
                [
                    5,
                    5
                ],
                [
                    7,
                    9
                ],
                [
                    8,
                    2
                ],
                [
                    6,
                    3
                ],
                [
                    3,
                    5
                ],
                [
                    1,
                    5
                ],
                [
                    10,
                    5
                ],
                [
                    9,
                    2
                ],
                [
                    1,
                    9
                ],
                [
                    9,
                    7
                ],
                [
                    7,
                    10
                ],
                [
                    8,
                    3
                ],
                [
                    2,
                    10
                ],
                [
                    9,
                    1
                ],
                [
                    9,
                    1
                ],
                [
                    10,
                    10
                ],
                [
                    2,
                    1
                ],
                [
                    5,
                    5
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 91
    },
    {
        "title": "Automotive Industry Metal Sheet Cutting",
        "desc_split": "Car manufacturers cut rectangular metal parts (<items_size>) from large metal sheets (<bin_size>). The parts arrive in an online fashion, and each must be placed on the sheet immediately without knowing the sizes of subsequent parts. The objective is to minimize the number of metal sheets used by optimizing the layout based solely on the length and width of the parts and sheets.",
        "desc_merge": "Car manufacturers cut rectangular metal parts ([[2, 2], [10, 3], [10, 6], [4, 4], [7, 8], [9, 8], [8, 6], [9, 6], [6, 2], [10, 10], [5, 4], [8, 4], [7, 6], [9, 9], [1, 3], [9, 9], [5, 10], [4, 1], [4, 5], [3, 8], [3, 8]]) from large metal sheets ([10, 10]). The parts arrive in an online fashion, and each must be placed on the sheet immediately without knowing the sizes of subsequent parts. The objective is to minimize the number of metal sheets used by optimizing the layout based solely on the length and width of the parts and sheets.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    2,
                    2
                ],
                [
                    10,
                    3
                ],
                [
                    10,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    7,
                    8
                ],
                [
                    9,
                    8
                ],
                [
                    8,
                    6
                ],
                [
                    9,
                    6
                ],
                [
                    6,
                    2
                ],
                [
                    10,
                    10
                ],
                [
                    5,
                    4
                ],
                [
                    8,
                    4
                ],
                [
                    7,
                    6
                ],
                [
                    9,
                    9
                ],
                [
                    1,
                    3
                ],
                [
                    9,
                    9
                ],
                [
                    5,
                    10
                ],
                [
                    4,
                    1
                ],
                [
                    4,
                    5
                ],
                [
                    3,
                    8
                ],
                [
                    3,
                    8
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 92
    },
    {
        "title": "Furniture Industry Plywood Optimization",
        "desc_split": "Plywood sheets (<bin_size>) are used to cut out rectangular components (<items_size>) for furniture production. Orders arrive dynamically, and each component must be cut without knowing the dimensions of future components, aiming to minimize plywood waste by utilizing only length and width measurements.",
        "desc_merge": "Plywood sheets ([10, 10]) are used to cut out rectangular components ([[9, 10], [10, 4], [2, 3], [9, 9], [10, 9], [9, 8], [4, 10], [1, 6], [10, 10], [10, 8], [2, 3], [4, 9], [8, 5], [9, 1], [7, 2], [6, 3], [3, 1], [4, 3], [2, 5], [3, 5], [8, 7], [3, 7], [4, 1], [9, 8], [7, 5]]) for furniture production. Orders arrive dynamically, and each component must be cut without knowing the dimensions of future components, aiming to minimize plywood waste by utilizing only length and width measurements.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    9,
                    10
                ],
                [
                    10,
                    4
                ],
                [
                    2,
                    3
                ],
                [
                    9,
                    9
                ],
                [
                    10,
                    9
                ],
                [
                    9,
                    8
                ],
                [
                    4,
                    10
                ],
                [
                    1,
                    6
                ],
                [
                    10,
                    10
                ],
                [
                    10,
                    8
                ],
                [
                    2,
                    3
                ],
                [
                    4,
                    9
                ],
                [
                    8,
                    5
                ],
                [
                    9,
                    1
                ],
                [
                    7,
                    2
                ],
                [
                    6,
                    3
                ],
                [
                    3,
                    1
                ],
                [
                    4,
                    3
                ],
                [
                    2,
                    5
                ],
                [
                    3,
                    5
                ],
                [
                    8,
                    7
                ],
                [
                    3,
                    7
                ],
                [
                    4,
                    1
                ],
                [
                    9,
                    8
                ],
                [
                    7,
                    5
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 93
    },
    {
        "title": "Shipping Industry Pallet Loading",
        "desc_split": "Pallets (<bin_size>) are loaded with rectangular packages (<items_size>) arriving in real-time. Each package must be positioned immediately without knowledge of upcoming packages, with the goal of maximizing pallet space utilization while considering only the length and width of items and pallets.",
        "desc_merge": "Pallets ([10, 10]) are loaded with rectangular packages ([[7, 7], [1, 6], [4, 10], [1, 3], [1, 5], [2, 8], [6, 6], [5, 3], [5, 3], [3, 4], [5, 9], [4, 10], [9, 8], [3, 3], [1, 6], [10, 9], [10, 1], [7, 7], [7, 9], [2, 1], [10, 9], [3, 7], [1, 1]]) arriving in real-time. Each package must be positioned immediately without knowledge of upcoming packages, with the goal of maximizing pallet space utilization while considering only the length and width of items and pallets.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    7,
                    7
                ],
                [
                    1,
                    6
                ],
                [
                    4,
                    10
                ],
                [
                    1,
                    3
                ],
                [
                    1,
                    5
                ],
                [
                    2,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    5,
                    3
                ],
                [
                    5,
                    3
                ],
                [
                    3,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    4,
                    10
                ],
                [
                    9,
                    8
                ],
                [
                    3,
                    3
                ],
                [
                    1,
                    6
                ],
                [
                    10,
                    9
                ],
                [
                    10,
                    1
                ],
                [
                    7,
                    7
                ],
                [
                    7,
                    9
                ],
                [
                    2,
                    1
                ],
                [
                    10,
                    9
                ],
                [
                    3,
                    7
                ],
                [
                    1,
                    1
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 94
    },
    {
        "title": "Textile Industry Fabric Cutting",
        "desc_split": "Fabric rolls (<bin_size>) are cut into rectangular pieces (<items_size>) for garment production. Pieces are requested one-by-one, and each must be cut on the spot without foresight into future piece sizes, striving to minimize fabric waste by optimizing placement using only length and width dimensions.",
        "desc_merge": "Fabric rolls ([10, 10]) are cut into rectangular pieces ([[2, 7], [8, 1], [9, 6], [5, 7], [4, 3], [8, 7], [10, 7], [3, 7], [6, 6], [1, 10], [7, 1], [8, 6], [7, 8], [10, 4], [10, 8], [1, 7], [6, 8], [3, 1], [5, 3], [1, 3], [10, 9], [8, 6], [9, 6], [6, 4], [1, 10]]) for garment production. Pieces are requested one-by-one, and each must be cut on the spot without foresight into future piece sizes, striving to minimize fabric waste by optimizing placement using only length and width dimensions.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    2,
                    7
                ],
                [
                    8,
                    1
                ],
                [
                    9,
                    6
                ],
                [
                    5,
                    7
                ],
                [
                    4,
                    3
                ],
                [
                    8,
                    7
                ],
                [
                    10,
                    7
                ],
                [
                    3,
                    7
                ],
                [
                    6,
                    6
                ],
                [
                    1,
                    10
                ],
                [
                    7,
                    1
                ],
                [
                    8,
                    6
                ],
                [
                    7,
                    8
                ],
                [
                    10,
                    4
                ],
                [
                    10,
                    8
                ],
                [
                    1,
                    7
                ],
                [
                    6,
                    8
                ],
                [
                    3,
                    1
                ],
                [
                    5,
                    3
                ],
                [
                    1,
                    3
                ],
                [
                    10,
                    9
                ],
                [
                    8,
                    6
                ],
                [
                    9,
                    6
                ],
                [
                    6,
                    4
                ],
                [
                    1,
                    10
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 95
    },
    {
        "title": "Electronics Industry Circuit Board Component Placement",
        "desc_split": "Rectangular electronic components (<items_size>) are placed on circuit boards (<bin_size>) in real-time during assembly. Each component must be mounted without knowing subsequent components' dimensions, aiming to fit all components on the board while considering only their length and width.",
        "desc_merge": "Rectangular electronic components ([[4, 8], [5, 4], [8, 4], [2, 3], [5, 5], [5, 10], [9, 2], [1, 5], [10, 2], [10, 3], [8, 8], [3, 6], [4, 5], [2, 5], [10, 6], [3, 8], [8, 8], [6, 9], [5, 9], [2, 2], [9, 8], [7, 5], [9, 10]]) are placed on circuit boards ([10, 10]) in real-time during assembly. Each component must be mounted without knowing subsequent components' dimensions, aiming to fit all components on the board while considering only their length and width.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    4,
                    8
                ],
                [
                    5,
                    4
                ],
                [
                    8,
                    4
                ],
                [
                    2,
                    3
                ],
                [
                    5,
                    5
                ],
                [
                    5,
                    10
                ],
                [
                    9,
                    2
                ],
                [
                    1,
                    5
                ],
                [
                    10,
                    2
                ],
                [
                    10,
                    3
                ],
                [
                    8,
                    8
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    5
                ],
                [
                    2,
                    5
                ],
                [
                    10,
                    6
                ],
                [
                    3,
                    8
                ],
                [
                    8,
                    8
                ],
                [
                    6,
                    9
                ],
                [
                    5,
                    9
                ],
                [
                    2,
                    2
                ],
                [
                    9,
                    8
                ],
                [
                    7,
                    5
                ],
                [
                    9,
                    10
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 96
    },
    {
        "title": "Publishing Industry Magazine Layout Design",
        "desc_split": "Magazine pages (<bin_size>) accommodate rectangular content blocks (<items_size>) like articles and ads that arrive sequentially. Each block must be positioned without knowledge of future blocks, with the objective of maximizing page space usage while working exclusively with length and width parameters.",
        "desc_merge": "Magazine pages ([10, 10]) accommodate rectangular content blocks ([[4, 5], [4, 8], [5, 2], [3, 2], [1, 6], [4, 4], [2, 9], [7, 5], [8, 4], [9, 10], [4, 2], [2, 4], [1, 3], [1, 1], [5, 2], [6, 10], [6, 6], [1, 4], [6, 3], [10, 5], [1, 9]]) like articles and ads that arrive sequentially. Each block must be positioned without knowledge of future blocks, with the objective of maximizing page space usage while working exclusively with length and width parameters.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    4,
                    5
                ],
                [
                    4,
                    8
                ],
                [
                    5,
                    2
                ],
                [
                    3,
                    2
                ],
                [
                    1,
                    6
                ],
                [
                    4,
                    4
                ],
                [
                    2,
                    9
                ],
                [
                    7,
                    5
                ],
                [
                    8,
                    4
                ],
                [
                    9,
                    10
                ],
                [
                    4,
                    2
                ],
                [
                    2,
                    4
                ],
                [
                    1,
                    3
                ],
                [
                    1,
                    1
                ],
                [
                    5,
                    2
                ],
                [
                    6,
                    10
                ],
                [
                    6,
                    6
                ],
                [
                    1,
                    4
                ],
                [
                    6,
                    3
                ],
                [
                    10,
                    5
                ],
                [
                    1,
                    9
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 97
    },
    {
        "title": "Food Industry Chocolate Bar Cutting",
        "desc_split": "Large chocolate slabs (<bin_size>) are divided into rectangular bars (<items_size>) for packaging. Bars are requested individually, and each must be cut without knowing future bar sizes, seeking to maximize slab utilization by optimizing cuts based purely on length and width.",
        "desc_merge": "Large chocolate slabs ([10, 10]) are divided into rectangular bars ([[1, 3], [1, 5], [9, 9], [8, 6], [2, 3], [10, 10], [7, 10], [6, 7], [10, 5], [3, 6], [4, 8], [6, 6], [7, 2], [7, 7], [3, 6], [10, 6], [2, 2], [2, 4], [1, 2], [10, 8], [10, 8], [1, 9]]) for packaging. Bars are requested individually, and each must be cut without knowing future bar sizes, seeking to maximize slab utilization by optimizing cuts based purely on length and width.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    1,
                    3
                ],
                [
                    1,
                    5
                ],
                [
                    9,
                    9
                ],
                [
                    8,
                    6
                ],
                [
                    2,
                    3
                ],
                [
                    10,
                    10
                ],
                [
                    7,
                    10
                ],
                [
                    6,
                    7
                ],
                [
                    10,
                    5
                ],
                [
                    3,
                    6
                ],
                [
                    4,
                    8
                ],
                [
                    6,
                    6
                ],
                [
                    7,
                    2
                ],
                [
                    7,
                    7
                ],
                [
                    3,
                    6
                ],
                [
                    10,
                    6
                ],
                [
                    2,
                    2
                ],
                [
                    2,
                    4
                ],
                [
                    1,
                    2
                ],
                [
                    10,
                    8
                ],
                [
                    10,
                    8
                ],
                [
                    1,
                    9
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 98
    },
    {
        "title": "Construction Industry Tile Flooring",
        "desc_split": "Floor tiles (<bin_size>) are arranged to fit rectangular room segments (<items_size>) during installation. Segments are measured and placed one at a time without knowing upcoming segment dimensions, aiming to minimize tile usage while working only with the length and width of segments and tiles.",
        "desc_merge": "Floor tiles ([10, 10]) are arranged to fit rectangular room segments ([[8, 2], [4, 10], [6, 9], [4, 7], [1, 6], [5, 4], [5, 9], [9, 3], [2, 1], [5, 7], [5, 3], [8, 6], [3, 7], [6, 9], [8, 10], [2, 1], [7, 3], [9, 9], [1, 4], [4, 9], [2, 1], [7, 2], [9, 8], [8, 7], [1, 6]]) during installation. Segments are measured and placed one at a time without knowing upcoming segment dimensions, aiming to minimize tile usage while working only with the length and width of segments and tiles.",
        "data_template": {
            "bin_size": [
                10,
                10
            ],
            "items_size": [
                [
                    8,
                    2
                ],
                [
                    4,
                    10
                ],
                [
                    6,
                    9
                ],
                [
                    4,
                    7
                ],
                [
                    1,
                    6
                ],
                [
                    5,
                    4
                ],
                [
                    5,
                    9
                ],
                [
                    9,
                    3
                ],
                [
                    2,
                    1
                ],
                [
                    5,
                    7
                ],
                [
                    5,
                    3
                ],
                [
                    8,
                    6
                ],
                [
                    3,
                    7
                ],
                [
                    6,
                    9
                ],
                [
                    8,
                    10
                ],
                [
                    2,
                    1
                ],
                [
                    7,
                    3
                ],
                [
                    9,
                    9
                ],
                [
                    1,
                    4
                ],
                [
                    4,
                    9
                ],
                [
                    2,
                    1
                ],
                [
                    7,
                    2
                ],
                [
                    9,
                    8
                ],
                [
                    8,
                    7
                ],
                [
                    1,
                    6
                ]
            ],
            "bin_status": "true",
            "can_rotate": "false",
            "dimension": "2D"
        },
        "label": "2DONBPP",
        "index": 99
    }
]